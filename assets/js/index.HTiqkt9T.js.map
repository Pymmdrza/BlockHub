{"version":3,"file":"index.HTiqkt9T.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/client.js","../../../src/utils/validation.ts","../../../src/components/Notification.tsx","../../../src/components/SearchBar.tsx","../../../node_modules/axios/lib/helpers/bind.js","../../../node_modules/axios/lib/utils.js","../../../node_modules/axios/lib/core/AxiosError.js","../../../node_modules/axios/lib/helpers/toFormData.js","../../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../../node_modules/axios/lib/helpers/buildURL.js","../../../node_modules/axios/lib/core/InterceptorManager.js","../../../node_modules/axios/lib/defaults/transitional.js","../../../node_modules/axios/lib/platform/browser/index.js","../../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../../../node_modules/axios/lib/platform/browser/classes/FormData.js","../../../node_modules/axios/lib/platform/browser/classes/Blob.js","../../../node_modules/axios/lib/platform/common/utils.js","../../../node_modules/axios/lib/platform/index.js","../../../node_modules/axios/lib/helpers/formDataToJSON.js","../../../node_modules/axios/lib/defaults/index.js","../../../node_modules/axios/lib/helpers/toURLEncodedForm.js","../../../node_modules/axios/lib/helpers/parseHeaders.js","../../../node_modules/axios/lib/core/AxiosHeaders.js","../../../node_modules/axios/lib/core/transformData.js","../../../node_modules/axios/lib/cancel/isCancel.js","../../../node_modules/axios/lib/cancel/CanceledError.js","../../../node_modules/axios/lib/core/settle.js","../../../node_modules/axios/lib/helpers/progressEventReducer.js","../../../node_modules/axios/lib/helpers/speedometer.js","../../../node_modules/axios/lib/helpers/throttle.js","../../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../node_modules/axios/lib/helpers/cookies.js","../../../node_modules/axios/lib/core/buildFullPath.js","../../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../node_modules/axios/lib/helpers/combineURLs.js","../../../node_modules/axios/lib/core/mergeConfig.js","../../../node_modules/axios/lib/helpers/resolveConfig.js","../../../node_modules/axios/lib/adapters/xhr.js","../../../node_modules/axios/lib/helpers/parseProtocol.js","../../../node_modules/axios/lib/helpers/composeSignals.js","../../../node_modules/axios/lib/helpers/trackStream.js","../../../node_modules/axios/lib/adapters/fetch.js","../../../node_modules/axios/lib/adapters/adapters.js","../../../node_modules/axios/lib/helpers/null.js","../../../node_modules/axios/lib/core/dispatchRequest.js","../../../node_modules/axios/lib/env/data.js","../../../node_modules/axios/lib/helpers/validator.js","../../../node_modules/axios/lib/core/Axios.js","../../../node_modules/axios/lib/cancel/CancelToken.js","../../../node_modules/axios/lib/helpers/HttpStatusCode.js","../../../node_modules/axios/lib/axios.js","../../../node_modules/axios/lib/helpers/spread.js","../../../node_modules/axios/lib/helpers/isAxiosError.js","../../../src/utils/blockApi.ts","../../../src/utils/api.ts","../../../src/components/ui/Card.tsx","../../../src/components/ui/Skeleton.tsx","../../../src/components/ui/StatCard.tsx","../../../src/components/ui/Spinner.tsx","../../../src/components/ui/Container.tsx","../../../src/components/ui/PageHeader.tsx","../../../src/utils/format.ts","../../../src/pages/Home.tsx","../../../src/pages/Address.tsx","../../../src/pages/Transaction.tsx","../../../src/pages/LiveTransactions.tsx","../../../src/services/websocketService.ts","../../../src/services/BlockchainWebSocket.ts","../../../src/pages/NetworkStats.tsx","../../../src/pages/MempoolExplorer.tsx","../../../src/pages/BlockExplorer.tsx","../../../src/pages/BlockDetails.tsx","../../../src/pages/About.tsx","../../../src/services/apiProxy.ts","../../../src/pages/Datasets.tsx","../../../src/components/MainNav.tsx","../../../src/components/charts/ChartCard.tsx","../../../src/components/charts/ChartCategorySelector.tsx","../../../src/components/charts/ChartTimeRangeSelector.tsx","../../../src/utils/chartsApi.ts","../../../src/pages/charts/MarketCharts.tsx","../../../src/pages/charts/BlockchainCharts.tsx","../../../src/components/charts/PieChartCard.tsx","../../../src/pages/charts/MiningCharts.tsx","../../../src/pages/charts/NetworkCharts.tsx","../../../src/pages/charts/ChartExplorer.tsx","../../../src/App.tsx","../../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// Bitcoin address validation (no changes)\nexport const isBitcoinAddress = (address: string): boolean => {\n  // Basic Bitcoin address format validation\n  const legacyFormat = /^[1][a-km-zA-HJ-NP-Z1-9]{25,34}$/; // Legacy address format (starts with 1)\n  const segwitFormat = /^[3][a-km-zA-HJ-NP-Z1-9]{25,34}$/; // SegWit address format (starts with 3)\n  const nativeSegwitFormat = /^(bc1)[a-zA-HJ-NP-Z0-9]{25,39}$/; // Native SegWit (starts with bc1)\n\n  return (\n    legacyFormat.test(address) ||\n    segwitFormat.test(address) ||\n    nativeSegwitFormat.test(address)\n  );\n};\n\n// Transaction ID validation (modified with heuristic)\nexport const isTransactionId = (txid: string): boolean => {\n  // Transaction ID must be exactly 64 characters long and contain only hexadecimal characters\n  const txidFormat = /^[a-fA-F0-9]{64}$/;\n  if (!txidFormat.test(txid)) {\n    return false; // Not a valid hex format or length\n  }\n\n  // Heuristic: Transaction IDs are less likely to start with 6 consecutive zeros\n  const leadingZeros = txid.substring(0, 6);\n  if (leadingZeros === '000000') {\n    return false; // If it starts with 6 zeros, likely a Block Hash (heuristic)\n  }\n\n  return true; // Likely a Transaction ID based on heuristic\n};\n\n// Block hash validation (modified with heuristic)\nexport const isBlockHash = (hash: string): boolean => {\n  // Block hash must be exactly 64 characters long and contain only hexadecimal characters\n  const blockHashFormat = /^[a-fA-F0-9]{64}$/;\n  if (!blockHashFormat.test(hash)) {\n    return false; // Not a valid hex format or length\n  }\n\n  // Heuristic: Block Hashes are more likely to start with 6 consecutive zeros\n  const leadingZeros = hash.substring(0, 12);\n  if (leadingZeros === '000000000000') {\n    return true; // Likely a Block Hash based on heuristic\n  }\n\n  return false; // Not likely a Block Hash based on heuristic\n};\n\n// Block height validation (no changes)\nexport const isBlockHeight = (height: number): boolean => {\n  // Current Bitcoin block height is around 800,000 as of 2025\n  // This is a simple validation to ensure the height is reasonable\n  return height >= 0 && height < 1000000;\n};","import React, { useEffect } from 'react';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\n\nexport type NotificationType = 'error' | 'success';\n\ninterface NotificationProps {\n  message: string;\n  type: NotificationType;\n  isVisible: boolean;\n  onClose: () => void;\n}\n\nexport const Notification: React.FC<NotificationProps> = ({\n  message,\n  type,\n  isVisible,\n  onClose,\n}) => {\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        onClose();\n      }, 5000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible, onClose]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 animate-fade-in\">\n      <div\n        className={`flex items-center gap-2 p-4 rounded-lg shadow-lg border ${\n          type === 'error'\n            ? 'bg-red-50 border-red-200 dark:bg-red-900/20 dark:border-red-800'\n            : 'bg-green-50 border-green-200 dark:bg-green-900/20 dark:border-green-800'\n        }`}\n      >\n        {type === 'error' ? (\n          <AlertCircle className=\"w-5 h-5 text-red-500 dark:text-red-400\" />\n        ) : (\n          <CheckCircle className=\"w-5 h-5 text-green-500 dark:text-green-400\" />\n        )}\n        <p\n          className={`text-sm font-medium ${\n            type === 'error'\n              ? 'text-red-800 dark:text-red-200'\n              : 'text-green-800 dark:text-green-200'\n          }`}\n        >\n          {message}\n        </p>\n      </div>\n    </div>\n  );\n};","import React, { useState } from 'react';\nimport { Search } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { isBitcoinAddress, isTransactionId, isBlockHash, isBlockHeight } from '../utils/validation'; // Make sure to import the updated validation functions\nimport { Notification } from './Notification';\n\nexport const SearchBar: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n  const [showNotification, setShowNotification] = useState(false);\n  const navigate = useNavigate();\n\n  const validateInput = (input: string): string | null => {\n    if (!input.trim()) {\n      return 'Please enter a search term';\n    }\n\n    const trimmedInput = input.trim(); // Trim input once to avoid repetition\n\n    // Check if it's a Bitcoin address (FIRST, because addresses are shorter and have specific prefixes)\n    if (isBitcoinAddress(trimmedInput)) {\n      return null; // Valid Bitcoin address\n    }\n\n    // Check if it's a block height (numeric)\n    if (/^\\d+$/.test(trimmedInput)) {\n      if (!isBlockHeight(parseInt(trimmedInput, 10))) {\n        return 'Invalid block height';\n      }\n      return null; // Valid block height\n    }\n\n    // Check if it's a block hash (64 hex chars and starts with zeros - heuristic)\n    if (trimmedInput.length === 64 && /^[a-fA-F0-9]+$/.test(trimmedInput)) {\n      if (isBlockHash(trimmedInput)) { // Use the updated isBlockHash function\n        return null; // Valid Block Hash (heuristic)\n      }\n      // If not likely a block hash, check if it's a Transaction ID\n      if (isTransactionId(trimmedInput)) { // Use the updated isTransactionId function\n        return null; // Valid Transaction ID (heuristic)\n      }\n      return 'Invalid Block Hash or Transaction ID format'; // Neither Block Hash nor Transaction ID (heuristic)\n    }\n\n\n    // If none of the above, and not a valid address in the first check, then it's an invalid address format\n    return 'Invalid Bitcoin address format'; // Fallback to invalid address format if not caught earlier\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const trimmedQuery = query.trim();\n    const validationError = validateInput(trimmedQuery);\n\n    if (validationError) {\n      setError(validationError);\n      setShowNotification(true);\n      return;\n    }\n\n    // Check if it's a block height (numeric) - Order is important, check block height first for numbers\n    if (/^\\d+$/.test(trimmedQuery)) {\n      navigate(`/block/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n\n    // Check if it's a block hash (64 hex chars and starts with zeros - heuristic)\n    if (trimmedQuery.length === 64 && isBlockHash(trimmedQuery)) { // Use updated isBlockHash\n      navigate(`/block/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n\n    // Check if it's a transaction ID (64 hex chars and NOT starting with many zeros - heuristic)\n    if (trimmedQuery.length === 64 && isTransactionId(trimmedQuery)) { // Use updated isTransactionId\n      navigate(`/tx/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n\n    // Must be a Bitcoin address (if it passed validation and is not block height/hash/txid)\n    navigate(`/address/${trimmedQuery}`);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSearch} className=\"w-full\">\n        <div className=\"relative group\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search by address, transaction, block hash or height...\"\n            className=\"w-full px-5 py-4 pl-5 pr-14 rounded-lg bg-[#0B1017] border border-gray-700 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent placeholder-gray-500 text-gray-100 transition-all duration-200\"\n          />\n          <button\n            type=\"submit\"\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 p-2 text-gray-400 hover:text-orange-500 transition-colors rounded-full hover:bg-gray-800\"\n          >\n            <Search className=\"w-6 h-6\" />\n          </button>\n        </div>\n      </form>\n\n      <Notification\n        message={error}\n        type=\"error\"\n        isVisible={showNotification}\n        onClose={() => setShowNotification(false)}\n      />\n    </>\n  );\n};","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.9\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from 'axios';\nimport { BlockInfo, BlockData, NetworkInfo, ChartDataPoint, TransactionResponse } from '../types';\n\n// Base URL for blockchain.info API\nconst BLOCKCHAIN_API_URL = '/block_api';\nconst API_BLOCKCHAIN = '/blockapi/'\n\n// User agents to rotate for API requests\nconst userAgents = [\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0'\n];\n\n// Get a random user agent to avoid rate limiting\nconst getRandomUserAgent = () => {\n  return userAgents[Math.floor(Math.random() * userAgents.length)];\n};\n\n// Create axios instance for blockchain.info API\nconst blockchainApi = axios.create({\n  baseURL: BLOCKCHAIN_API_URL,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000,\n  validateStatus: (status) => status >= 200 && status < 500\n});\n\n// Create axios instance for blockchain.info API\nconst blockchainapi = axios.create({\n  baseURL: API_BLOCKCHAIN,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000,\n  validateStatus: (status) => status >= 200 && status < 500\n});\n\n\n// Add request interceptor to rotate User-Agent\nblockchainApi.interceptors.request.use((config) => {\n  if (config.headers) {\n    config.headers['User-Agent'] = getRandomUserAgent();\n  }\n  return config;\n});\n// Add request interceptor to rotate User-Agent\nblockchainapi.interceptors.request.use((config) => {\n  if (config.headers) {\n    config.headers['User-Agent'] = getRandomUserAgent();\n  }\n  return config;\n});\n\n// Cache for latest block height\nlet cachedBlockHeight: number | null = null;\n\n/**\n * Get the latest block height\n */\nconst getLatestBlockHeight = async (): Promise<number> => {\n  if (cachedBlockHeight !== null) {\n    return cachedBlockHeight;\n  }\n\n  try {\n    // Try to get the latest block height from the API\n    const response = await blockchainApi.get('/latestblock?format=json');\n    if (response.data?.height) {\n      cachedBlockHeight = response.data.height;\n      return response.data.height;\n    }\n    throw new Error('Could not get latest block height');\n  } catch (error) {\n    console.warn('Failed to get latest block height:', error);\n    // Use a reasonable default\n    return 830000;\n  }\n};\n\n/**\n * Generate mock blocks for testing or API failure\n */\nconst generateMockBlocks = async (limit: number): Promise<BlockData[]> => {\n  const mockBlocks: BlockData[] = [];\n  const now = Math.floor(Date.now() / 1000);\n  const miners = ['Foundry USA', 'AntPool', 'F2Pool', 'Binance Pool', 'ViaBTC'];\n  \n  // Get the latest block height to use as starting point\n  const latestHeight = await getLatestBlockHeight();\n  \n  for (let i = 0; i < limit; i++) {\n    mockBlocks.push({\n      hash: `000000000000000000${Math.random().toString(16).substring(2, 14)}`,\n      height: latestHeight - i,\n      time: now - (i * 600), // Approximately 10 minutes per block\n      size: 1000000 + Math.floor(Math.random() * 500000),\n      txCount: 2000 + Math.floor(Math.random() * 1000),\n      miner: miners[Math.floor(Math.random() * miners.length)]\n    });\n  }\n  \n  return mockBlocks;\n};\n\n/**\n * Fetch latest blocks from blockchain.info API\n * @param limit Number of blocks to fetch\n * @returns Promise with array of BlockData objects\n */\nexport const fetchLatestBlocks = async (limit: number = 10): Promise<BlockData[]> => {\n  try {\n    // Try blockchain.info API first\n    try {\n      const response = await blockchainApi.get('/latestblock?format=json');\n      \n      if (!response.data || !Array.isArray(response.data.blocks)) {\n        throw new Error('Invalid block data format received');\n      }\n      \n      const blocks = response.data.blocks.slice(0, limit).map((block: any) => ({\n        hash: block.hash || '',\n        height: block.height || 0,\n        time: block.time || Math.floor(Date.now() / 1000),\n        size: block.size || 0,\n        txCount: block.n_tx || 0,\n        miner: extractMinerFromCoinbase(block.miner || '')\n      }));\n\n      // Update cached block height if we got valid data\n      if (blocks.length > 0 && blocks[0].height > 0) {\n        cachedBlockHeight = blocks[0].height;\n      }\n\n      return blocks;\n    } catch (primaryError) {\n      console.warn('Primary API failed, trying alternative:', primaryError);\n      \n      // Try alternative API\n      const altResponse = await axios.get('/api/v2/blocks', {\n        headers: {\n          'Accept': 'application/json',\n          'User-Agent': getRandomUserAgent()\n        }\n      });\n      \n      if (!altResponse.data) {\n        throw new Error('Invalid block data from alternative API');\n      }\n      \n      let blocks: BlockData[] = [];\n      \n      // Handle different API response structures\n      if (Array.isArray(altResponse.data)) {\n        blocks = altResponse.data.slice(0, limit);\n      } else if (altResponse.data.blocks && Array.isArray(altResponse.data.blocks)) {\n        blocks = altResponse.data.blocks.slice(0, limit);\n      } else {\n        throw new Error('Unexpected data structure from alternative API');\n      }\n\n      // Update cached block height if we got valid data\n      if (blocks.length > 0 && blocks[0].height > 0) {\n        cachedBlockHeight = blocks[0].height;\n      }\n\n      return blocks;\n    }\n  } catch (error) {\n    console.warn('All APIs failed, using mock data:', error);\n    // Return mock data instead of throwing error to ensure UI always has data to display\n    return generateMockBlocks(limit);\n  }\n};\n\n/**\n * Fetch network statistics from blockchain.info API\n * @returns Promise with NetworkInfo object\n */\nexport const fetchNetworkStats = async (): Promise<NetworkInfo> => {\n  try {\n    // Try primary API first\n    try {\n      const [stats, latestBlock, difficulty, hashRate] = await Promise.all([\n        blockchainapi.get('stats?format=json'),\n        blockchainApi.get('/latestblock?format=json'),\n        blockchainApi.get('/q/getdifficulty'),\n        blockchainApi.get('/q/hashrate')\n      ]);\n      \n      if (!stats.data) {\n        throw new Error('Invalid stats data received');\n      }\n\n      // Update cached block height\n      if (latestBlock.data?.height) {\n        cachedBlockHeight = latestBlock.data.height;\n      }\n      \n      return {\n        timestamp: Date.now(),\n        hashRate: parseFloat(hashRate.data) / 1000000000, // Convert to EH/s\n        difficulty: parseFloat(difficulty.data),\n        unconfirmedTxs: stats.data.n_btc || 0,\n        blockHeight: latestBlock.data?.height || 0,\n        latestBlockHash: latestBlock.data?.hash,\n        nextRetargetBlock: Math.ceil((latestBlock.data?.height || 0) / 2016) * 2016,\n        mempoolSize: stats.data.mempool_size || 0,\n        totalTransactions: stats.data.n_tx || 0,\n        avgBlockTime: stats.data.minutes_between_blocks || 10,\n        avgTransactionFee: stats.data.total_fees_btc ? stats.data.total_fees_btc / stats.data.n_tx : 0.0002,\n        marketCap: stats.data.market_price_usd * stats.data.totalbc,\n        txCount24h: stats.data.n_tx_24h || 0,\n        btcSent24h: stats.data.total_btc_sent || 0\n      };\n    } catch (primaryError) {\n      console.warn('Primary API failed, trying alternative:', primaryError);\n      \n      // Try alternative API\n      const altResponse = await blockchainapi.get('stats?format=json', {\n        headers: {\n          'Accept': 'application/json',\n          'User-Agent': getRandomUserAgent()\n        }\n      });\n      \n      if (!altResponse.data) {\n        throw new Error('Invalid stats data from alternative API');\n      }\n\n      // Update cached block height if available\n      if (altResponse.data.blockHeight) {\n        cachedBlockHeight = altResponse.data.blockHeight;\n      }\n      \n      return altResponse.data;\n    }\n  } catch (error) {\n    console.error('Error fetching network stats:', error);\n    // Return mock data with reasonable defaults\n    return {\n      timestamp: Date.now(),\n      hashRate: 350.5,\n      difficulty: 78.3,\n      unconfirmedTxs: 12500,\n      blockHeight: await getLatestBlockHeight(),\n      latestBlockHash: '000000000000000000' + Math.random().toString(16).substring(2, 14),\n      nextRetargetBlock: Math.ceil((await getLatestBlockHeight()) / 2016) * 2016,\n      mempoolSize: 250,\n      totalTransactions: 850000000,\n      avgBlockTime: 9.8,\n      avgTransactionFee: 0.00023,\n      marketCap: 1200000000000,\n      txCount24h: 350000,\n      btcSent24h: 250000\n    };\n  }\n};\n\n/**\n * Extract miner name from coinbase data\n */\nconst extractMinerFromCoinbase = (coinbaseData: string): string => {\n  const miningPools: Record<string, string> = {\n    '/Foundry/': 'Foundry USA',\n    '/F2Pool/': 'F2Pool',\n    '/AntPool/': 'AntPool',\n    '/ViaBTC/': 'ViaBTC',\n    '/Binance/': 'Binance Pool',\n    '/SlushPool/': 'SlushPool'\n  };\n  \n  for (const [identifier, poolName] of Object.entries(miningPools)) {\n    if (coinbaseData.includes(identifier)) {\n      return poolName;\n    }\n  }\n  \n  return coinbaseData || 'Unknown';\n};\nexport default {\n  fetchLatestBlocks,\n  fetchNetworkStats\n};","import axios from 'axios';\nimport { AddressResponse, TransactionResponse, BitcoinPrice, LiveTransaction, NetworkInfo, BlockData, BlockInfo } from '../types';\nimport blockApi from './blockApi';\nimport { isBlockHash } from './validation';\n\n// Base URL should be absolute when running in Docker\nconst API_BASE_URL = '/api/v2';\nconst BLOCKCHAIN_API_URL = '/block_api';\nconst API_BLOCKCHAIN = '/blockapi/'\n\nconst userAgents = [\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0'\n];\n\nconst getRandomUserAgent = () => {\n  return userAgents[Math.floor(Math.random() * userAgents.length)];\n};\n// Create separate axios instances for different APIs\nconst blockchainapi = axios.create({\n  baseURL: API_BLOCKCHAIN,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000, // Reduced timeout to 5 seconds\n  validateStatus: (status) => status >= 200 && status < 500\n});\n\n// Create separate axios instances for different APIs\nconst bitcoinApi = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000, // Reduced timeout to 5 seconds\n  validateStatus: (status) => status >= 200 && status < 500\n});\n\nconst blockchainApi = axios.create({\n  baseURL: BLOCKCHAIN_API_URL,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n  validateStatus: (status) => status >= 200 && status < 500\n});\n\n// Add request interceptor to rotate User-Agent\nbitcoinApi.interceptors.request.use((config) => {\n  config.headers['User-Agent'] = getRandomUserAgent();\n  return config;\n});\n\n// Add request interceptor to rotate User-Agent\nblockchainapi.interceptors.request.use((config) => {\n  config.headers['User-Agent'] = getRandomUserAgent();\n  return config;\n});\n\nblockchainApi.interceptors.request.use((config) => {\n  config.headers['User-Agent'] = getRandomUserAgent();\n  return config;\n});\n\nconst MAX_RETRIES = 1; // Reduced from 3 to 1\nconst RETRY_DELAY = 1000; // Reduced from 2000 to 1000\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst retryRequest = async <T>(fn: () => Promise<T>, retries = MAX_RETRIES): Promise<T> => {\n  try {\n    return await fn();\n  } catch (error) {\n    if (retries > 0 && axios.isAxiosError(error) && (error.response?.status ?? 500) >= 500) {\n      console.warn(`Request failed, retrying... (${retries} attempts left)`);\n      await sleep(RETRY_DELAY);\n      return retryRequest(fn, retries - 1);\n    }\n    throw error;\n  }\n};\n\nexport const fetchAddressInfo = async (address: string): Promise<AddressResponse> => {\n  try {\n    const response = await retryRequest(() => \n      bitcoinApi.get(`/address/${address}?details=txs`)\n    );\n\n    if (!response.data) {\n      throw new Error('No data received from API');\n    }\n\n    const data = response.data;\n    \n    // Process transactions to include values and timestamps\n    const processedTransactions = (data.transactions || []).map((tx: any) => ({\n      txid: tx.txid,\n      value: tx.value || '0',\n      timestamp: tx.blockTime || tx.time || Math.floor(Date.now() / 1000)\n    }));\n\n    // Sort transactions by timestamp in descending order\n    processedTransactions.sort((a: any, b: any) => b.timestamp - a.timestamp);\n\n    return {\n      address: data.address,\n      balance: data.balance || '0',\n      totalReceived: data.totalReceived || '0',\n      totalSent: data.totalSent || '0',\n      unconfirmedBalance: data.unconfirmedBalance || '0',\n      unconfirmedTxs: data.unconfirmedTxs || 0,\n      txs: data.txs || 0,\n      txids: processedTransactions.map((tx: any) => tx.txid),\n      values: processedTransactions.map((tx: any) => tx.value),\n      timestamps: processedTransactions.map((tx: any) => tx.timestamp)\n    };\n  } catch (error) {\n    console.error('Error fetching address info:', error);\n    if (axios.isAxiosError(error)) {\n      const errorMessage = error.response?.data?.message || error.message;\n      throw new Error(`Failed to fetch address info: ${errorMessage}`);\n    }\n    throw error;\n  }\n};\n\nexport const fetchTransactionInfo = async (txid: string): Promise<TransactionResponse> => {\n  try {\n    const response = await retryRequest(() => \n      bitcoinApi.get(`/tx/${txid}`)\n    );\n\n    if (!response.data) {\n      throw new Error('No data received from API');\n    }\n    \n    const data = response.data;\n\n    return {\n      txid: data.txid,\n      blockHeight: data.blockHeight || 0,\n      blockTime: data.blockTime || Math.floor(Date.now() / 1000),\n      confirmations: data.confirmations || 0,\n      fees: data.fees || '0',\n      size: data.size || 0,\n      value: data.value || '0',\n      vin: (data.vin || []).map((input: any) => ({\n        addresses: input.addresses || [],\n        value: input.value || '0'\n      })),\n      vout: (data.vout || []).map((output: any) => ({\n        addresses: output.addresses || [],\n        value: output.value || '0'\n      }))\n    };\n  } catch (error) {\n    console.error('Error fetching transaction info:', error);\n    if (axios.isAxiosError(error)) {\n      const errorMessage = error.response?.data?.message || error.message;\n      throw new Error(`Failed to fetch transaction info: ${errorMessage}`);\n    }\n    throw error;\n  }\n};\n\n\nexport const fetchBitcoinPrice = async (): Promise<BitcoinPrice> => {\n  try {\n    // Use a more reliable API endpoint with simpler data structure\n    const response = await axios.get('https://api.coingecko.com/api/v3/simple/price', {\n      params: {\n        ids: 'bitcoin',\n        vs_currencies: 'usd',\n        include_24hr_change: true\n      },\n      timeout: 10000\n    });\n    \n    if (!response.data?.bitcoin) {\n      throw new Error('Invalid price data received');\n    }\n\n    // Fix: Ensure we're working with primitive types only\n    const price = Number(response.data.bitcoin.usd) || 0;\n    const change = Number(response.data.bitcoin.usd_24h_change) || 0;\n\n    // Return a simple object with primitive values\n    return {\n      USD: {\n        last: price,\n        symbol: '$',\n        change_24h: change\n      }\n    };\n  } catch (error) {\n    console.error('Error fetching Bitcoin price:', error);\n    \n    // Return a fallback with simple primitive values\n    return {\n      USD: {\n        last: 65000 + Math.random() * 2000,\n        symbol: '$',\n        change_24h: Math.random() > 0.5 ? 1.5 + Math.random() * 3 : -1.5 - Math.random() * 3\n      }\n    };\n  }\n};\nexport const fetchLiveTransactions = async (): Promise<LiveTransaction[]> => {\n  try {\n    const response = await blockchainApi.get('/unconfirmed-transactions?format=json', {\n      timeout: 3000\n    });\n    \n    if (!response.data?.txs) {\n      throw new Error('Invalid transaction data received');\n    }\n\n    // Process the transactions to ensure we only have primitive types\n    // This prevents \"unsupported type for structured data\" errors\n    const processedTxs = (response.data.txs || []).map((tx: any) => {\n      // Process inputs to ensure they only contain primitive types\n      const inputs = (tx.inputs || []).map((input: any) => {\n        const prevOut = input.prev_out ? {\n          addr: input.prev_out.addr || '',\n          value: Number(input.prev_out.value) || 0\n        } : undefined;\n        \n        return { prev_out: prevOut };\n      });\n\n      // Process outputs to ensure they only contain primitive types\n      const outputs = (tx.out || []).map((output: any) => ({\n        value: Number(output.value) || 0,\n        addr: output.addr || ''\n      }));\n\n      // Return a sanitized transaction object\n      return {\n        hash: tx.hash || '',\n        time: Number(tx.time) || Math.floor(Date.now() / 1000),\n        inputs_value: Number(tx.inputs_value) || 0,\n        inputs: inputs,\n        out: outputs\n      };\n    });\n\n    return processedTxs;\n  } catch (error) {\n    console.error('Error fetching live transactions:', error);\n    return [];\n  }\n};\n\n// Add these helper functions\nconst extractMinerFromCoinbase = (miner: string): string => {\n  if (!miner) {\n    const miners = [\n      'Foundry USA',\n      'AntPool',\n      'F2Pool',\n      'Binance Pool',\n      'ViaBTC',\n      'SlushPool'\n    ];\n    return miners[Math.floor(Math.random() * miners.length)];\n  }\n  return miner;\n};\n\nconst generateMockBlocks = (limit: number): BlockData[] => {\n  const currentHeight = 840000; // Starting from a recent block height\n  const blocks: BlockData[] = [];\n  \n  for (let i = 0; i < limit; i++) {\n    const height = currentHeight - i;\n    // Generate a valid 64-character hex hash\n    const hash = '000000000000000000' + Array.from({ length: 46 }, () => \n      Math.floor(Math.random() * 16).toString(16)\n    ).join('');\n    \n    blocks.push({\n      hash,\n      height,\n      time: Math.floor(Date.now() / 1000) - (i * 600), // Each block 10 minutes apart\n      size: Math.floor(Math.random() * 1000000) + 500000,\n      txCount: Math.floor(Math.random() * 2000) + 1000,\n      miner: extractMinerFromCoinbase('')\n    });\n  }\n  \n  return blocks;\n};\n\nlet cachedBlockHeight = 840000; // Default to a recent block height\n\n// Export block API functions\nexport const fetchLatestBlocks = async (limit: number = 10): Promise<BlockData[]> => {\n  try {\n    // Try blockchain.info API first\n    try {\n      const response = await blockchainapi.get('/blocks?format=json');\n      \n      if (!response.data || !Array.isArray(response.data.blocks)) {\n        throw new Error('Invalid block data format received');\n      }\n      \n      const blocks = response.data.blocks.slice(0, limit).map((block: any) => {\n        // Ensure we have a valid 64-character block hash\n        const hash = block.hash || '';\n        if (!isBlockHash(hash)) {\n          console.error('Invalid block hash received:', hash);\n        }\n        \n        return {\n          hash: hash,\n          height: block.height || 0,\n          time: block.time || Math.floor(Date.now() / 1000),\n          size: block.size || 0,\n          txCount: block.n_tx || 0,\n          miner: extractMinerFromCoinbase(block.miner || '')\n        };\n      });\n\n      // Update cached block height if we got valid data\n      if (blocks.length > 0 && blocks[0].height > 0) {\n        cachedBlockHeight = blocks[0].height;\n      }\n\n      return blocks;\n    } catch (primaryError) {\n      console.warn('Primary API failed, trying alternative:', primaryError);\n      \n      // Try alternative API endpoint\n      const altResponse = await blockchainApi.get('/latestblock');\n      \n      if (!altResponse.data) {\n        throw new Error('Invalid block data from alternative API');\n      }\n      \n      const latestBlock = altResponse.data;\n      const blocks: BlockData[] = [{\n        hash: latestBlock.hash || '',\n        height: latestBlock.height || 0,\n        time: latestBlock.time || Math.floor(Date.now() / 1000),\n        size: latestBlock.size || 0,\n        txCount: latestBlock.n_tx || 0,\n        miner: extractMinerFromCoinbase(latestBlock.miner || '')\n      }];\n\n      // Update cached block height if we got valid data\n      if (blocks.length > 0 && blocks[0].height > 0) {\n        cachedBlockHeight = blocks[0].height;\n      }\n\n      return blocks;\n    }\n  } catch (error) {\n    console.warn('All APIs failed, using mock data:', error);\n    return generateMockBlocks(limit);\n  }\n};\n\nexport const fetchBlockDetails = async (hashOrHeight: string): Promise<BlockInfo> => {\n  try {\n    // Validate block hash if it's not a height\n    if (!/^\\d+$/.test(hashOrHeight) && !isBlockHash(hashOrHeight)) {\n      throw new Error('Invalid block hash format');\n    }\n\n    // Use the correct API endpoint for block details\n    const response = await retryRequest(() => \n      blockchainApi.get(`/rawblock/${hashOrHeight}`)\n    );\n\n    if (!response.data) {\n      throw new Error('No data received from API');\n    }\n    \n    const data = response.data;\n    console.log('Raw block data:', data); // Debug log\n\n    // Process the block data according to blockchain.info API format\n    const processedData: BlockInfo = {\n      hash: data.hash || '',\n      height: data.height || 0,\n      time: data.time || Math.floor(Date.now() / 1000),\n      size: data.size || 0,\n      txCount: data.n_tx || 0,\n      prevBlockHash: data.prev_block || '',\n      nextBlockHash: data.next_block || '',\n      merkleRoot: data.mrkl_root || '',\n      version: data.ver || 0,\n      bits: data.bits || 0,\n      nonce: data.nonce || 0,\n      weight: data.weight || 0,\n      difficulty: data.difficulty || 0,\n      transactions: Array.isArray(data.tx) ? data.tx.map((tx: any) => ({\n        hash: tx.hash || '',\n        size: tx.size || 0,\n        fee: tx.fee || 0,\n        time: tx.time || data.time || Math.floor(Date.now() / 1000),\n        inputs: tx.inputs || [],\n        out: tx.out || []\n      })) : [],\n      reward: calculateBlockReward(data.height || 0),\n      miner: extractMinerFromCoinbase(data.tx?.[0]?.inputs?.[0]?.script || '')\n    };\n\n    // Validate the processed data\n    if (!isBlockHash(processedData.hash)) {\n      throw new Error('Invalid block data: hash is not in correct format');\n    }\n\n    return processedData;\n  } catch (error) {\n    console.error('Error fetching block details:', error);\n    if (axios.isAxiosError(error)) {\n      const errorMessage = error.response?.data?.message || error.message;\n      throw new Error(`Failed to fetch block details: ${errorMessage}`);\n    }\n    throw error;\n  }\n};\n\n// Helper function to calculate block reward based on height\nconst calculateBlockReward = (height: number): number => {\n  const INITIAL_REWARD = 50;\n  const HALVING_INTERVAL = 210000;\n  const halvings = Math.floor(height / HALVING_INTERVAL);\n  if (halvings >= 64) return 0; // After 64 halvings, reward becomes 0\n  return INITIAL_REWARD / Math.pow(2, halvings);\n};\n\nexport const fetchNetworkStats = blockApi.fetchNetworkStats;\n//export const fetchMempoolInfo = blockApi.fetchMempoolInfo;\n//export const generateNetworkChartData = blockApi.generateNetworkChartData;\n\nexport const formatBitcoinValue = (value: string | number): string => {\n  const numValue = typeof value === 'string' ? parseFloat(value) : value;\n  if (isNaN(numValue)) return '0.00000000';\n  \n  const btcValue = numValue / 100000000;\n  \n  if (btcValue >= 1000000) {\n    return `${(btcValue / 1000000).toFixed(2)}M`;\n  }\n  if (btcValue >= 1000) {\n    return `${(btcValue / 1000).toFixed(2)}K`;\n  }\n  \n  return `${btcValue.toFixed(8)}`;\n};\n","import React from 'react';\n\ninterface CardProps {\n  children: React.ReactNode;\n  className?: string;\n  hover?: boolean;\n  onClick?: () => void;\n}\n\nexport const Card: React.FC<CardProps> = ({ \n  children, \n  className = '', \n  hover = false,\n  onClick\n}) => {\n  return (\n    <div \n      className={`card ${hover ? 'card-hover' : ''} ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const CardHeader: React.FC<{ children: React.ReactNode; className?: string }> = ({ \n  children, \n  className = '' \n}) => {\n  return (\n    <div className={`p-4 border-b border-gray-800 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport const CardTitle: React.FC<{ children: React.ReactNode; className?: string }> = ({ \n  children, \n  className = '' \n}) => {\n  return (\n    <h3 className={`text-lg font-semibold ${className}`}>\n      {children}\n    </h3>\n  );\n};\n\nexport const CardDescription: React.FC<{ children: React.ReactNode; className?: string }> = ({ \n  children, \n  className = '' \n}) => {\n  return (\n    <p className={`text-sm text-gray-400 mt-1 ${className}`}>\n      {children}\n    </p>\n  );\n};\n\nexport const CardContent: React.FC<{ children: React.ReactNode; className?: string }> = ({ \n  children, \n  className = '' \n}) => {\n  return (\n    <div className={`p-4 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport const CardFooter: React.FC<{ children: React.ReactNode; className?: string }> = ({ \n  children, \n  className = '' \n}) => {\n  return (\n    <div className={`p-4 border-t border-gray-800 ${className}`}>\n      {children}\n    </div>\n  );\n};","import React from 'react';\n\ninterface SkeletonProps {\n  className?: string;\n  height?: string | number;\n  width?: string | number;\n  borderRadius?: string;\n  animate?: boolean;\n}\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n  className = '',\n  height,\n  width,\n  borderRadius = '0.375rem',\n  animate = true\n}) => {\n  const style: React.CSSProperties = {\n    height,\n    width,\n    borderRadius\n  };\n\n  return (\n    <div \n      className={`bg-gray-800/70 ${animate ? 'animate-pulse' : ''} ${className}`}\n      style={style}\n    />\n  );\n};\n\nexport const SkeletonText: React.FC<SkeletonProps & { lines?: number }> = ({\n  className = '',\n  height = '1rem',\n  width = '100%',\n  lines = 1,\n  ...props\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      {Array.from({ length: lines }).map((_, i) => (\n        <Skeleton \n          key={i} \n          className={className} \n          height={height} \n          width={typeof width === 'string' ? width : (i === lines - 1 && lines > 1 ? `${Number(width) * 0.7}%` : width)}\n          {...props} \n        />\n      ))}\n    </div>\n  );\n};","import React from 'react';\nimport { Skeleton, SkeletonText } from './Skeleton';\nimport { LineChart, Line, ResponsiveContainer } from 'recharts';\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  icon?: React.ReactNode;\n  description?: string;\n  trend?: {\n    value: number;\n    isPositive: boolean;\n  };\n  className?: string;\n  onClick?: () => void;\n  isLoading?: boolean;\n  chartData?: Array<{ timestamp: number; value: number }>;\n  chartColor?: string;\n}\n\nexport const StatCard: React.FC<StatCardProps> = ({\n  title,\n  value,\n  icon,\n  description,\n  trend,\n  className = '',\n  onClick,\n  isLoading = false,\n  chartData,\n  chartColor = '#ED8936'\n}) => {\n  if (isLoading) {\n    return (\n      <div className={`stat-card ${onClick ? 'cursor-pointer hover:border-gray-700' : ''} ${className}`}>\n        <div className=\"stat-title\">\n          {icon}\n          <span>{title}</span>\n        </div>\n        <div className=\"h-7 mt-1 mb-2\">\n          <Skeleton height=\"1.75rem\" width=\"80%\" />\n        </div>\n        {trend && (\n          <div className=\"mt-2\">\n            <Skeleton height=\"1rem\" width=\"40%\" />\n          </div>\n        )}\n        {description && (\n          <div className=\"mt-1\">\n            <Skeleton height=\"0.75rem\" width=\"60%\" />\n          </div>\n        )}\n        {chartData && (\n          <div className=\"h-12 mt-3\">\n            <Skeleton height=\"100%\" width=\"100%\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className={`stat-card ${onClick ? 'cursor-pointer hover:border-gray-700' : ''} ${className}`}\n      onClick={onClick}\n    >\n      <div className=\"stat-title\">\n        {icon}\n        <span>{title}</span>\n      </div>\n      <div className=\"stat-value\">\n        {value}\n      </div>\n      {trend && (\n        <div className={`flex items-center mt-2 text-sm ${trend.isPositive ? 'text-green-500' : 'text-red-500'}`}>\n          <span>{trend.isPositive ? '↑' : '↓'} {Math.abs(trend.value).toFixed(2)}%</span>\n        </div>\n      )}\n      {description && (\n        <div className=\"stat-desc\">\n          {description}\n        </div>\n      )}\n      {chartData && chartData.length > 0 && (\n        <div className=\"h-12 mt-3\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart data={chartData}>\n              <Line \n                type=\"monotone\" \n                dataKey=\"value\" \n                stroke={chartColor} \n                strokeWidth={1.5}\n                dot={false}\n                isAnimationActive={false}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};","import React from 'react';\n\ninterface SpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nexport const Spinner: React.FC<SpinnerProps> = ({\n  size = 'md',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4 border',\n    md: 'w-8 h-8 border-2',\n    lg: 'w-12 h-12 border-3'\n  };\n\n  return (\n    <div className={`loading-spinner ${sizeClasses[size]} ${className}`}></div>\n  );\n};","import React from 'react';\n\ninterface ContainerProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Container: React.FC<ContainerProps> = ({\n  children,\n  className = ''\n}) => {\n  return (\n    <div className={`container-responsive ${className}`}>\n      {children}\n    </div>\n  );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowLeft } from 'lucide-react';\n\ninterface PageHeaderProps {\n  title: string;\n  description?: string;\n  icon?: React.ReactNode;\n  backLink?: string;\n  actions?: React.ReactNode;\n}\n\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  description,\n  icon,\n  backLink,\n  actions\n}) => {\n  return (\n    <div className=\"flex items-center justify-between mb-6\">\n      <div className=\"flex items-center gap-4\">\n        {backLink && (\n          <Link \n            to={backLink}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Link>\n        )}\n        <div className=\"flex items-center gap-3\">\n          {icon && (\n            <div className=\"text-orange-500\">\n              {icon}\n            </div>\n          )}\n          <div>\n            <h1 className=\"text-2xl font-bold\">{title}</h1>\n            {description && (\n              <p className=\"text-gray-400\">{description}</p>\n            )}\n          </div>\n        </div>\n      </div>\n      {actions && (\n        <div className=\"flex items-center gap-2\">\n          {actions}\n        </div>\n      )}\n    </div>\n  );\n};","export const truncateAddress = (address: string, maxLength: number = 24): string => {\n  if (!address) return '';\n  if (address.length <= maxLength) return address;\n  return `${address.slice(0, maxLength)}...`;\n};\n\nexport const formatNumber = (num: number | string, options: { notation?: 'compact' | 'standard', minimumFractionDigits?: number, maximumFractionDigits?: number } = {}): string => {\n  const value = typeof num === 'string' ? parseFloat(num) : num;\n  \n  if (isNaN(value)) return '0';\n  \n  if (options.notation === 'compact') {\n    if (Math.abs(value) >= 1e12) {\n      return (value / 1e12).toFixed(1) + 'T';\n    }\n    if (Math.abs(value) >= 1e9) {\n      return (value / 1e9).toFixed(1) + 'B';\n    }\n    if (Math.abs(value) >= 1e6) {\n      return (value / 1e6).toFixed(1) + 'M';\n    }\n    if (Math.abs(value) >= 1e3) {\n      return (value / 1e3).toFixed(1) + 'K';\n    }\n  }\n  \n  return value.toLocaleString(undefined, {\n    minimumFractionDigits: options.minimumFractionDigits,\n    maximumFractionDigits: options.maximumFractionDigits\n  });\n};\n\nexport const formatCurrency = (value: number | string, currency: string = 'USD'): string => {\n  const num = typeof value === 'string' ? parseFloat(value) : value;\n  \n  if (isNaN(num)) return '$0';\n  \n  if (Math.abs(num) >= 1e12) {\n    return `$${(num / 1e12).toFixed(2)}T`;\n  }\n  if (Math.abs(num) >= 1e9) {\n    return `$${(num / 1e9).toFixed(2)}B`;\n  }\n  if (Math.abs(num) >= 1e6) {\n    return `$${(num / 1e6).toFixed(2)}M`;\n  }\n  if (Math.abs(num) >= 1e3) {\n    return `$${(num / 1e3).toFixed(1)}K`;\n  }\n  \n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(num);\n};\n\nexport const formatBytes = (bytes: number): string => {\n  if (bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  // For GB and above, show one decimal place\n  if (i >= 3) {\n    return `${(bytes / Math.pow(k, i)).toFixed(1)} ${sizes[i]}`;\n  }\n  \n  // For MB and below, round to nearest whole number\n  return `${Math.round(bytes / Math.pow(k, i))} ${sizes[i]}`;\n};\n\nexport const formatHashRate = (hashrate: number): string => {\n  if (hashrate >= 1e9) {\n    return `${(hashrate / 1e9).toFixed(2)} EH/s`;\n  }\n  if (hashrate >= 1e6) {\n    return `${(hashrate / 1e6).toFixed(2)} PH/s`;\n  }\n  if (hashrate >= 1e3) {\n    return `${(hashrate / 1e3).toFixed(2)} TH/s`;\n  }\n  return `${hashrate.toFixed(2)} GH/s`;\n};\n\nexport const formatTimeAgo = (timestamp: number): string => {\n  const seconds = Math.floor(Date.now() / 1000 - timestamp);\n  if (seconds < 60) return `${seconds} seconds ago`;\n  if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n  if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\n  return `${Math.floor(seconds / 86400)} days ago`;\n};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SearchBar } from '../components/SearchBar';\nimport { Bitcoin, Activity, BarChart2, Clock, Database, ArrowRight, DollarSign, TrendingUp, Zap } from 'lucide-react';\nimport { fetchBitcoinPrice, fetchLatestBlocks, fetchNetworkStats } from '../utils/api';\nimport { BitcoinPrice as BitcoinPriceType, BlockData, NetworkInfo, ChartDataPoint } from '../types';\nimport { Card, CardContent, CardHeader, CardTitle, Container, StatCard, Spinner, Skeleton, SkeletonText } from '../components/ui';\nimport { formatCurrency, formatNumber } from '../utils/format';\n\nconst Home: React.FC = () => {\n  const [price, setPrice] = useState<BitcoinPriceType | null>(null);\n  const [latestBlocks, setLatestBlocks] = useState<BlockData[]>([]);\n  const [networkStats, setNetworkStats] = useState<NetworkInfo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPriceLoading, setIsPriceLoading] = useState(true);\n  const [isNetworkStatsLoading, setIsNetworkStatsLoading] = useState(true);\n  const [isBlocksLoading, setIsBlocksLoading] = useState(true);\n  const [hashRateHistory, setHashRateHistory] = useState<ChartDataPoint[]>([]);\n  const [priceHistory, setPriceHistory] = useState<ChartDataPoint[]>([]);\n  const [mempoolHistory, setMempoolHistory] = useState<ChartDataPoint[]>([]);\n  const [blockHeightHistory, setBlockHeightHistory] = useState<ChartDataPoint[]>([]);\n\n  useEffect(() => {\n    // Load data in parallel with independent loading states\n    const loadData = async () => {\n      // Load Bitcoin price\n      const loadPrice = async () => {\n        setIsPriceLoading(true);\n        try {\n          const priceData = await fetchBitcoinPrice();\n          setPrice(priceData);\n          \n          // Generate price history data\n          const now = Date.now();\n          const priceHistoryData = Array.from({ length: 20 }, (_, i) => {\n            const timestamp = now - (19 - i) * 60000;\n            // Simulate price fluctuations around the current price\n            const fluctuation = (Math.random() * 0.02) - 0.01; // -1% to +1%\n            const historicalPrice = priceData.USD.last * (1 + fluctuation);\n            return { timestamp, value: historicalPrice };\n          });\n          setPriceHistory(priceHistoryData);\n        } catch (error) {\n          console.error('Error loading price data:', error);\n        } finally {\n          setIsPriceLoading(false);\n        }\n      };\n      \n      // Load network stats\n      const loadNetworkStats = async () => {\n        setIsNetworkStatsLoading(true);\n        try {\n          const statsData = await fetchNetworkStats();\n          setNetworkStats(statsData);\n          \n          // Generate hash rate history data\n          const now = Date.now();\n          const hashRateData = Array.from({ length: 20 }, (_, i) => {\n            const timestamp = now - (19 - i) * 60000;\n            // Simulate hash rate fluctuations\n            const fluctuation = (Math.random() * 0.04) - 0.02; // -2% to +2%\n            const historicalHashRate = statsData.hashRate * (1 + fluctuation);\n            return { timestamp, value: historicalHashRate };\n          });\n          setHashRateHistory(hashRateData);\n          \n          // Generate mempool history data\n          const mempoolData = Array.from({ length: 20 }, (_, i) => {\n            const timestamp = now - (19 - i) * 60000;\n            // Simulate mempool size fluctuations\n            const fluctuation = (Math.random() * 0.1) - 0.05; // -5% to +5%\n            const historicalMempool = statsData.mempoolSize * (1 + fluctuation);\n            return { timestamp, value: historicalMempool };\n          });\n          setMempoolHistory(mempoolData);\n          \n          // Generate block height history data\n          const blockHeightData = Array.from({ length: 20 }, (_, i) => {\n            const timestamp = now - (19 - i) * 60000;\n            // Block height increases by 1 approximately every 10 minutes\n            const blocksBack = Math.floor(i / 10);\n            return { timestamp, value: statsData.blockHeight - blocksBack };\n          });\n          setBlockHeightHistory(blockHeightData);\n        } catch (error) {\n          console.error('Error loading network stats:', error);\n        } finally {\n          setIsNetworkStatsLoading(false);\n        }\n      };\n      \n      // Load latest blocks\n      const loadBlocks = async () => {\n        setIsBlocksLoading(true);\n        try {\n          const blocksData = await fetchLatestBlocks(5);\n          setLatestBlocks(blocksData);\n        } catch (error) {\n          console.error('Error loading blocks data:', error);\n        } finally {\n          setIsBlocksLoading(false);\n        }\n      };\n\n      // Start all data loading in parallel\n      await Promise.all([\n        loadPrice(),\n        loadNetworkStats(),\n        loadBlocks()\n      ]);\n      \n      setIsLoading(false);\n    };\n\n    loadData();\n    const interval = setInterval(loadData, 60000); // Update data every minute\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatTimeAgo = (timestamp: number): string => {\n    const seconds = Math.floor(Date.now() / 1000 - timestamp);\n    if (seconds < 60) return `${seconds} seconds ago`;\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\n    return `${Math.floor(seconds / 86400)} days ago`;\n  };\n\n  const formatBytes = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  };\n\n  // Calculate blocks until next retarget\n  const getBlocksUntilRetarget = (): string => {\n    if (!networkStats || !networkStats.nextRetargetBlock) return \"N/A\";\n    \n    const blocksRemaining = networkStats.nextRetargetBlock - networkStats.blockHeight;\n    if (blocksRemaining <= 0) return \"Imminent\";\n    \n    // Estimate time based on average block time\n    const minutesRemaining = blocksRemaining * networkStats.avgBlockTime;\n    const daysRemaining = minutesRemaining / (60 * 24);\n    \n    if (daysRemaining < 1) {\n      const hoursRemaining = minutesRemaining / 60;\n      return `${blocksRemaining} blocks (${Math.round(hoursRemaining)} hours)`;\n    }\n    \n    return `${blocksRemaining} blocks (${daysRemaining.toFixed(1)} days)`;\n  };\n\n  // Handle click on Latest Block card\n  const handleLatestBlockClick = () => {\n    if (networkStats && networkStats.latestBlockHash) {\n      window.location.href = `/block/${networkStats.latestBlockHash}`;\n    } else if (networkStats && networkStats.blockHeight) {\n      window.location.href = `/block/${networkStats.blockHeight}`;\n    } else {\n      window.location.href = '/blocks';\n    }\n  };\n\n  return (\n    <Container>\n      <Card className=\"mb-8\">\n        <CardContent className=\"py-8\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <h1 className=\"text-4xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-orange-500 to-orange-300\">\n              Bitcoin Explorer\n            </h1>\n            <p className=\"text-gray-400 text-lg mb-8\">\n              Search for Bitcoin addresses, transactions, and blocks to explore the Mainnet Bitcoin\n            </p>\n            <SearchBar />\n          </div>\n        </CardContent>\n      </Card>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <StatCard\n          title=\"Bitcoin Price\"\n          value={price ? formatCurrency(price.USD.last) : \"$0.00\"}\n          icon={<Bitcoin className=\"w-5 h-5\" />}\n          trend={price ? {\n            value: price.USD.change_24h,\n            isPositive: price.USD.change_24h >= 0\n          } : undefined}\n          isLoading={isPriceLoading}\n          chartData={priceHistory}\n          chartColor=\"#ED8936\"\n          description={networkStats ? `Market Cap: ${formatCurrency(networkStats.marketCap)}` : undefined}\n        />\n\n        <StatCard\n          title=\"Hash Rate\"\n          value={networkStats ? `${networkStats.hashRate.toFixed(2)} EH/s` : \"0 EH/s\"}\n          icon={<BarChart2 className=\"w-5 h-5\" />}\n          onClick={() => window.location.href = '/network'}\n          isLoading={isNetworkStatsLoading}\n          chartData={hashRateHistory}\n          chartColor=\"#3B82F6\"\n          description={networkStats ? `Difficulty: ${networkStats.difficulty.toFixed(2)} T` : undefined}\n        />\n\n        <StatCard\n          title=\"Mempool Size\"\n          value={networkStats ? `${networkStats.mempoolSize.toFixed(2)} MB` : \"0 MB\"}\n          icon={<Clock className=\"w-5 h-5\" />}\n          onClick={() => window.location.href = '/mempool'}\n          isLoading={isNetworkStatsLoading}\n          chartData={mempoolHistory}\n          chartColor=\"#10B981\"\n          description={networkStats ? `${formatNumber(networkStats.unconfirmedTxs, { notation: 'compact' })} unconfirmed txs` : undefined}\n        />\n\n        <StatCard\n          title=\"Latest Block\"\n          value={networkStats ? formatNumber(networkStats.blockHeight) : \"0\"}\n          icon={<Database className=\"w-5 h-5\" />}\n          onClick={handleLatestBlockClick}\n          isLoading={isNetworkStatsLoading}\n          chartData={blockHeightHistory}\n          chartColor=\"#8B5CF6\"\n          description={networkStats ? `Avg. block time: ${networkStats.avgBlockTime.toFixed(1)} min` : undefined}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <StatCard\n          title=\"24h Transactions\"\n          value={networkStats?.txCount24h ? formatNumber(networkStats.txCount24h, { notation: 'compact' }) : \"0\"}\n          icon={<Activity className=\"w-5 h-5\" />}\n          isLoading={isNetworkStatsLoading}\n          chartColor=\"#F59E0B\"\n        />\n\n        <StatCard\n          title=\"24h BTC Sent\"\n          value={networkStats?.btcSent24h ? `${formatNumber(networkStats.btcSent24h, { notation: 'compact' })} BTC` : \"0 BTC\"}\n          icon={<DollarSign className=\"w-5 h-5\" />}\n          isLoading={isNetworkStatsLoading}\n          chartColor=\"#EC4899\"\n        />\n\n        <StatCard\n          title=\"Avg Transaction Fee\"\n          value={networkStats ? `${networkStats.avgTransactionFee.toFixed(5)} BTC` : \"0 BTC\"}\n          icon={<TrendingUp className=\"w-5 h-5\" />}\n          isLoading={isNetworkStatsLoading}\n          chartColor=\"#6366F1\"\n        />\n\n        <StatCard\n          title=\"Block Reward\"\n          value=\"3.125 BTC\"\n          icon={<Zap className=\"w-5 h-5\" />}\n          isLoading={isNetworkStatsLoading}\n          description={`Until retarget: ${getBlocksUntilRetarget()}`}\n          chartColor=\"#EF4444\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          <Card>\n            <CardHeader className=\"flex items-center justify-between\">\n              <CardTitle>Latest Blocks</CardTitle>\n              <Link to=\"/blocks\" className=\"text-orange-500 hover:text-orange-400 text-sm flex items-center gap-1\">\n                View all <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </CardHeader>\n            \n            <CardContent className=\"p-0\">\n              {isBlocksLoading ? (\n                <div className=\"divide-y divide-gray-800\">\n                  {[...Array(5)].map((_, index) => (\n                    <div key={index} className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"bg-orange-500/10 p-2 rounded-lg\">\n                            <Database className=\"w-5 h-5 text-orange-500\" />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Skeleton height=\"1.25rem\" width=\"120px\" />\n                            <Skeleton height=\"0.875rem\" width=\"80px\" />\n                          </div>\n                        </div>\n                        <div className=\"text-right space-y-2\">\n                          <Skeleton height=\"1rem\" width=\"100px\" />\n                          <Skeleton height=\"0.875rem\" width=\"60px\" />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : latestBlocks.length > 0 ? (\n                <div className=\"divide-y divide-gray-800\">\n                  {latestBlocks.map((block, index) => (\n                    <Link\n                      key={index}\n                      to={`/block/${block.hash}`}\n                      className=\"flex items-center justify-between p-4 hover:bg-[#131c25] transition-colors\"\n                    >\n                      <div className=\"flex items-center gap-4\">\n                        <div className=\"bg-orange-500/10 p-2 rounded-lg\">\n                          <Database className=\"w-5 h-5 text-orange-500\" />\n                        </div>\n                        <div>\n                          <p className=\"font-medium\">Block #{formatNumber(block.height)}</p>\n                          <p className=\"text-sm text-gray-400\">{formatTimeAgo(block.time)}</p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-sm text-gray-300\">{formatNumber(block.txCount)} transactions</p>\n                        <p className=\"text-sm text-gray-400\">{formatBytes(block.size)}</p>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center py-12\">\n                  <div className=\"text-center\">\n                    <p className=\"text-gray-400\">No blocks found</p>\n                    <button \n                      onClick={() => setIsBlocksLoading(true)}\n                      className=\"mt-4 px-4 py-2 bg-orange-500 hover:bg-orange-600 rounded-lg text-white transition-colors\"\n                    >\n                      Retry\n                    </button>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Bitcoin Network</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Card className=\"bg-[#0B1017]\">\n              <CardContent className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Network Health</h3>\n                <div className=\"space-y-3\">\n                  <div>\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-sm text-gray-400\">Hash Rate</span>\n                      <span className=\"text-sm text-green-400\">Excellent</span>\n                    </div>\n                    <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                      <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '92%' }}></div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-sm text-gray-400\">Mempool</span>\n                      <span className=\"text-sm text-yellow-400\">Moderate</span>\n                    </div>\n                    <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                      <div className=\"bg-yellow-500 h-2 rounded-full\" style={{ width: '65%' }}></div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-sm text-gray-400\">Fee Pressure</span>\n                      <span className=\"text-sm text-orange-400\">High</span>\n                    </div>\n                    <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                      <div className=\"bg-orange-500 h-2 rounded-full\" style={{ width: '78%' }}></div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-[#0B1017]\">\n              <CardContent className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Market Overview</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">Market Cap:</span>\n                    <span className=\"text-white\">{networkStats ? formatCurrency(networkStats.marketCap) : '$0'}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">24h Volume:</span>\n                    <span className=\"text-white\">{networkStats ? formatCurrency(networkStats.btcSent24h * (price?.USD.last || 0)) : '$0'}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">Circulating Supply:</span>\n                    <span className=\"text-white\">~19.5M BTC</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">Max Supply:</span>\n                    <span className=\"text-white\">21M BTC</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-[#0B1017]\">\n              <CardContent className=\"p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Latest Updates</h3>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                    <span className=\"text-gray-300\">Network difficulty adjusted +2.3%</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\n                    <span className=\"text-gray-300\">Hash rate reached new all-time high</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 rounded-full bg-orange-500\"></div>\n                    <span className=\"text-gray-300\">Mempool size increased by 15%</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </CardContent>\n        </Card>\n      </div>\n    </Container>\n  );\n};\n\nexport default Home;\n\nexport { Home }","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchAddressInfo, formatBitcoinValue } from '../utils/api';\nimport { truncateAddress } from '../utils/format';\nimport { AddressResponse } from '../types';\nimport { \n  Loader2, \n  ArrowLeft, \n  Copy, \n  Wallet,\n  ArrowUpRight,\n  ArrowDownRight,\n  Clock,\n  AlertCircle,\n  History,\n  ArrowRight,\n  Calendar,\n  DollarSign\n} from 'lucide-react';\n\nexport const Address: React.FC = () => {\n  const { address } = useParams<{ address: string }>();\n  const [data, setData] = useState<AddressResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (!address) {\n        setError('No address provided');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await fetchAddressInfo(address);\n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred';\n        setError(errorMessage);\n        console.error('Error loading address data:', errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, [address]);\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[50vh]\">\n        <Loader2 className=\"w-8 h-8 animate-spin text-orange-500\" />\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[50vh]\">\n        <div className=\"text-center max-w-lg p-8 bg-[#0E141B] dark:bg-[#0E141B] rounded-lg shadow-lg border border-gray-800\">\n          <p className=\"text-red-500 mb-6\">{error}</p>\n          <Link \n            to=\"/\" \n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            Return to Home\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <Link \n            to=\"/\"\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Link>\n          <h1 className=\"text-2xl font-bold\">Address Details</h1>\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <div className=\"flex items-center gap-2 p-4 bg-[#0B1017] rounded-lg border border-gray-800 mb-6\">\n          <Wallet className=\"w-5 h-5 text-orange-500 flex-shrink-0\" />\n          <span \n            className=\"font-mono text-orange-500 text-sm break-all\"\n            style={{\n              wordBreak: 'break-word',\n              overflowWrap: 'break-word'\n            }}\n          >\n            {data.address}\n          </span>\n          <button \n            onClick={() => copyToClipboard(data.address)}\n            className=\"p-1 hover:bg-gray-800 rounded ml-auto flex-shrink-0\"\n            title=\"Copy address\"\n          >\n            <Copy className=\"w-4 h-4\" />\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n              <Wallet className=\"w-4 h-4\" />\n              <span>Current Balance</span>\n            </div>\n            <div className=\"text-xl font-semibold text-green-400\">\n              {formatBitcoinValue(data.balance)} BTC\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n              <ArrowUpRight className=\"w-4 h-4\" />\n              <span>Total Sent</span>\n            </div>\n            <div className=\"text-xl font-semibold text-orange-400\">\n              {formatBitcoinValue(data.totalSent)} BTC\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n              <ArrowDownRight className=\"w-4 h-4\" />\n              <span>Total Received</span>\n            </div>\n            <div className=\"text-xl font-semibold text-green-400\">\n              {formatBitcoinValue(data.totalReceived)} BTC\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n              <AlertCircle className=\"w-4 h-4\" />\n              <span>Unconfirmed Balance</span>\n            </div>\n            <div className=\"text-xl font-semibold text-yellow-400\">\n              {formatBitcoinValue(data.unconfirmedBalance)} BTC\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n              <Clock className=\"w-4 h-4\" />\n              <span>Unconfirmed Transactions</span>\n            </div>\n            <div className=\"text-xl font-semibold text-yellow-400\">\n              {data.unconfirmedTxs}\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n              <History className=\"w-4 h-4\" />\n              <span>Total Transactions</span>\n            </div>\n            <div className=\"text-xl font-semibold\">\n              {data.txs}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n          Transaction History\n          <span className=\"text-sm text-gray-400\">({data.txids.length} transactions)</span>\n        </h2>\n        <div className=\"space-y-3\">\n          {data.txids.map((txid, index) => (\n            <Link\n              key={txid}\n              to={`/tx/${txid}`}\n              className=\"flex flex-col sm:flex-row items-start sm:items-center gap-4 p-4 bg-[#0B1017] rounded-lg border border-gray-800 hover:border-gray-700 transition-colors group\"\n            >\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center gap-2 mb-2 sm:mb-0\">\n                  <span \n                    className=\"font-mono text-sm text-orange-500 group-hover:text-orange-400 break-all\"\n                    style={{\n                      wordBreak: 'break-word',\n                      overflowWrap: 'break-word'\n                    }}\n                  >\n                    {txid}\n                  </span>\n                  <Copy className=\"w-4 h-4 text-gray-500 group-hover:text-gray-400\" />\n                </div>\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-3 sm:gap-4 sm:ml-auto\">\n                <div className=\"flex items-center gap-2 bg-[#0E141B] px-3 py-1.5 rounded-lg border border-green-800/30\">\n                  <DollarSign className=\"w-3.5 h-3.5 text-green-400\" />\n                  <span className=\"text-green-400 text-xs whitespace-nowrap\">\n                    {formatBitcoinValue(data.values[index])} BTC\n                  </span>\n                </div>\n\n                <div className=\"flex items-center gap-2 bg-[#0E141B] px-3 py-1.5 rounded-lg border border-blue-800/30\">\n                  <Calendar className=\"w-3.5 h-3.5 text-blue-400\" />\n                  <span className=\"text-blue-400 text-xs whitespace-nowrap\">\n                    {new Date(data.timestamps[index] * 1000).toLocaleString()}\n                  </span>\n                </div>\n\n                <div className=\"flex items-center gap-2 text-gray-400 group-hover:text-gray-300\">\n                  <span>Details</span>\n                  <ArrowRight className=\"w-4 h-4\" />\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchTransactionInfo, formatBitcoinValue } from '../utils/api';\nimport { truncateAddress } from '../utils/format';\nimport { TransactionResponse } from '../types';\nimport { \n  Loader2, \n  ArrowLeft, \n  Copy, \n  ArrowRight,\n  Clock,\n  DollarSign,\n  Hash,\n  Layers,\n  Scale,\n  HardDrive,\n  CheckCircle2,\n  AlertCircle\n} from 'lucide-react';\n\nexport const Transaction: React.FC = () => {\n  const { txid } = useParams<{ txid: string }>();\n  const [data, setData] = useState<TransactionResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (!txid) {\n        setError('No transaction ID provided');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await fetchTransactionInfo(txid);\n        \n        if (!result || !result.txid) {\n          throw new Error('Invalid transaction data received');\n        }\n        \n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Failed to load transaction information';\n        console.error('Error loading transaction data:', err);\n        setError(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, [txid]);\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[50vh]\">\n        <Loader2 className=\"w-8 h-8 animate-spin text-orange-500\" />\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[50vh]\">\n        <div className=\"text-center max-w-lg p-8 bg-[#0E141B] dark:bg-[#0E141B] rounded-lg shadow-lg border border-gray-800\">\n          <p className=\"text-red-500 mb-6\">{error || 'Transaction data not available'}</p>\n          <Link \n            to=\"/\" \n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            Return to Home\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const confirmationStatus = data.confirmations > 0 ? (\n    <div className=\"flex items-center gap-2 text-green-400\">\n      <CheckCircle2 className=\"w-5 h-5\" />\n      <span>Confirmed ({data.confirmations} confirmations)</span>\n    </div>\n  ) : (\n    <div className=\"flex items-center gap-2 text-yellow-400\">\n      <AlertCircle className=\"w-5 h-5\" />\n      <span>Unconfirmed</span>\n    </div>\n  );\n\n  // Check if we have valid input and output data\n  const hasValidInputs = data.vin && data.vin.length > 0 && data.vin.some(input => input.addresses && input.addresses.length > 0);\n  const hasValidOutputs = data.vout && data.vout.length > 0 && data.vout.some(output => output.addresses && output.addresses.length > 0);\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <Link \n            to=\"/\"\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Link>\n          <h1 className=\"text-2xl font-bold\">Transaction Details</h1>\n        </div>\n        {confirmationStatus}\n      </div>\n\n      <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <div className=\"flex flex-col gap-4\">\n          <div className=\"flex items-center gap-2 p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <Hash className=\"w-5 h-5 text-orange-500\" />\n            <span \n              className=\"font-mono text-orange-500 text-sm break-all\"\n              style={{\n                wordBreak: 'break-word',\n                overflowWrap: 'break-word'\n              }}\n            >\n              {data.txid}\n            </span>\n            <button \n              onClick={() => copyToClipboard(data.txid)}\n              className=\"p-1 hover:bg-gray-800 rounded ml-auto flex-shrink-0\"\n              title=\"Copy transaction ID\"\n            >\n              <Copy className=\"w-4 h-4\" />\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <DollarSign className=\"w-4 h-4\" />\n                <span>Total Value</span>\n              </div>\n              <div className=\"text-xl font-semibold text-green-400\">\n                {formatBitcoinValue(data.value)} BTC\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Scale className=\"w-4 h-4\" />\n                <span>Network Fee</span>\n              </div>\n              <div className=\"text-xl font-semibold text-orange-400\">\n                {formatBitcoinValue(data.fees)} BTC\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Layers className=\"w-4 h-4\" />\n                <span>Confirmations</span>\n              </div>\n              <div className=\"text-xl font-semibold\">\n                {data.confirmations}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <HardDrive className=\"w-4 h-4\" />\n                <span>Block Height</span>\n              </div>\n              <div className=\"text-xl font-semibold\">\n                {data.blockHeight > 0 ? (\n                  <Link to={`/block/${data.blockHeight}`} className=\"text-blue-400 hover:text-blue-300\">\n                    {data.blockHeight}\n                  </Link>\n                ) : (\n                  'Unconfirmed'\n                )}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Clock className=\"w-4 h-4\" />\n                <span>Timestamp</span>\n              </div>\n              <div className=\"text-xl font-semibold\">\n                {new Date(data.blockTime * 1000).toLocaleString()}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <HardDrive className=\"w-4 h-4\" />\n                <span>Size</span>\n              </div>\n              <div className=\"text-xl font-semibold\">\n                {(data.size || 0).toLocaleString()} bytes\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {hasValidInputs ? (\n          <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n              <span className=\"text-orange-500\">Inputs</span>\n              <span className=\"text-sm text-gray-400\">({data.vin.length})</span>\n            </h2>\n            <div className=\"space-y-3\">\n              {data.vin.map((input, index) => (\n                <div key={index} className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800 hover:border-gray-700 transition-colors\">\n                  <div className=\"flex flex-col gap-3\">\n                    <div className=\"flex items-center justify-between gap-4\">\n                      <div className=\"min-w-0 flex-1\">\n                        {input.addresses && input.addresses.length > 0 ? (\n                          input.addresses.map((addr) => (\n                            <div key={addr} className=\"flex items-center gap-2\">\n                              <Link\n                                to={`/address/${addr}`}\n                                className=\"block text-orange-500 hover:text-orange-400 font-mono text-sm break-all flex-1\"\n                                style={{\n                                  wordBreak: 'break-word',\n                                  overflowWrap: 'break-word'\n                                }}\n                              >\n                                {addr}\n                              </Link>\n                              <button \n                                onClick={() => copyToClipboard(addr)}\n                                className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                                title=\"Copy address\"\n                              >\n                                <Copy className=\"w-4 h-4\" />\n                              </button>\n                            </div>\n                          ))\n                        ) : (\n                          <span className=\"text-gray-500 italic\">No address data available</span>\n                        )}\n                      </div>\n                      <div className=\"text-right whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-green-400\">\n                          {formatBitcoinValue(input.value)} BTC\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n              <span className=\"text-orange-500\">Inputs</span>\n            </h2>\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <p className=\"text-gray-400 italic\">No input data available for this transaction</p>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex justify-center\">\n          <div className=\"w-8 h-8 bg-[#0E141B] rounded-full flex items-center justify-center\">\n            <ArrowRight className=\"w-5 h-5 text-gray-500\" />\n          </div>\n        </div>\n\n        {hasValidOutputs ? (\n          <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n              <span className=\"text-green-500\">Outputs</span>\n              <span className=\"text-sm text-gray-400\">({data.vout.length})</span>\n            </h2>\n            <div className=\"space-y-3\">\n              {data.vout.map((output, index) => (\n                <div key={index} className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800 hover:border-gray-700 transition-colors\">\n                  <div className=\"flex flex-col gap-3\">\n                    <div className=\"flex items-center justify-between gap-4\">\n                      <div className=\"min-w-0 flex-1\">\n                        {output.addresses && output.addresses.length > 0 ? (\n                          output.addresses.map((addr) => (\n                            <div key={addr} className=\"flex items-center gap-2\">\n                              <Link\n                                to={`/address/${addr}`}\n                                className=\"block text-green-500 hover:text-green-400 font-mono text-sm break-all flex-1\"\n                                style={{\n                                  wordBreak: 'break-word',\n                                  overflowWrap: 'break-word'\n                                }}\n                              >\n                                {addr}\n                              </Link>\n                              <button \n                                onClick={() => copyToClipboard(addr)}\n                                className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                                title=\"Copy address\"\n                              >\n                                <Copy className=\"w-4 h-4\" />\n                              </button>\n                            </div>\n                          ))\n                        ) : (\n                          <span className=\"text-gray-500 italic\">No address data available</span>\n                        )}\n                      </div>\n                      <div className=\"text-right whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-green-400\">\n                          {formatBitcoinValue(output.value)} BTC\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-[#0E141B] dark:bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n            <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n              <span className=\"text-green-500\">Outputs</span>\n            </h2>\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <p className=\"text-gray-400 italic\">No output data available for this transaction</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchLiveTransactions } from '../utils/api';\nimport { truncateAddress } from '../utils/format';\nimport { LiveTransaction } from '../types';\nimport { Activity, ArrowLeft, ArrowRight, Copy, Filter, Clock, DollarSign } from 'lucide-react';\n\nexport const LiveTransactions: React.FC = () => {\n  const [transactions, setTransactions] = useState<LiveTransaction[]>([]);\n  const [isConnected, setIsConnected] = useState(true);\n  const [filterValue, setFilterValue] = useState<number | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchTransactions = async () => {\n    try {\n      setIsLoading(true);\n      const newTxs = await fetchLiveTransactions();\n      setTransactions(prev => {\n        const combined = [...newTxs, ...prev];\n        // Ensure unique transactions by hash\n        const uniqueTxs = Array.from(\n          new Map(combined.map(tx => [tx.hash, tx])).values()\n        );\n        return uniqueTxs.slice(0, 100);\n      });\n      setIsConnected(true);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching live transactions:', error);\n      setIsConnected(false);\n      setError('Failed to fetch live transactions. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n    const interval = setInterval(fetchTransactions, 30000); // Increased interval to 30 seconds to reduce API load\n    return () => {\n      clearInterval(interval);\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const formatTime = (timestamp: number) => {\n    const seconds = Math.floor((Date.now() - timestamp * 1000) / 1000);\n    if (seconds < 60) return `${seconds} seconds ago`;\n    const minutes = Math.floor(seconds / 60);\n    return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n  };\n\n  const formatValue = (value: number) => {\n    return (value / 100000000).toFixed(8);\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  const getTotalValue = (tx: LiveTransaction): number => {\n    return tx.out.reduce((sum, output) => sum + output.value, 0) / 100000000;\n  };\n\n  const filteredTransactions = transactions.filter(tx => {\n    if (!filterValue) return true;\n    const totalValue = getTotalValue(tx);\n    return totalValue >= filterValue;\n  });\n\n  const handleRetry = () => {\n    fetchTransactions();\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-4\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <Link \n            to=\"/\"\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Link>\n          <h1 className=\"text-2xl font-bold\">Live Transactions</h1>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Activity className={`w-4 h-4 ${isConnected ? 'text-green-500' : 'text-red-500'}`} />\n            <span className={`text-sm ${isConnected ? 'text-green-500' : 'text-red-500'}`}>\n              {isConnected ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n        <div className=\"flex items-center gap-3\">\n          <Filter className=\"w-5 h-5 text-gray-400\" />\n          <select\n            value={filterValue || ''}\n            onChange={(e) => setFilterValue(e.target.value ? Number(e.target.value) : null)}\n            className=\"bg-[#0B1017] text-gray-200 border border-gray-700 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n          >\n            <option value=\"\">All Transactions</option>\n            <option value=\"0.1\">≥ 0.1 BTC</option>\n            <option value=\"0.5\">≥ 0.5 BTC</option>\n            <option value=\"1\">≥ 1 BTC</option>\n            <option value=\"5\">≥ 5 BTC</option>\n            <option value=\"10\">≥ 10 BTC</option>\n            <option value=\"50\">≥ 50 BTC</option>\n            <option value=\"100\">≥ 100 BTC</option>\n          </select>\n          <span className=\"text-sm text-gray-400\">\n            {filterValue ? `Showing transactions ≥ ${filterValue} BTC` : 'Showing all transactions'}\n          </span>\n        </div>\n      </div>\n\n      {isLoading && transactions.length === 0 ? (\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"flex flex-col items-center gap-4\">\n            <div className=\"w-8 h-8 border-2 border-t-transparent border-orange-500 rounded-full animate-spin\"></div>\n            <p className=\"text-gray-400\">Loading transactions...</p>\n          </div>\n        </div>\n      ) : error ? (\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-red-800 text-center\">\n          <p className=\"text-red-400 mb-4\">{error}</p>\n          <button \n            onClick={handleRetry}\n            className=\"px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-lg transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {filteredTransactions.map((tx) => {\n            const totalValue = getTotalValue(tx);\n            return (\n              <div\n                key={tx.hash}\n                className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800 animate-fade-in hover:border-gray-700 transition-all\"\n              >\n                <div className=\"flex flex-col gap-4\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center justify-between border-b border-gray-800 pb-4 gap-3\">\n                    <div className=\"flex items-center gap-2 min-w-0 flex-1\">\n                      <Link\n                        to={`/tx/${tx.hash}`}\n                        className=\"font-mono text-orange-500 hover:text-orange-400 transition-colors text-sm break-all\"\n                        style={{\n                          wordBreak: 'break-word',\n                          overflowWrap: 'break-word'\n                        }}\n                      >\n                        {tx.hash}\n                      </Link>\n                      <button \n                        onClick={() => copyToClipboard(tx.hash)}\n                        className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                        title=\"Copy transaction ID\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-4 flex-shrink-0\">\n                      <div className=\"flex items-center gap-2 bg-green-900/20 px-3 py-1.5 rounded-lg border border-green-800/30\">\n                        <DollarSign className=\"w-4 h-4 text-green-400\" />\n                        <span className=\"text-green-400 font-medium\">\n                          {totalValue.toFixed(8)} BTC\n                        </span>\n                      </div>\n                      <div className=\"flex items-center gap-2 text-gray-400\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span className=\"text-sm whitespace-nowrap\">\n                          {formatTime(tx.time)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-[1fr,auto,1fr] gap-4\">\n                    <div className=\"bg-[#0B1017] rounded-lg border border-gray-800 p-3\">\n                      <div className=\"text-sm text-gray-400 mb-2\">From</div>\n                      <div className=\"space-y-2\">\n                        {tx.inputs?.map((input, index) => (\n                          input.prev_out?.addr && (\n                            <div key={`${tx.hash}-input-${index}`} className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                              <div className=\"min-w-0 flex-1\">\n                                <Link\n                                  to={`/address/${input.prev_out.addr}`}\n                                  className=\"text-orange-500 hover:text-orange-400 font-mono text-sm break-all\"\n                                  style={{\n                                    wordBreak: 'break-word',\n                                    overflowWrap: 'break-word'\n                                  }}\n                                >\n                                  {input.prev_out.addr}\n                                </Link>\n                              </div>\n                              <div className=\"text-sm text-gray-400 flex-shrink-0 whitespace-nowrap\">\n                                {formatValue(input.prev_out.value)} BTC\n                              </div>\n                            </div>\n                          )\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"flex justify-center items-center\">\n                      <div className=\"w-8 h-8 bg-[#0E141B] rounded-full flex items-center justify-center\">\n                        <ArrowRight className=\"w-5 h-5 text-gray-500\" />\n                      </div>\n                    </div>\n\n                    <div className=\"bg-[#0B1017] rounded-lg border border-gray-800 p-3\">\n                      <div className=\"text-sm text-gray-400 mb-2\">To</div>\n                      <div className=\"space-y-2\">\n                        {tx.out.map((output, index) => (\n                          output.addr && (\n                            <div key={`${tx.hash}-output-${index}`} className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                              <div className=\"min-w-0 flex-1\">\n                                <Link\n                                  to={`/address/${output.addr}`}\n                                  className=\"text-green-500 hover:text-green-400 font-mono text-sm break-all\"\n                                  style={{\n                                    wordBreak: 'break-word',\n                                    overflowWrap: 'break-word'\n                                  }}\n                                >\n                                  {output.addr}\n                                </Link>\n                              </div>\n                              <div className=\"text-sm text-gray-400 flex-shrink-0 whitespace-nowrap\">\n                                {formatValue(output.value)} BTC\n                              </div>\n                            </div>\n                          )\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {filteredTransactions.length === 0 && (\n            <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800 text-center\">\n              <p className=\"text-gray-400\">\n                {transactions.length === 0 \n                  ? 'Waiting for new transactions...' \n                  : 'No transactions match the selected filter'}\n              </p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};","import { BlockchainWebSocket } from './BlockchainWebSocket';\n\n// Create WebSocket URL based on environment\nconst getWebSocketUrl = () => {\n  // Try multiple WebSocket endpoints in order\n  const endpoints = [\n    'wss://ws.blockchain.info/inv',\n    'wss://ws.blockstream.info/ws',\n    'wss://stream.blockchain.info/inv',\n    'ws://ws.blockchain.info/inv' // Fallback to non-secure for development\n  ];\n\n  // In production, prefer secure WebSocket endpoints\n  if (window.location.protocol === 'https:') {\n    return endpoints.filter(url => url.startsWith('wss://'));\n  }\n\n  // In development, try all endpoints\n  return endpoints;\n};\n\n// Create a singleton instance with the appropriate URLs\nconst websocketService = new BlockchainWebSocket(getWebSocketUrl());\nexport default websocketService;","import { MessageCallback, ErrorCallback } from '../types';\n\nexport class BlockchainWebSocket {\n  private socket: WebSocket | null = null;\n  private isConnected = false;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectTimeout: number = 2000;\n  private subscriptions: { op: string; [key: string]: any }[] = [];\n  private messageCallbacks: Map<string, MessageCallback[]> = new Map();\n  private errorCallback: ErrorCallback | null = null;\n  private pingInterval: number | null = null;\n  private useMockData = false;\n  private currentEndpointIndex = 0;\n  private endpoints: string[];\n\n  constructor(urlOrUrls: string | string[]) {\n    this.endpoints = Array.isArray(urlOrUrls) ? urlOrUrls : [urlOrUrls];\n  }\n\n  public connect(): Promise<void> {\n    return new Promise((resolve) => {\n      try {\n        if (!('WebSocket' in window)) {\n          console.warn('WebSocket is not supported by this browser');\n          this.useMockData = true;\n          resolve();\n          return;\n        }\n\n        this.connectToEndpoint(resolve);\n      } catch (error) {\n        console.error('Error creating WebSocket:', error);\n        this.useMockData = true;\n        resolve();\n      }\n    });\n  }\n\n  private connectToEndpoint(resolve: () => void): void {\n    if (this.currentEndpointIndex >= this.endpoints.length) {\n      console.warn('All WebSocket endpoints failed, using mock data');\n      this.useMockData = true;\n      resolve();\n      return;\n    }\n\n    const endpoint = this.endpoints[this.currentEndpointIndex];\n    \n    try {\n      this.socket = new WebSocket(endpoint);\n\n      // Set a timeout for the connection\n      const connectionTimeout = setTimeout(() => {\n        if (this.socket && this.socket.readyState !== WebSocket.OPEN) {\n          console.warn(`WebSocket connection timeout for ${endpoint}`);\n          this.socket.close();\n          this.currentEndpointIndex++;\n          this.connectToEndpoint(resolve);\n        }\n      }, 5000);\n\n      this.socket.onopen = () => {\n        clearTimeout(connectionTimeout);\n        console.log('WebSocket connection established');\n        this.isConnected = true;\n        this.reconnectAttempts = 0;\n        this.useMockData = false;\n        this.resubscribe();\n        this.startPingInterval();\n        resolve();\n      };\n\n      this.socket.onmessage = this.handleMessage.bind(this);\n\n      this.socket.onerror = (error) => {\n        clearTimeout(connectionTimeout);\n        console.warn(`WebSocket error on ${endpoint}:`, error);\n        \n        if (this.errorCallback) {\n          this.errorCallback(error);\n        }\n\n        // Try next endpoint\n        this.currentEndpointIndex++;\n        this.connectToEndpoint(resolve);\n      };\n\n      this.socket.onclose = () => {\n        clearTimeout(connectionTimeout);\n        console.log('WebSocket connection closed');\n        this.isConnected = false;\n        this.stopPingInterval();\n        \n        if (!this.useMockData) {\n          this.attemptReconnect();\n        }\n      };\n    } catch (error) {\n      console.error(`Error connecting to ${endpoint}:`, error);\n      this.currentEndpointIndex++;\n      this.connectToEndpoint(resolve);\n    }\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    try {\n      const data = JSON.parse(event.data);\n      const op = data.op;\n      \n      // Sanitize data before passing to callbacks\n      const sanitizedData = this.sanitizeData(data);\n      \n      if (this.messageCallbacks.has(op)) {\n        const callbacks = this.messageCallbacks.get(op) || [];\n        callbacks.forEach(callback => callback(sanitizedData));\n      }\n    } catch (error) {\n      console.error('Error handling WebSocket message:', error);\n    }\n  }\n\n  // Sanitize data to ensure it can be cloned\n  private sanitizeData(data: any): any {\n    if (!data) return data;\n    \n    // Handle arrays\n    if (Array.isArray(data)) {\n      return data.map(item => this.sanitizeData(item));\n    }\n    \n    // Handle objects\n    if (typeof data === 'object') {\n      const sanitized: any = {};\n      \n      for (const [key, value] of Object.entries(data)) {\n        // Skip functions and symbols\n        if (typeof value === 'function' || typeof value === 'symbol') {\n          continue;\n        }\n        \n        // Convert BigInt to string\n        if (typeof value === 'bigint') {\n          sanitized[key] = value.toString();\n          continue;\n        }\n        \n        // Handle nested objects/arrays\n        if (value && typeof value === 'object') {\n          sanitized[key] = this.sanitizeData(value);\n          continue;\n        }\n        \n        // Handle primitive values\n        if (value === null || ['string', 'number', 'boolean', 'undefined'].includes(typeof value)) {\n          sanitized[key] = value;\n          continue;\n        }\n      }\n      \n      return sanitized;\n    }\n    \n    // Return primitive values as is\n    return data;\n  }\n\n  private startPingInterval(): void {\n    this.pingInterval = window.setInterval(() => {\n      this.ping();\n    }, 30000);\n  }\n\n  private stopPingInterval(): void {\n    if (this.pingInterval !== null) {\n      clearInterval(this.pingInterval);\n      this.pingInterval = null;\n    }\n  }\n\n  private ping(): void {\n    if (this.isConnected && this.socket?.readyState === WebSocket.OPEN) {\n      try {\n        this.socket.send(JSON.stringify({ op: 'ping' }));\n      } catch (error) {\n        console.warn('Error sending ping:', error);\n        this.handleConnectionFailure();\n      }\n    }\n  }\n\n  private handleConnectionFailure(): void {\n    this.useMockData = true;\n    this.isConnected = false;\n    this.socket?.close();\n    this.stopPingInterval();\n  }\n\n  private attemptReconnect(): void {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);\n      \n      setTimeout(() => {\n        this.currentEndpointIndex = 0; // Reset endpoint index\n        this.connect().catch(error => {\n          console.error('Reconnection failed:', error);\n          this.useMockData = true;\n        });\n      }, this.reconnectTimeout * this.reconnectAttempts);\n    } else {\n      console.warn('Maximum reconnection attempts reached, using mock data');\n      this.useMockData = true;\n    }\n  }\n\n  private resubscribe(): void {\n    if (this.isConnected && this.socket?.readyState === WebSocket.OPEN) {\n      this.subscriptions.forEach(subscription => {\n        try {\n          this.socket?.send(JSON.stringify(subscription));\n        } catch (error) {\n          console.warn('Error resubscribing:', error);\n        }\n      });\n    }\n  }\n\n  public subscribe(subscription: { op: string; [key: string]: any }): void {\n    if (!this.subscriptions.some(sub => JSON.stringify(sub) === JSON.stringify(subscription))) {\n      this.subscriptions.push(subscription);\n    }\n    \n    if (this.isConnected && this.socket?.readyState === WebSocket.OPEN) {\n      try {\n        this.socket.send(JSON.stringify(subscription));\n      } catch (error) {\n        console.warn('Error subscribing:', error);\n      }\n    }\n  }\n\n  public unsubscribe(op: string): void {\n    this.subscriptions = this.subscriptions.filter(sub => sub.op !== op);\n    \n    if (this.isConnected && this.socket?.readyState === WebSocket.OPEN) {\n      try {\n        this.socket.send(JSON.stringify({ op: `un${op}` }));\n      } catch (error) {\n        console.warn('Error unsubscribing:', error);\n      }\n    }\n  }\n\n  public onMessage(op: string, callback: MessageCallback): void {\n    if (!this.messageCallbacks.has(op)) {\n      this.messageCallbacks.set(op, []);\n    }\n    \n    const callbacks = this.messageCallbacks.get(op) || [];\n    callbacks.push(callback);\n    this.messageCallbacks.set(op, callbacks);\n  }\n\n  public onError(callback: ErrorCallback): void {\n    this.errorCallback = callback;\n  }\n\n  public disconnect(): void {\n    this.stopPingInterval();\n    if (this.socket) {\n      try {\n        this.socket.close();\n      } catch (error) {\n        console.warn('Error closing WebSocket:', error);\n      }\n      this.socket = null;\n    }\n    this.isConnected = false;\n  }\n\n  public isUsingMockData(): boolean {\n    return this.useMockData;\n  }\n\n  // Subscription methods for different data types\n  public subscribeToNewBlocks(): void {\n    this.subscribe({ op: 'blocks_sub' });\n  }\n\n  public unsubscribeFromNewBlocks(): void {\n    this.unsubscribe('blocks_sub');\n  }\n\n  public subscribeToNewTransactions(): void {\n    this.subscribe({ op: 'unconfirmed_sub' });\n  }\n\n  public unsubscribeFromNewTransactions(): void {\n    this.unsubscribe('unconfirmed_sub');\n  }\n\n  public subscribeToAddress(address: string): void {\n    this.subscribe({ op: 'addr_sub', addr: address });\n  }\n\n  public unsubscribeFromAddress(address: string): void {\n    this.unsubscribe('addr_sub');\n  }\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { BarChart2, TrendingUp, Clock, Database, Zap, Server, DollarSign, Activity } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area, Legend } from 'recharts';\nimport websocketService from '../services/websocketService';\nimport { fetchNetworkStats } from '../utils/api';\nimport { NetworkInfo, ChartDataPoint } from '../types';\nimport { Card, CardContent, CardHeader, CardTitle, Container, PageHeader, Spinner, Skeleton } from '../components/ui';\n\nexport const NetworkStats: React.FC = () => {\n  const [stats, setStats] = useState<NetworkInfo | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [hashRateHistory, setHashRateHistory] = useState<ChartDataPoint[]>([]);\n  const [difficultyHistory, setDifficultyHistory] = useState<ChartDataPoint[]>([]);\n  const [mempoolHistory, setMempoolHistory] = useState<ChartDataPoint[]>([]);\n  const [feeHistory, setFeeHistory] = useState<ChartDataPoint[]>([]);\n  const [txCountHistory, setTxCountHistory] = useState<ChartDataPoint[]>([]);\n  const [btcSentHistory, setBtcSentHistory] = useState<ChartDataPoint[]>([]);\n  const [newBlockCount, setNewBlockCount] = useState(0);\n  const [newTxCount, setNewTxCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Update interval in milliseconds (1 hour)\n  const UPDATE_INTERVAL = 60 * 60 * 1000;\n  \n  // Number of data points to display in charts (24 hours)\n  const DATA_POINTS = 24;\n\n  useEffect(() => {\n    // First load network stats from API\n    const loadInitialStats = async () => {\n      setIsLoading(true);\n      try {\n        const networkStats = await fetchNetworkStats();\n        setStats(networkStats);\n        \n        // Initialize chart data with the fetched stats\n        const now = Date.now();\n        \n        // Generate historical data points with hourly intervals (24 hours)\n        const hourlyInterval = 60 * 60 * 1000; // 1 hour in milliseconds\n        \n        // Create timestamps for the last 24 hours (one per hour)\n        const timestamps = Array.from({ length: DATA_POINTS }, (_, i) => \n          now - (DATA_POINTS - 1 - i) * hourlyInterval\n        );\n        \n        // Initialize hash rate history - realistic daily pattern\n        // Hash rate typically shows a gradual increase with occasional dips\n        const initialHashRate = timestamps.map((timestamp, i) => {\n          // Base value with slight upward trend\n          const baseValue = networkStats.hashRate * 0.95;\n          // Daily pattern with maintenance dips\n          const hourOfDay = new Date(timestamp).getHours();\n          // Hash rate often dips during early morning hours (3-5 AM)\n          const timeOfDayFactor = hourOfDay >= 3 && hourOfDay <= 5 \n            ? 0.92 + (Math.random() * 0.03) \n            : 1.0 + (Math.random() * 0.05);\n          \n          return {\n            timestamp,\n            value: baseValue * (1 + (i / DATA_POINTS) * 0.1) * timeOfDayFactor\n          };\n        });\n        setHashRateHistory(initialHashRate);\n        \n        // Initialize difficulty history - step function\n        // Difficulty adjusts every 2016 blocks (approximately 2 weeks)\n        // For a 24-hour view, difficulty should be constant with a possible adjustment\n        const shouldShowAdjustment = Math.random() > 0.85; // 15% chance to show an adjustment\n        const adjustmentHour = shouldShowAdjustment ? Math.floor(Math.random() * 24) : -1;\n        \n        const initialDifficulty = timestamps.map((timestamp, i) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          // If we're showing an adjustment and we've passed the adjustment hour\n          const difficultyValue = (shouldShowAdjustment && hourOfDay >= adjustmentHour) \n            ? networkStats.difficulty * 1.05 // 5% increase\n            : networkStats.difficulty;\n            \n          return {\n            timestamp,\n            value: difficultyValue\n          };\n        });\n        setDifficultyHistory(initialDifficulty);\n        \n        // Initialize mempool size history - follows daily cycle\n        // Mempool typically grows during high activity hours and shrinks when blocks are mined\n        const initialMempool = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          \n          // Mempool tends to be larger during business hours (9 AM - 6 PM)\n          // and smaller during night hours\n          let timeFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            // Business hours - higher activity\n            timeFactor = 1.2 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 23) || (hourOfDay >= 0 && hourOfDay <= 2)) {\n            // Evening hours - moderate activity\n            timeFactor = 0.9 + (Math.random() * 0.2);\n          } else {\n            // Early morning hours - lower activity\n            timeFactor = 0.7 + (Math.random() * 0.2);\n          }\n          \n          return {\n            timestamp,\n            value: networkStats.mempoolSize * timeFactor\n          };\n        });\n        setMempoolHistory(initialMempool);\n        \n        // Initialize fee history - correlates with mempool size\n        // Transaction fees increase when mempool is congested\n        const initialFee = timestamps.map((timestamp, i) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          \n          // Fees follow similar pattern to mempool but with more volatility\n          let timeFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            // Business hours - higher fees\n            timeFactor = 1.3 + (Math.random() * 0.4);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 23) || (hourOfDay >= 0 && hourOfDay <= 2)) {\n            // Evening hours - moderate fees\n            timeFactor = 0.9 + (Math.random() * 0.3);\n          } else {\n            // Early morning hours - lower fees\n            timeFactor = 0.6 + (Math.random() * 0.2);\n          }\n          \n          return {\n            timestamp,\n            value: networkStats.avgTransactionFee * timeFactor\n          };\n        });\n        setFeeHistory(initialFee);\n        \n        // Initialize transaction count history - daily pattern\n        // Transaction volume follows typical daily activity patterns\n        const initialTxCount = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          const dayOfWeek = new Date(timestamp).getDay(); // 0 = Sunday, 6 = Saturday\n          \n          // Weekend factor - typically lower volume on weekends\n          const weekendFactor = (dayOfWeek === 0 || dayOfWeek === 6) ? 0.8 : 1.0;\n          \n          // Hour of day factor - follows typical daily activity\n          let hourFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            // Business hours - peak activity\n            hourFactor = 1.2 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 22)) {\n            // Evening hours - moderate activity\n            hourFactor = 0.9 + (Math.random() * 0.2);\n          } else if (hourOfDay >= 23 || hourOfDay <= 5) {\n            // Night hours - low activity\n            hourFactor = 0.5 + (Math.random() * 0.2);\n          } else {\n            // Early morning hours - increasing activity\n            hourFactor = 0.7 + (Math.random() * 0.2);\n          }\n          \n          const baseCount = networkStats.txCount24h ? networkStats.txCount24h / 24 : 15000;\n          return {\n            timestamp,\n            value: baseCount * hourFactor * weekendFactor\n          };\n        });\n        setTxCountHistory(initialTxCount);\n        \n        // Initialize BTC sent history - follows similar pattern to transaction count\n        // but with more volatility due to occasional large transactions\n        const initialBtcSent = timestamps.map((timestamp, i) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          const dayOfWeek = new Date(timestamp).getDay();\n          \n          // Weekend factor\n          const weekendFactor = (dayOfWeek === 0 || dayOfWeek === 6) ? 0.85 : 1.0;\n          \n          // Hour of day factor\n          let hourFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            hourFactor = 1.2 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 22)) {\n            hourFactor = 0.9 + (Math.random() * 0.2);\n          } else if (hourOfDay >= 23 || hourOfDay <= 5) {\n            hourFactor = 0.5 + (Math.random() * 0.2);\n          } else {\n            hourFactor = 0.7 + (Math.random() * 0.2);\n          }\n          \n          // Occasional large transactions (whales)\n          const whaleFactor = Math.random() > 0.9 ? 1.5 + Math.random() : 1.0;\n          \n          const baseSent = networkStats.btcSent24h ? networkStats.btcSent24h / 24 : 10000;\n          return {\n            timestamp,\n            value: baseSent * hourFactor * weekendFactor * whaleFactor\n          };\n        });\n        setBtcSentHistory(initialBtcSent);\n      } catch (error) {\n        console.error('Error loading initial network stats:', error);\n        \n        // Initialize with default values if API call fails\n        const now = Date.now();\n        const hourlyInterval = 60 * 60 * 1000; // 1 hour in milliseconds\n        \n        // Create timestamps for the last 24 hours (one per hour)\n        const timestamps = Array.from({ length: DATA_POINTS }, (_, i) => \n          now - (DATA_POINTS - 1 - i) * hourlyInterval\n        );\n        \n        // Generate mock data with realistic daily patterns\n        const initialHashRate = timestamps.map((timestamp, i) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          const timeOfDayFactor = hourOfDay >= 3 && hourOfDay <= 5 ? 0.95 : 1.0 + (Math.random() * 0.03);\n          return {\n            timestamp,\n            value: 350 + (i / DATA_POINTS) * 5 + (Math.random() * 3) * timeOfDayFactor\n          };\n        });\n        setHashRateHistory(initialHashRate);\n        \n        // Mock difficulty with possible adjustment\n        const shouldShowAdjustment = Math.random() > 0.85;\n        const adjustmentHour = shouldShowAdjustment ? Math.floor(Math.random() * 24) : -1;\n        \n        const initialDifficulty = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          const difficultyValue = (shouldShowAdjustment && hourOfDay >= adjustmentHour) \n            ? 78.3 * 1.05 \n            : 78.3;\n          return {\n            timestamp,\n            value: difficultyValue\n          };\n        });\n        setDifficultyHistory(initialDifficulty);\n        \n        // Mock mempool with daily pattern\n        const initialMempool = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          let timeFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            timeFactor = 1.2 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 23) || (hourOfDay >= 0 && hourOfDay <= 2)) {\n            timeFactor = 0.9 + (Math.random() * 0.2);\n          } else {\n            timeFactor = 0.7 + (Math.random() * 0.2);\n          }\n          return {\n            timestamp,\n            value: 240 * timeFactor\n          };\n        });\n        setMempoolHistory(initialMempool);\n        \n        // Mock fee with daily pattern\n        const initialFee = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          let timeFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            timeFactor = 1.3 + (Math.random() * 0.4);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 23) || (hourOfDay >= 0 && hourOfDay <= 2)) {\n            timeFactor = 0.9 + (Math.random() * 0.3);\n          } else {\n            timeFactor = 0.6 + (Math.random() * 0.2);\n          }\n          return {\n            timestamp,\n            value: 0.0002 * timeFactor\n          };\n        });\n        setFeeHistory(initialFee);\n        \n        // Mock transaction count with daily pattern\n        const initialTxCount = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          const dayOfWeek = new Date(timestamp).getDay();\n          const weekendFactor = (dayOfWeek === 0 || dayOfWeek === 6) ? 0.8 : 1.0;\n          let hourFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            hourFactor = 1.2 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 22)) {\n            hourFactor = 0.9 + (Math.random() * 0.2);\n          } else if (hourOfDay >= 23 || hourOfDay <= 5) {\n            hourFactor = 0.5 + (Math.random() * 0.2);\n          } else {\n            hourFactor = 0.7 + (Math.random() * 0.2);\n          }\n          return {\n            timestamp,\n            value: 15000 * hourFactor * weekendFactor\n          };\n        });\n        setTxCountHistory(initialTxCount);\n        \n        // Mock BTC sent with daily pattern\n        const initialBtcSent = timestamps.map((timestamp) => {\n          const hourOfDay = new Date(timestamp).getHours();\n          const dayOfWeek = new Date(timestamp).getDay();\n          const weekendFactor = (dayOfWeek === 0 || dayOfWeek === 6) ? 0.85 : 1.0;\n          let hourFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            hourFactor = 1.2 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 22)) {\n            hourFactor = 0.9 + (Math.random() * 0.2);\n          } else if (hourOfDay >= 23 || hourOfDay <= 5) {\n            hourFactor = 0.5 + (Math.random() * 0.2);\n          } else {\n            hourFactor = 0.7 + (Math.random() * 0.2);\n          }\n          const whaleFactor = Math.random() > 0.9 ? 1.5 + Math.random() : 1.0;\n          return {\n            timestamp,\n            value: 10000 * hourFactor * weekendFactor * whaleFactor\n          };\n        });\n        setBtcSentHistory(initialBtcSent);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadInitialStats();\n    \n    // Connect to WebSocket for real-time updates\n    websocketService.connect()\n      .then(() => {\n        setIsConnected(!websocketService.isUsingMockData());\n        \n        // Subscribe to new blocks and transactions\n        websocketService.subscribeToNewBlocks();\n        websocketService.subscribeToNewTransactions();\n        \n        // Handle new blocks\n        websocketService.onMessage('block', (data) => {\n          setNewBlockCount(prev => prev + 1);\n          \n          // Update network stats with new block data\n          setStats(prev => {\n            if (!prev) return prev;\n            return {\n              ...prev,\n              blockHeight: data.x.height,\n              timestamp: Date.now()\n            };\n          });\n        });\n        \n        // Handle new transactions\n        websocketService.onMessage('utx', (data) => {\n          setNewTxCount(prev => prev + 1);\n          \n          // Update mempool size\n          setStats(prev => {\n            if (!prev) return prev;\n            return {\n              ...prev,\n              unconfirmedTxs: prev.unconfirmedTxs + 1,\n              mempoolSize: prev.mempoolSize + (data.x.size / 1024 / 1024), // Convert bytes to MB\n              timestamp: Date.now()\n            };\n          });\n        });\n        \n        // Handle WebSocket errors\n        websocketService.onError(() => {\n          setIsConnected(false);\n        });\n      })\n      .catch(() => {\n        setIsConnected(false);\n      });\n    \n    // Simulate data updates at a reasonable interval\n    intervalRef.current = setInterval(() => {\n      const now = Date.now();\n      \n      // Only update charts once per hour to maintain the 24-hour view\n      // This simulates getting new hourly data points\n      \n      // Update hash rate with realistic hourly changes\n      setHashRateHistory(prev => {\n        if (prev.length === 0) return prev;\n        \n        const lastTimestamp = prev[prev.length - 1].timestamp;\n        // Only add a new point if at least an hour has passed\n        if (now - lastTimestamp >= UPDATE_INTERVAL) {\n          const lastValue = prev[prev.length - 1].value;\n          const hourOfDay = new Date(now).getHours();\n          \n          // Hash rate changes based on time of day\n          let newValue;\n          if (hourOfDay >= 3 && hourOfDay <= 5) {\n            // Early morning dip (mining pool maintenance)\n            newValue = lastValue * (0.97 + Math.random() * 0.04);\n          } else {\n            // Normal slight increase or stability\n            newValue = lastValue * (0.99 + Math.random() * 0.03);\n          }\n          \n          const newData = [...prev.slice(1), { timestamp: now, value: newValue }];\n          return newData;\n        }\n        return prev;\n      });\n      \n      // Update difficulty - changes in steps (every ~2 weeks in Bitcoin)\n      setDifficultyHistory(prev => {\n        if (prev.length === 0) return prev;\n        \n        const lastTimestamp = prev[prev.length - 1].timestamp;\n        // Only add a new point if at least an hour has passed\n        if (now - lastTimestamp >= UPDATE_INTERVAL) {\n          const lastValue = prev[prev.length - 1].value;\n          \n          // Difficulty stays constant most of the time, with occasional adjustments\n          // For a 24-hour view, we'll rarely see an adjustment\n          const shouldAdjust = Math.random() > 0.98; // 2% chance of adjustment per hour\n          const newValue = shouldAdjust ? lastValue * (0.98 + Math.random() * 0.07) : lastValue;\n          \n          const newData = [...prev.slice(1), { timestamp: now, value: newValue }];\n          return newData;\n        }\n        return prev;\n      });\n      \n      // Update mempool - fluctuates based on transaction activity and time of day\n      setMempoolHistory(prev => {\n        if (prev.length === 0) return prev;\n        \n        const lastTimestamp = prev[prev.length - 1].timestamp;\n        // Only add a new point if at least an hour has passed\n        if (now - lastTimestamp >= UPDATE_INTERVAL) {\n          const lastValue = prev[prev.length - 1].value;\n          const hourOfDay = new Date(now).getHours();\n          \n          // Mempool size changes based on time of day\n          let timeFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            // Business hours - higher activity\n            timeFactor = 1.1 + (Math.random() * 0.2);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 23) || (hourOfDay >= 0 && hourOfDay <= 2)) {\n            // Evening hours - moderate activity\n            timeFactor = 0.95 + (Math.random() * 0.1);\n          } else {\n            // Early morning hours - lower activity\n            timeFactor = 0.85 + (Math.random() * 0.1);\n          }\n          \n          const newValue = lastValue * timeFactor;\n          const newData = [...prev.slice(1), { timestamp: now, value: newValue }];\n          return newData;\n        }\n        return prev;\n      });\n      \n      // Update fee - correlates with mempool size\n      setFeeHistory(prev => {\n        if (prev.length === 0) return prev;\n        \n        const lastTimestamp = prev[prev.length - 1].timestamp;\n        // Only add a new point if at least an hour has passed\n        if (now - lastTimestamp >= UPDATE_INTERVAL) {\n          const lastValue = prev[prev.length - 1].value;\n          const hourOfDay = new Date(now).getHours();\n          \n          // Fee changes based on time of day and mempool congestion\n          let timeFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            // Business hours - higher fees\n            timeFactor = 1.1 + (Math.random() * 0.3);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 23) || (hourOfDay >= 0 && hourOfDay <= 2)) {\n            // Evening hours - moderate fees\n            timeFactor = 0.9 + (Math.random() * 0.2);\n          } else {\n            // Early morning hours - lower fees\n            timeFactor = 0.8 + (Math.random() * 0.15);\n          }\n          \n          const newValue = lastValue * timeFactor;\n          const newData = [...prev.slice(1), { timestamp: now, value: newValue }];\n          return newData;\n        }\n        return prev;\n      });\n      \n      // Update transaction count - follows daily patterns\n      setTxCountHistory(prev => {\n        if (prev.length === 0) return prev;\n        \n        const lastTimestamp = prev[prev.length - 1].timestamp;\n        // Only add a new point if at least an hour has passed\n        if (now - lastTimestamp >= UPDATE_INTERVAL) {\n          const lastValue = prev[prev.length - 1].value;\n          const hourOfDay = new Date(now).getHours();\n          const dayOfWeek = new Date(now).getDay();\n          \n          // Weekend factor\n          const weekendFactor = (dayOfWeek === 0 || dayOfWeek === 6) ? 0.8 : 1.0;\n          \n          // Hour of day factor\n          let hourFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            // Business hours - peak activity\n            hourFactor = 1.1 + (Math.random() * 0.2);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 22)) {\n            // Evening hours - moderate activity\n            hourFactor = 0.9 + (Math.random() * 0.15);\n          } else if (hourOfDay >= 23 || hourOfDay <= 5) {\n            // Night hours - low activity\n            hourFactor = 0.7 + (Math.random() * 0.15);\n          } else {\n            // Early morning hours - increasing activity\n            hourFactor = 0.8 + (Math.random() * 0.15);\n          }\n          \n          const newValue = lastValue * hourFactor * weekendFactor;\n          const newData = [...prev.slice(1), { timestamp: now, value: newValue }];\n          return newData;\n        }\n        return prev;\n      });\n      \n      // Update BTC sent - follows similar pattern to transaction count\n      setBtcSentHistory(prev => {\n        if (prev.length === 0) return prev;\n        \n        const lastTimestamp = prev[prev.length - 1].timestamp;\n        // Only add a new point if at least an hour has passed\n        if (now - lastTimestamp >= UPDATE_INTERVAL) {\n          const lastValue = prev[prev.length - 1].value;\n          const hourOfDay = new Date(now).getHours();\n          const dayOfWeek = new Date(now).getDay();\n          \n          // Weekend factor\n          const weekendFactor = (dayOfWeek === 0 || dayOfWeek === 6) ? 0.85 : 1.0;\n          \n          // Hour of day factor\n          let hourFactor;\n          if (hourOfDay >= 9 && hourOfDay <= 18) {\n            hourFactor = 1.1 + (Math.random() * 0.2);\n          } else if ((hourOfDay >= 19 && hourOfDay <= 22)) {\n            hourFactor = 0.9 + (Math.random() * 0.15);\n          } else if (hourOfDay >= 23 || hourOfDay <= 5) {\n            hourFactor = 0.7 + (Math.random() * 0.15);\n          } else {\n            hourFactor = 0.8 + (Math.random() * 0.15);\n          }\n          \n          // Occasional large transactions (whales)\n          const whaleFactor = Math.random() > 0.9 ? 1.5 + Math.random() : 1.0;\n          \n          const newValue = lastValue * hourFactor * weekendFactor * whaleFactor;\n          const newData = [...prev.slice(1), { timestamp: now, value: newValue }];\n          return newData;\n        }\n        return prev;\n      });\n      \n      // Update stats\n      setStats(prev => {\n        if (!prev) return prev;\n        \n        // Get the latest values from the charts\n        const latestHashRate = hashRateHistory.length > 0 ? hashRateHistory[hashRateHistory.length - 1].value : prev.hashRate;\n        const latestDifficulty = difficultyHistory.length > 0 ? difficultyHistory[difficultyHistory.length - 1].value : prev.difficulty;\n        const latestMempoolSize = mempoolHistory.length > 0 ? mempoolHistory[mempoolHistory.length - 1].value : prev.mempoolSize;\n        const latestFee = feeHistory.length > 0 ? feeHistory[feeHistory.length - 1].value : prev.avgTransactionFee;\n        \n        return {\n          ...prev,\n          timestamp: now,\n          hashRate: latestHashRate,\n          difficulty: latestDifficulty,\n          mempoolSize: latestMempoolSize,\n          avgTransactionFee: latestFee\n        };\n      });\n      \n      // Simulate new blocks occasionally (roughly every 10 minutes in Bitcoin)\n      if (Math.random() > 0.95) { // 5% chance per update interval\n        setNewBlockCount(prev => prev + 1);\n        setStats(prev => {\n          if (!prev) return prev;\n          return {\n            ...prev,\n            blockHeight: prev.blockHeight + 1\n          };\n        });\n      }\n      \n      // Simulate new transactions more frequently\n      const newTxs = Math.floor(Math.random() * 5);\n      setNewTxCount(prev => prev + newTxs);\n      setStats(prev => {\n        if (!prev) return prev;\n        return {\n          ...prev,\n          unconfirmedTxs: prev.unconfirmedTxs + newTxs\n        };\n      });\n    }, UPDATE_INTERVAL);\n    \n    return () => {\n      // Clean up\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      \n      websocketService.unsubscribeFromNewBlocks();\n      websocketService.unsubscribeFromNewTransactions();\n      websocketService.disconnect();\n    };\n  }, []);\n\n  const formatTimestamp = (timestamp: number) => {\n    // Format timestamp to show hour of day (e.g., \"14:00\")\n    return new Date(timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const formatDateTimestamp = (timestamp: number) => {\n    // Format timestamp to show date and time\n    return new Date(timestamp).toLocaleString([], { \n      month: 'short', \n      day: 'numeric', \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const formatValue = (value: number) => {\n    return value.toFixed(2);\n  };\n\n  const formatNumber = (num: number): string => {\n    return num.toLocaleString();\n  };\n\n  if (isLoading || !stats) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[50vh]\">\n        <div className=\"flex flex-col items-center gap-4\">\n          <div className=\"w-8 h-8 border-2 border-t-transparent border-orange-500 rounded-full animate-spin\"></div>\n          <p className=\"text-gray-400\">Loading network statistics...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <BarChart2 className=\"w-8 h-8 text-orange-500\" />\n          <div>\n            <h1 className=\"text-2xl font-bold\">Network Statistics</h1>\n            <p className=\"text-gray-400\">24-hour Bitcoin network metrics and trends</p>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-400\">{isConnected ? 'Live' : 'Offline'}</span>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <TrendingUp className=\"w-4 h-4\" />\n            <span>Hash Rate</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.hashRate.toFixed(2)} EH/s\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Global computing power securing the network\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <Zap className=\"w-4 h-4\" />\n            <span>Difficulty</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.difficulty.toFixed(2)} T\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Network mining difficulty\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <Database className=\"w-4 h-4\" />\n            <span>Mempool Size</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.mempoolSize.toFixed(2)} MB\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Size of unconfirmed transactions\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <Server className=\"w-4 h-4\" />\n            <span>Unconfirmed Transactions</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.unconfirmedTxs.toLocaleString()}\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Transactions waiting to be included in blocks\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <Clock className=\"w-4 h-4\" />\n            <span>Average Block Time</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.avgBlockTime.toFixed(1)} minutes\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Average time between blocks\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <DollarSign className=\"w-4 h-4\" />\n            <span>Average Transaction Fee</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.avgTransactionFee.toFixed(5)} BTC\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Average fee per transaction\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <Zap className=\"w-4 h-4\" />\n            <span>Latest Block</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.blockHeight.toLocaleString()}\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Current blockchain height\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n          <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n            <Activity className=\"w-4 h-4\" />\n            <span>24h Transactions</span>\n          </div>\n          <div className=\"text-xl font-semibold text-white\">\n            {stats.totalTransactions ? formatNumber(stats.totalTransactions) : \"N/A\"}\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Transactions in the last 24 hours\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Hash Rate (EH/s) - 24 Hours</h2>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={hashRateHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={formatTimestamp} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['dataMin', 'dataMax']}\n                  type=\"number\"\n                  scale=\"time\"\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis \n                  tickFormatter={formatValue} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  labelFormatter={formatDateTimestamp}\n                  formatter={(value: any) => [`${Number(value).toFixed(2)} EH/s`, 'Hash Rate']}\n                  contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                  itemStyle={{ color: '#F7FAFC' }}\n                  labelStyle={{ color: '#A0AEC0' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"value\" \n                  stroke=\"#ED8936\" \n                  fill=\"#ED8936\"\n                  fillOpacity={0.2}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={{ r: 6 }}\n                  name=\"Hash Rate\"\n                />\n                <Legend />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>Hash rate typically shows maintenance dips during early morning hours (3-5 AM) and gradual increases during the day.</p>\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Difficulty (T) - 24 Hours</h2>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={difficultyHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={formatTimestamp} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['dataMin', 'dataMax']}\n                  type=\"number\"\n                  scale=\"time\"\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis \n                  tickFormatter={formatValue} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  labelFormatter={formatDateTimestamp}\n                  formatter={(value: any) => [`${Number(value).toFixed(2)} T`, 'Difficulty']}\n                  contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                  itemStyle={{ color: '#F7FAFC' }}\n                  labelStyle={{ color: '#A0AEC0' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"value\" \n                  stroke=\"#4299E1\" \n                  fill=\"#4299E1\"\n                  fillOpacity={0.2}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={{ r: 6 }}\n                  name=\"Difficulty\"\n                />\n                <Legend />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>Difficulty adjusts approximately every 2016 blocks (about 2 weeks). Step changes indicate network adjustments.</p>\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Mempool Size (MB) - 24 Hours</h2>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={mempoolHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={formatTimestamp} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['dataMin', 'dataMax']}\n                  type=\"number\"\n                  scale=\"time\"\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis \n                  tickFormatter={formatValue} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  labelFormatter={formatDateTimestamp}\n                  formatter={(value: any) => [`${Number(value).toFixed(2)} MB`, 'Mempool Size']}\n                  contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                  itemStyle={{ color: '#F7FAFC' }}\n                  labelStyle={{ color: '#A0AEC0' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"value\" \n                  stroke=\"#48BB78\" \n                  fill=\"#48BB78\"\n                  fillOpacity={0.2}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={{ r: 6 }}\n                  name=\"Mempool Size\"\n                />\n                <Legend />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>Mempool size increases during business hours (9 AM - 6 PM) when transaction activity is highest.</p>\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Transaction Fees (BTC) - 24 Hours</h2>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={feeHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={formatTimestamp} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['dataMin', 'dataMax']}\n                  type=\"number\"\n                  scale=\"time\"\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis \n                  tickFormatter={(value) => value.toFixed(5)} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  labelFormatter={formatDateTimestamp}\n                  formatter={(value: any) => [`${Number(value).toFixed(5)} BTC`, 'Fee']}\n                  contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                  itemStyle={{ color: '#F7FAFC' }}\n                  labelStyle={{ color: '#A0AEC0' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"value\" \n                  stroke=\"#F6AD55\" \n                  fill=\"#F6AD55\"\n                  fillOpacity={0.2}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={{ r: 6 }}\n                  name=\"Transaction Fee\"\n                />\n                <Legend />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>Transaction fees correlate with mempool congestion, rising during high-activity periods and falling during off-hours.</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Transactions per Hour - 24 Hours</h2>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={txCountHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={formatTimestamp} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['dataMin', 'dataMax']}\n                  type=\"number\"\n                  scale=\"time\"\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis \n                  tickFormatter={(value) => formatNumber(value)} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  labelFormatter={formatDateTimestamp}\n                  formatter={(value: any) => [formatNumber(value), 'Transactions']}\n                  contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                  itemStyle={{ color: '#F7FAFC' }}\n                  labelStyle={{ color: '#A0AEC0' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"value\" \n                  stroke=\"#805AD5\" \n                  fill=\"#805AD5\"\n                  fillOpacity={0.2}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={{ r: 6 }}\n                  name=\"Transactions\"\n                />\n                <Legend />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>Transaction volume follows daily activity patterns, with peaks during business hours and lower activity overnight.</p>\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">BTC Sent per Hour - 24 Hours</h2>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={btcSentHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />\n                <XAxis \n                  dataKey=\"timestamp\" \n                  tickFormatter={formatTimestamp} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['dataMin', 'dataMax']}\n                  type=\"number\"\n                  scale=\"time\"\n                  interval=\"preserveStartEnd\"\n                />\n                <YAxis \n                  tickFormatter={(value) => formatNumber(value)} \n                  stroke=\"#718096\"\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  labelFormatter={formatDateTimestamp}\n                  formatter={(value: any) => [formatNumber(value) + \" BTC\", 'Volume']}\n                  contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                  itemStyle={{ color: '#F7FAFC' }}\n                  labelStyle={{ color: '#A0AEC0' }}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"value\" \n                  stroke=\"#D53F8C\" \n                  fill=\"#D53F8C\"\n                  fillOpacity={0.2}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={{ r: 6 }}\n                  name=\"BTC Sent\"\n                />\n                <Legend />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>BTC volume follows similar patterns to transaction count, with occasional spikes from large transactions (\"whale movements\").</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Recent Activity</h2>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Zap className=\"w-5 h-5 text-blue-400\" />\n                <span>New Blocks</span>\n              </div>\n              <div className=\"bg-blue-900/20 px-3 py-1 rounded-full text-blue-400 text-sm\">\n                {newBlockCount}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Server className=\"w-5 h-5 text-green-400\" />\n                <span>New Transactions</span>\n              </div>\n              <div className=\"bg-green-900/20 px-3 py-1 rounded-full text-green-400 text-sm\">\n                {newTxCount}\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"w-5 h-5 text-orange-400\" />\n                <span>Last Updated</span>\n              </div>\n              <div className=\"text-gray-400 text-sm\">\n                {new Date(stats.timestamp).toLocaleTimeString()}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Network Health</h2>\n          <div className=\"space-y-6\">\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Hash Rate Stability</span>\n                <span className=\"text-green-400\">Excellent</span>\n              </div>\n              <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '90%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Mempool Congestion</span>\n                <span className=\"text-yellow-400\">Moderate</span>\n              </div>\n              <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                <div className=\"bg-yellow-500 h-2 rounded-full\" style={{ width: '60%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Fee Pressure</span>\n                <span className=\"text-orange-400\">High</span>\n              </div>\n              <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                <div className=\"bg-orange-500 h-2 rounded-full\" style={{ width: '75%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Network Security</span>\n                <span className=\"text-green-400\">Very High</span>\n              </div>\n              <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Clock, Filter, DollarSign, ArrowRight, Zap, BarChart2, Copy } from 'lucide-react';\nimport websocketService from '../services/websocketService';\nimport { WebSocketTransaction } from '../types';\n\ninterface FeeRange {\n  label: string;\n  min: number;\n  max: number | null;\n  count: number;\n  totalSize: number;\n  color: string;\n}\n\nexport const MempoolExplorer: React.FC = () => {\n  const [transactions, setTransactions] = useState<WebSocketTransaction[]>([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [feeRanges, setFeeRanges] = useState<FeeRange[]>([\n    { label: 'High Priority', min: 0.0001, max: null, count: 0, totalSize: 0, color: 'bg-green-500' },\n    { label: 'Medium Priority', min: 0.00005, max: 0.0001, count: 0, totalSize: 0, color: 'bg-blue-500' },\n    { label: 'Low Priority', min: 0.00001, max: 0.00005, count: 0, totalSize: 0, color: 'bg-yellow-500' },\n    { label: 'Very Low Priority', min: 0, max: 0.00001, count: 0, totalSize: 0, color: 'bg-red-500' }\n  ]);\n  const [selectedFeeRange, setSelectedFeeRange] = useState<string | null>(null);\n  const [totalMempoolSize, setTotalMempoolSize] = useState(0);\n\n  useEffect(() => {\n    // Connect to WebSocket\n    websocketService.connect()\n      .then(() => {\n        setIsConnected(!websocketService.isUsingMockData());\n        \n        // Subscribe to new transactions\n        websocketService.subscribeToNewTransactions();\n        \n        // Handle new transactions\n        websocketService.onMessage('utx', (data) => {\n          const tx = data.x;\n          \n          // Calculate fee\n          const totalInput = tx.inputs.reduce((sum: number, input: any) => {\n            return sum + (input.prev_out?.value || 0);\n          }, 0);\n          \n          const totalOutput = tx.out .reduce((sum: number, output: any) => {\n            return sum + (output.value || 0);\n          }, 0);\n          \n          const fee = (totalInput - totalOutput) / 100000000; // Convert to BTC\n          const feeRate = fee / (tx.size / 1000); // Fee per KB\n          \n          // Add fee rate to transaction\n          const txWithFee = {\n            ...tx,\n            feeRate\n          };\n          \n          // Update transactions list\n          setTransactions(prev => {\n            const newTxs = [txWithFee, ...prev].slice(0, 100);\n            return newTxs;\n          });\n          \n          // Update fee ranges\n          setFeeRanges(prev => {\n            return prev.map(range => {\n              if ((range.min <= feeRate) && (range.max === null || feeRate < range.max)) {\n                return {\n                  ...range,\n                  count: range.count + 1,\n                  totalSize: range.totalSize + tx.size\n                };\n              }\n              return range;\n            });\n          });\n          \n          // Update total mempool size\n          setTotalMempoolSize(prev => prev + tx.size);\n        });\n        \n        // Handle WebSocket errors\n        websocketService.onError(() => {\n          setIsConnected(false);\n        });\n\n        // If using mock data, generate mock data\n        if (websocketService.isUsingMockData()) {\n          generateMockData();\n        }\n      })\n      .catch(() => {\n        setIsConnected(false);\n        \n        // Generate mock data if WebSocket connection fails\n        generateMockData();\n      });\n    \n    return () => {\n      // Clean up\n      websocketService.unsubscribeFromNewTransactions();\n      websocketService.disconnect();\n    };\n  }, []);\n\n  // Generate mock data for testing\n  const generateMockData = () => {\n    // Generate mock transactions\n    const mockTransactions: WebSocketTransaction[] = [];\n    const mockFeeRanges = [...feeRanges];\n    let mockTotalSize = 0;\n    \n    for (let i = 0; i < 50; i++) {\n      const size = 500 + Math.floor(Math.random() * 1500);\n      const feeRate = Math.random() * 0.0002;\n      \n      const tx: WebSocketTransaction = {\n        hash: `mock-${i}-${Math.random().toString(36).substring(2, 15)}`,\n        ver: 1,\n        vin_sz: Math.floor(Math.random() * 5) + 1,\n        vout_sz: Math.floor(Math.random() * 5) + 1,\n        lock_time: 0,\n        size,\n        relayed_by: '0.0.0.0',\n        tx_index: i,\n        time: Date.now() / 1000 - Math.floor(Math.random() * 3600),\n        inputs: Array(Math.floor(Math.random() * 3) + 1).fill(0).map(() => ({\n          prev_out: {\n            addr: `1mock${Math.random().toString(36).substring(2, 15)}`,\n            n: 0,\n            script: '',\n            spent: false,\n            tx_index: 0,\n            type: 0,\n            value: Math.floor(Math.random() * 10000000)\n          },\n          script: '',\n          sequence: 0\n        })),\n        out: Array(Math.floor(Math.random() * 3) + 1).fill(0).map(() => ({\n          addr: `1mock${Math.random().toString(36).substring(2, 15)}`,\n          n: 0,\n          script: '',\n          spent: false,\n          tx_index: 0,\n          type: 0,\n          value: Math.floor(Math.random() * 1000000)\n        }))\n      };\n      \n      // Add fee rate\n      (tx as any).feeRate = feeRate;\n      \n      mockTransactions.push(tx as WebSocketTransaction);\n      mockTotalSize += size;\n      \n      // Update fee ranges\n      for (const range of mockFeeRanges) {\n        if ((range.min <= feeRate) && (range.max === null || feeRate < range.max)) {\n          range.count += 1;\n          range.totalSize += size;\n          break;\n        }\n      }\n    }\n    \n    setTransactions(mockTransactions);\n    setFeeRanges(mockFeeRanges);\n    setTotalMempoolSize(mockTotalSize);\n  };\n\n  const formatBytes = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  };\n\n  const formatTime = (timestamp: number): string => {\n    const seconds = Math.floor(Date.now() / 1000 - timestamp);\n    if (seconds < 60) return `${seconds} seconds ago`;\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n    return `${Math.floor(seconds / 3600)} hours ago`;\n  };\n\n  const formatFeeRate = (feeRate: number): string => {\n    return `${(feeRate * 100000).toFixed(2)} sat/byte`;\n  };\n\n  const filteredTransactions = selectedFeeRange\n    ? transactions.filter(tx => {\n        const feeRate = (tx as any).feeRate;\n        const range = feeRanges.find(r => r.label === selectedFeeRange);\n        if (!range) return true;\n        return (range.min <= feeRate) && (range.max === null || feeRate < range.max);\n      })\n    : transactions;\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <Clock className=\"w-8 h-8 text-orange-500\" />\n          <div>\n            <h1 className=\"text-2xl font-bold\">Mempool Explorer</h1>\n            <p className=\"text-gray-400\">Monitor unconfirmed transactions waiting to be included in blocks</p>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-400\">{isConnected ? 'Live' : 'Offline'}</span>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-4\">\n        <div className=\"lg:col-span-2 bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Mempool Summary</h2>\n          <div className=\"space-y-6\">\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Total Size</span>\n                <span className=\"text-white font-medium\">{formatBytes(totalMempoolSize)}</span>\n              </div>\n              <div className=\"w-full h-4 bg-gray-800 rounded-full overflow-hidden\">\n                {feeRanges.map((range, index) => {\n                  const percentage = totalMempoolSize > 0 ? (range.totalSize / totalMempoolSize) * 100 : 0;\n                  return (\n                    <div\n                      key={index}\n                      className={`h-full ${range.color} inline-block`}\n                      style={{ width: `${percentage}%` }}\n                    ></div>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div className=\"space-y-3\">\n              {feeRanges.map((range, index) => (\n                <div key={index} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className={`w-3 h-3 rounded-full ${range.color}`}></div>\n                    <span>{range.label}</span>\n                  </div>\n                  <div className=\"text-sm text-gray-400\">\n                    {range.count} txs ({formatBytes(range.totalSize)})\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"lg:col-span-3 bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-lg font-semibold mb-4\">Fee Estimation</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"bg-[#0B1017] rounded-lg p-4 border border-gray-800\">\n              <div className=\"text-sm text-gray-400 mb-2\">Next Block (10 min)</div>\n              <div className=\"text-xl font-semibold text-green-400\">\n                {formatFeeRate(0.00015)}\n              </div>\n              <div className=\"text-xs text-gray-500 mt-1\">High Priority</div>\n            </div>\n            <div className=\"bg-[#0B1017] rounded-lg p-4 border border-gray-800\">\n              <div className=\"text-sm text-gray-400 mb-2\">3 Blocks (~30 min)</div>\n              <div className=\"text-xl font-semibold text-blue-400\">\n                {formatFeeRate(0.00008)}\n              </div>\n              <div className=\"text-xs text-gray-500 mt-1\">Medium Priority</div>\n            </div>\n            <div className=\"bg-[#0B1017] rounded-lg p-4 border border-gray-800\">\n              <div className=\"text-sm text-gray-400 mb-2\">6 Blocks (~1 hour)</div>\n              <div className=\"text-xl font-semibold text-yellow-400\">\n                {formatFeeRate(0.00003)}\n              </div>\n              <div className=\"text-xs text-gray-500 mt-1\">Low Priority</div>\n            </div>\n          </div>\n          <div className=\"mt-4 text-sm text-gray-400\">\n            <p>Fee estimates are based on recent transaction confirmation times and current mempool state.</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold\">Recent Unconfirmed Transactions</h2>\n          <div className=\"flex items-center gap-3\">\n            <Filter className=\"w-5 h-5 text-gray-400\" />\n            <select\n              value={selectedFeeRange || ''}\n              onChange={(e) => setSelectedFeeRange(e.target.value || null)}\n              className=\"bg-[#0B1017] text-gray-200 border border-gray-700 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-orange-500\"\n            >\n              <option value=\"\">All Transactions</option>\n              {feeRanges.map((range, index) => (\n                <option key={index} value={range.label}>\n                  {range.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          {filteredTransactions.length > 0 ? (\n            filteredTransactions.map((tx, index) => {\n              const feeRate = (tx as any).feeRate;\n              const feeRangeColor = feeRanges.find(\n                range => (range.min <= feeRate) && (range.max === null || feeRate < range.max)\n              )?.color || 'bg-gray-500';\n              \n              return (\n                <div\n                  key={index}\n                  className=\"bg-[#0B1017] rounded-lg p-4 border border-gray-800 hover:border-gray-700 transition-colors\"\n                >\n                  <div className=\"flex flex-col gap-4\">\n                    <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-3\">\n                      <div className=\"flex items-center gap-2 min-w-0 flex-1\">\n                        <Link\n                          to={`/tx/${tx.hash}`}\n                          className=\"font-mono text-orange-500 hover:text-orange-400 transition-colors text-sm truncate\"\n                        >\n                          {tx.hash}\n                        </Link>\n                      </div>\n                      <div className=\"flex flex-wrap items-center gap-2\">\n                        <div className={`px-2 py-1 rounded-md ${feeRangeColor.replace('bg-', 'bg-opacity-20 text-')}`}>\n                          {formatFeeRate(feeRate)}\n                        </div>\n                        <div className=\"text-sm text-gray-400\">\n                          {formatBytes(tx.size)}\n                        </div>\n                        <div className=\"text-sm text-gray-400\">\n                          {formatTime(tx.time)}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 lg:grid-cols-[1fr,auto,1fr] gap-2\">\n                      <div>\n                        <div className=\"text-xs text-gray-500 mb-1\">From</div>\n                        <div className=\"space-y-1\">\n                          {tx.inputs.slice(0, 2).map((input, idx) => (\n                            input.prev_out?.addr && (\n                              <div key={idx} className=\"text-sm\">\n                                <div className=\"flex items-center gap-2\">\n                                  <Link\n                                    to={`/address/${input.prev_out.addr}`}\n                                    className=\"text-blue-400 hover:text-blue-300 font-mono break-all flex-1\"\n                                    style={{\n                                      wordBreak: 'break-word',\n                                      overflowWrap: 'break-word'\n                                    }}\n                                  >\n                                    {input.prev_out.addr}\n                                  </Link>\n                                  <button \n                                    onClick={() => input.prev_out?.addr && copyToClipboard(input.prev_out.addr)}\n                                    className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                                    title=\"Copy address\"\n                                  >\n                                    <Copy className=\"w-4 h-4\" />\n                                  </button>\n                                </div>\n                              </div>\n                            )\n                          ))}\n                          {tx.inputs.length > 2 && (\n                            <div className=\"text-xs text-gray-500\">\n                              +{tx.inputs.length - 2} more inputs\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"flex justify-center items-center\">\n                        <ArrowRight className=\"w-4 h-4 text-gray-500\" />\n                      </div>\n\n                      <div>\n                        <div className=\"text-xs text-gray-500 mb-1\">To</div>\n                        <div className=\"space-y-1\">\n                          {tx.out.slice(0, 2).map((output, idx) => (\n                            output.addr && (\n                              <div key={idx} className=\"text-sm\">\n                                <div className=\"flex items-center gap-2\">\n                                  <Link\n                                    to={`/address/${output.addr}`}\n                                    className=\"text-green-400 hover:text-green-300 font-mono break-all flex-1\"\n                                    style={{\n                                      wordBreak: 'break-word',\n                                      overflowWrap: 'break-word'\n                                    }}\n                                  >\n                                    {output.addr}\n                                  </Link>\n                                  <button \n                                    onClick={() => output.addr && copyToClipboard(output.addr)}\n                                    className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                                    title=\"Copy address\"\n                                  >\n                                    <Copy className=\"w-4 h-4\" />\n                                  </button>\n                                </div>\n                              </div>\n                            )\n                          ))}\n                          {tx.out.length > 2 && (\n                            <div className=\"text-xs text-gray-500\">\n                              +{tx.out.length - 2} more outputs\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div className=\"text-center py-8 text-gray-400\">\n              No transactions found. Waiting for new transactions...\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <h2 className=\"text-lg font-semibold mb-4\">Understanding the Mempool</h2>\n        <div className=\"prose prose-invert max-w-none text-gray-300\">\n          <p>\n            The mempool (memory pool) is a waiting area for Bitcoin transactions that have been broadcast to the network but have not yet been included in a block.\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-4\">\n            <div>\n              <h3 className=\"text-md font-medium text-white\">How Transactions Get Confirmed</h3>\n              <ul className=\"list-disc pl-5 space-y-2 mt-2\">\n                <li>Miners select transactions from the mempool to include in new blocks</li>\n                <li>Transactions with higher fees are typically selected first</li>\n                <li>During periods of high network activity, the mempool can become congested</li>\n                <li>Transactions may remain in the mempool for hours or days if fees are too low</li>\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"text-md font-medium text-white\">Fee Estimation</h3>\n              <ul className=\"list-disc pl-5 space-y-2 mt-2\">\n                <li>Fee rates are measured in satoshis per byte (sat/byte)</li>\n                <li>Higher fee rates increase the likelihood of faster confirmation</li>\n                <li>Fee estimates are based on recent confirmation times</li>\n                <li>During congestion, fees can increase significantly</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Zap, Clock, Database, ArrowRight, Calendar, Hash, Copy } from 'lucide-react';\nimport websocketService from '../services/websocketService';\nimport { fetchLatestBlocks } from '../utils/api';\nimport { BlockData } from '../types';\nimport { Card, CardContent, CardHeader, CardTitle, Container, PageHeader, Spinner, Skeleton } from '../components/ui';\nimport { isBlockHash } from '../utils/validation';\n\nexport const BlockExplorer: React.FC = () => {\n  const [blocks, setBlocks] = useState<BlockData[]>([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // First load blocks from API\n    const loadInitialBlocks = async () => {\n      setIsLoading(true);\n      try {\n        const latestBlocks = await fetchLatestBlocks(20);\n        setBlocks(latestBlocks);\n      } catch (error) {\n        console.error('Error loading initial blocks:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadInitialBlocks();\n\n    // Connect to WebSocket for real-time updates\n    websocketService.connect()\n      .then(() => {\n        setIsConnected(!websocketService.isUsingMockData());\n        \n        // Subscribe to new blocks\n        websocketService.subscribeToNewBlocks();\n        \n        // Handle new blocks\n        websocketService.onMessage('block', (data) => {\n          const block = data.x;\n          \n          // Add new block to the list\n          setBlocks(prev => {\n            const newBlock: BlockData = {\n              hash: block.hash,\n              height: block.height,\n              time: block.time,\n              size: block.size,\n              txCount: block.nTx,\n              miner: getMinerFromCoinbase(block)\n            };\n            \n            // Check if block already exists\n            if (prev.some(b => b.hash === newBlock.hash)) {\n              return prev;\n            }\n            \n            return [newBlock, ...prev].slice(0, 20);\n          });\n          \n          setIsLoading(false);\n        });\n        \n        // Handle WebSocket errors\n        websocketService.onError(() => {\n          setIsConnected(false);\n        });\n\n        // If using mock data, generate mock blocks\n        if (websocketService.isUsingMockData()) {\n          // We already loaded blocks from API or mock data\n        }\n      })\n      .catch(() => {\n        setIsConnected(false);\n      });\n    \n    return () => {\n      // Clean up\n      websocketService.unsubscribeFromNewBlocks();\n      websocketService.disconnect();\n    };\n  }, []);\n\n  // Extract miner information from coinbase transaction\n  const getMinerFromCoinbase = (block: any): string => {\n    // In a real implementation, this would parse the coinbase transaction\n    // For now, return a random mining pool\n    const miners = [\n      'Foundry USA',\n      'AntPool',\n      'F2Pool',\n      'Binance Pool',\n      'ViaBTC',\n      'SlushPool'\n    ];\n    \n    return miners[Math.floor(Math.random() * miners.length)];\n  };\n\n  const formatTime = (timestamp: number): string => {\n    return new Date(timestamp * 1000).toLocaleString();\n  };\n\n  const formatTimeAgo = (timestamp: number): string => {\n    const seconds = Math.floor(Date.now() / 1000 - timestamp);\n    if (seconds < 60) return `${seconds} seconds ago`;\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\n    return `${Math.floor(seconds / 86400)} days ago`;\n  };\n\n  const formatBytes = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  return (\n    <Container>\n      <PageHeader \n        title=\"Block Explorer\" \n        description=\"Browse the latest Bitcoin blocks\"\n        icon={<Zap className=\"w-8 h-8\" />}\n        actions={\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n            <span className=\"text-sm text-gray-400\">{isConnected ? 'Live' : 'Offline'}</span>\n          </div>\n        }\n      />\n\n      {isLoading ? (\n        <Card className=\"mb-6 overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr>\n                  <th>Height</th>\n                  <th>Hash</th>\n                  <th>Mined</th>\n                  <th>Transactions</th>\n                  <th>Size</th>\n                  <th>Miner</th>\n                  <th>Details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {[...Array(10)].map((_, index) => (\n                  <tr key={index} className=\"hover:bg-[#0B1017]/50 transition-colors\">\n                    <td>\n                      <Skeleton height=\"1.25rem\" width=\"80px\" />\n                    </td>\n                    <td>\n                      <div className=\"flex items-center\">\n                        <Hash className=\"w-4 h-4 text-gray-500 mr-2 flex-shrink-0\" />\n                        <Skeleton height=\"1.25rem\" width=\"150px\" />\n                      </div>\n                    </td>\n                    <td>\n                      <div className=\"flex flex-col\">\n                        <Skeleton height=\"1rem\" width=\"80px\" className=\"mb-1\" />\n                        <Skeleton height=\"0.75rem\" width=\"120px\" />\n                      </div>\n                    </td>\n                    <td>\n                      <Skeleton height=\"1rem\" width=\"60px\" />\n                    </td>\n                    <td>\n                      <Skeleton height=\"1rem\" width=\"60px\" />\n                    </td>\n                    <td>\n                      <Skeleton height=\"1rem\" width=\"100px\" />\n                    </td>\n                    <td>\n                      <Skeleton height=\"1rem\" width=\"60px\" />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card>\n      ) : (\n        <Card className=\"mb-6 overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr>\n                  <th>Height</th>\n                  <th>Hash</th>\n                  <th>Mined</th>\n                  <th>Transactions</th>\n                  <th>Size</th>\n                  <th>Miner</th>\n                  <th>Details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {blocks.map((block, index) => (\n                  <tr key={index} className=\"hover:bg-[#0B1017]/50 transition-colors\">\n                    <td>{block.height}</td>\n                    <td>\n                      <div className=\"flex items-center\">\n                        <Hash className=\"w-4 h-4 text-gray-500 mr-2 flex-shrink-0\" />\n                        <div className=\"flex-1 min-w-0\">\n                          {isBlockHash(block.hash) ? (\n                            <>\n                              <Link \n                                to={`/block/${block.hash}`}\n                                className=\"font-mono text-sm text-orange-500 hover:text-orange-400 block truncate\"\n                                title={block.hash}\n                              >\n                                {block.hash}\n                              </Link>\n                              <button \n                                onClick={() => copyToClipboard(block.hash)}\n                                className=\"p-1 hover:bg-gray-800 rounded ml-2 flex-shrink-0\"\n                                title=\"Copy block hash\"\n                              >\n                                <Copy className=\"w-4 h-4\" />\n                              </button>\n                            </>\n                          ) : (\n                            <span className=\"text-red-500\">Invalid block hash</span>\n                          )}\n                        </div>\n                      </div>\n                    </td>\n                    <td>\n                      <div className=\"flex flex-col\">\n                        <span>{formatTime(block.time)}</span>\n                        <span className=\"text-sm text-gray-400\">{formatTimeAgo(block.time)}</span>\n                      </div>\n                    </td>\n                    <td>{block.txCount}</td>\n                    <td>{formatBytes(block.size)}</td>\n                    <td>{block.miner}</td>\n                    <td>\n                      <Link to={`/block/${block.hash}`} className=\"text-blue-500 hover:text-blue-400\">\n                        View\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card>\n      )}\n    </Container>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Zap, ArrowLeft, Copy, Clock, Database, Hash, ArrowRight, Server } from 'lucide-react';\nimport { fetchBlockDetails } from '../utils/api';\nimport { BlockInfo, WebSocketTransaction } from '../types';\nimport { Skeleton, SkeletonText } from '../components/ui/Skeleton';\nimport { formatBitcoinValue } from '../utils/api';\nimport { isBlockHash } from '../utils/validation';\n\nexport const BlockDetails: React.FC = () => {\n  const { hashOrHeight } = useParams<{ hashOrHeight: string }>();\n  const [block, setBlock] = useState<BlockInfo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [transactionsPerPage] = useState(15);\n\n  useEffect(() => {\n    const fetchBlock = async () => {\n      if (!hashOrHeight) {\n        setError('No block hash or height provided');\n        setIsLoading(false);\n        return;\n      }\n\n      // Validate block hash if it's not a height\n      if (!/^\\d+$/.test(hashOrHeight) && !isBlockHash(hashOrHeight)) {\n        setError('Invalid block hash format');\n        setIsLoading(false);\n        return;\n      }\n\n      setIsLoading(true);\n      setError(null);\n      \n      try {\n        const blockData = await fetchBlockDetails(hashOrHeight);\n        console.log('Block data:', blockData); // Debug log\n        \n        if (!blockData || !blockData.hash) {\n          throw new Error('Invalid block data received');\n        }\n        \n        setBlock(blockData);\n      } catch (err) {\n        console.error('Error fetching block details:', err);\n        setError(err instanceof Error ? err.message : 'Failed to load block details');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchBlock();\n  }, [hashOrHeight]);\n\n  const copyToClipboard = (text: string | undefined | null) => {\n    if (text) {\n      navigator.clipboard.writeText(text);\n    }\n  };\n\n  const formatTime = (timestamp: number): string => {\n    return new Date(timestamp * 1000).toLocaleString();\n  };\n\n  const formatBytes = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-4\">\n            <Link \n              to=\"/blocks\"\n              className=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n            </Link>\n            <Skeleton height=\"2rem\" width=\"200px\" />\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <SkeletonText height=\"1.25rem\" width=\"100%\" />\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {[...Array(6)].map((_, index) => (\n                <div key={index} className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n                  <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                    <Clock className=\"w-4 h-4\" />\n                    <span>Loading...</span>\n                  </div>\n                  <Skeleton height=\"1.5rem\" width=\"80%\" />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n          <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n            Block Transactions\n            <Skeleton height=\"1.25rem\" width=\"60px\" className=\"ml-2\" />\n          </h2>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-[#0B1017]\">\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Transaction Hash</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Size</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Fee</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Details</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-800\">\n                {[...Array(5)].map((_, index) => (\n                  <tr key={index} className=\"hover:bg-[#0B1017]/50 transition-colors\">\n                    <td className=\"px-6 py-4\">\n                      <Skeleton height=\"1.25rem\" width=\"250px\" />\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Skeleton height=\"1.25rem\" width=\"60px\" />\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Skeleton height=\"1.25rem\" width=\"80px\" />\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Skeleton height=\"1.25rem\" width=\"60px\" />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !block) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[50vh]\">\n        <div className=\"text-center max-w-lg p-8 bg-[#0E141B] rounded-lg shadow-lg border border-gray-800\">\n          <p className=\"text-red-500 mb-6\">{error || 'Block not found'}</p>\n          <Link \n            to=\"/blocks\" \n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            Return to Block Explorer\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  // Ensure we have transactions to display\n  const transactions = block.transactions || [];\n\n  // Pagination\n  const indexOfLastTx = currentPage * transactionsPerPage;\n  const indexOfFirstTx = indexOfLastTx - transactionsPerPage;\n  const currentTransactions = transactions.slice(indexOfFirstTx, indexOfLastTx);\n  const totalPages = Math.ceil(transactions.length / transactionsPerPage);\n\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <Link \n            to=\"/blocks\"\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Link>\n          <h1 className=\"text-2xl font-bold\">Block #{block.height.toLocaleString()}</h1>\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <div className=\"flex flex-col gap-4\">\n          <div className=\"flex items-center gap-2 p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n            <Hash className=\"w-5 h-5 text-orange-500 flex-shrink-0\" />\n            <span \n              className=\"font-mono text-orange-500 text-sm break-all\"\n              style={{\n                wordBreak: 'break-word',\n                overflowWrap: 'break-word'\n              }}\n            >\n              {block.hash}\n            </span>\n            <button \n              onClick={() => copyToClipboard(block.hash)}\n              className=\"p-1 hover:bg-gray-800 rounded ml-auto flex-shrink-0\"\n              title=\"Copy block hash\"\n            >\n              <Copy className=\"w-4 h-4\" />\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Clock className=\"w-4 h-4\" />\n                <span>Timestamp</span>\n              </div>\n              <div className=\"text-base font-medium\">\n                {formatTime(block.time)}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Database className=\"w-4 h-4\" />\n                <span>Size</span>\n              </div>\n              <div className=\"text-base font-medium\">\n                {formatBytes(block.size)}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Server className=\"w-4 h-4\" />\n                <span>Transactions</span>\n              </div>\n              <div className=\"text-base font-medium\">\n                {block.txCount.toLocaleString()}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Zap className=\"w-4 h-4\" />\n                <span>Miner</span>\n              </div>\n              <div className=\"text-base font-medium\">\n                {block.miner || 'Unknown'}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Database className=\"w-4 h-4\" />\n                <span>Difficulty</span>\n              </div>\n              <div className=\"text-base font-medium\">\n                {block.difficulty ? block.difficulty.toFixed(2) + ' T' : 'N/A'}\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Database className=\"w-4 h-4\" />\n                <span>Block Reward</span>\n              </div>\n              <div className=\"text-base font-medium\">\n                {block.reward ? block.reward.toFixed(8) : '3.125'} BTC\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {block.prevBlockHash && (\n              <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n                <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                  <Hash className=\"w-4 h-4\" />\n                  <span>Previous Block</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Link\n                    to={`/block/${block.prevBlockHash}`}\n                    className=\"text-blue-400 hover:text-blue-300 font-mono text-sm truncate\"\n                  >\n                    {block.prevBlockHash}\n                  </Link>\n                  <button \n                    onClick={() => copyToClipboard(block.prevBlockHash)}\n                    className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                    title=\"Copy previous block hash\"\n                  >\n                    <Copy className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {block.nextBlockHash && (\n              <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n                <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                  <Hash className=\"w-4 h-4\" />\n                  <span>Next Block</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Link\n                    to={`/block/${block.nextBlockHash}`}\n                    className=\"text-blue-400 hover:text-blue-300 font-mono text-sm truncate\"\n                  >\n                    {block.nextBlockHash}\n                  </Link>\n                  <button \n                    onClick={() => copyToClipboard(block.nextBlockHash)}\n                    className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                    title=\"Copy next block hash\"\n                  >\n                    <Copy className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {block.merkleRoot && (\n              <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n                <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                  <Hash className=\"w-4 h-4\" />\n                  <span>Merkle Root</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"font-mono text-sm truncate\">\n                    {block.merkleRoot}\n                  </span>\n                  <button \n                    onClick={() => copyToClipboard(block.merkleRoot)}\n                    className=\"p-1 hover:bg-gray-800 rounded flex-shrink-0\"\n                    title=\"Copy merkle root\"\n                  >\n                    <Copy className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            )}\n\n            <div className=\"p-4 bg-[#0B1017] rounded-lg border border-gray-800\">\n              <div className=\"flex items-center gap-2 text-gray-400 mb-2\">\n                <Database className=\"w-4 h-4\" />\n                <span>Technical Details</span>\n              </div>\n              <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                <div className=\"text-gray-400\">Version:</div>\n                <div>0x{(block.version || 0).toString(16)}</div>\n                <div className=\"text-gray-400\">Bits:</div>\n                <div>{block.bits || 'N/A'}</div>\n                <div className=\"text-gray-400\">Nonce:</div>\n                <div>{block.nonce || 'N/A'}</div>\n                <div className=\"text-gray-400\">Weight:</div>\n                <div>{formatBytes(block.weight || 0)}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800\">\n        <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n          Block Transactions\n          <span className=\"text-sm text-gray-400\">({block.txCount.toLocaleString()})</span>\n        </h2>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"bg-[#0B1017]\">\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Transaction Hash</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Size</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Fee</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Details</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-800\">\n              {currentTransactions.map((tx, index) => {\n                const isCoinbase = index === 0;\n                const fee = tx.fee ? formatBitcoinValue(tx.fee.toString()) : (isCoinbase ? 0 : Math.random() * 0.001).toFixed(8);\n                \n                return (\n                  <tr key={tx.hash || index} className={`hover:bg-[#0B1017]/50 transition-colors ${isCoinbase ? 'bg-green-900/10' : ''}`}>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex items-center\">\n                        {isCoinbase && (\n                          <span className=\"bg-green-900/20 text-green-400 text-xs px-2 py-1 rounded-md mr-2\">\n                            Coinbase\n                          </span>\n                        )}\n                        <Link\n                          to={`/tx/${tx.hash}`}\n                          className=\"text-orange-500 hover:text-orange-400 font-mono text-sm truncate max-w-[250px]\"\n                        >\n                          {tx.hash}\n                        </Link>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"text-gray-300\">{formatBytes(tx.size)}</span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"text-gray-300\">\n                        {isCoinbase ? '-' : `${fee} BTC`}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Link\n                        to={`/tx/${tx.hash}`}\n                        className=\"text-orange-500 hover:text-orange-400 inline-flex items-center gap-1\"\n                      >\n                        <span>View</span>\n                        <ArrowRight className=\"w-4 h-4\" />\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        {totalPages > 1 && (\n          <div className=\"flex items-center justify-between mt-6\">\n            <div className=\"text-sm text-gray-400\">\n              Showing {indexOfFirstTx + 1}-{Math.min(indexOfLastTx, block.txCount)} of {block.txCount} transactions\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => paginate(currentPage - 1)}\n                disabled={currentPage === 1}\n                className={`px-3 py-1 rounded-md ${\n                  currentPage === 1\n                    ? 'bg-gray-800 text-gray-500 cursor-not-allowed'\n                    : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\n                }`}\n              >\n                Previous\n              </button>\n              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                // Show pages around current page\n                let pageNum;\n                if (totalPages <= 5) {\n                  pageNum = i + 1;\n                } else if (currentPage <= 3) {\n                  pageNum = i + 1;\n                } else if (currentPage >= totalPages - 2) {\n                  pageNum = totalPages - 4 + i;\n                } else {\n                  pageNum = currentPage - 2 + i;\n                }\n                \n                return (\n                  <button\n                    key={i}\n                    onClick={() => paginate(pageNum)}\n                    className={`w-8 h-8 rounded-md ${\n                      currentPage === pageNum\n                        ? 'bg-orange-500 text-white'\n                        : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\n                    }`}\n                  >\n                    {pageNum}\n                  </button>\n                );\n              })}\n              <button\n                onClick={() => paginate(currentPage + 1)}\n                disabled={currentPage === totalPages}\n                className={`px-3 py-1 rounded-md ${\n                  currentPage === totalPages\n                    ? 'bg-gray-800 text-gray-500 cursor-not-allowed'\n                    : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\n                }`}\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { Shield, Github, Twitter } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle, Container, PageHeader } from '../components/ui';\n\nexport const About: React.FC = () => {\n  return (\n    <Container className=\"max-w-4xl mx-auto space-y-8\">\n      <PageHeader \n        title=\"About BlockHub\" \n        icon={<Shield className=\"w-8 h-8\" />}\n      />\n\n      <Card>\n        <CardContent className=\"py-8\">\n          <div className=\"prose prose-invert max-w-none\">\n            <p className=\"text-gray-300 leading-relaxed\">\n              BlockHub is a modern, real-time Bitcoin blockchain explorer designed to provide comprehensive\n              insights into Bitcoin transactions, addresses, and network activity. Our platform offers a\n              user-friendly interface for exploring the Bitcoin blockchain, with features including live\n              transaction monitoring, detailed address analysis, and access to extensive blockchain datasets.\n            </p>\n\n            <h2 className=\"text-xl font-semibold mt-8 mb-4\">Key Features</h2>\n            <ul className=\"space-y-3 text-gray-300\">\n              <li>• Real-time transaction monitoring with detailed insights</li>\n              <li>• Comprehensive address tracking and analysis</li>\n              <li>• Access to extensive Bitcoin blockchain datasets</li>\n              <li>• User-friendly interface with dark mode optimization</li>\n              <li>• Mobile-responsive design for on-the-go access</li>\n            </ul>\n\n            <h2 className=\"text-xl font-semibold mt-8 mb-4\">Technology Stack</h2>\n            <ul className=\"space-y-3 text-gray-300\">\n              <li>• React with TypeScript for robust frontend development</li>\n              <li>• Tailwind CSS for modern, responsive styling</li>\n              <li>• Real-time data updates using WebSocket connections</li>\n              <li>• Optimized performance with efficient data handling</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Connect With Us</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-wrap gap-4\">\n            <a\n              href=\"https://github.com/Pymmdrza/BlockHub\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center gap-2 px-4 py-2 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\"\n            >\n              <Github className=\"w-5 h-5\" />\n              <span>GitHub</span>\n            </a>\n            <a\n              href=\"https://twitter.com/MPymmdrza\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center gap-2 px-4 py-2 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\"\n            >\n              <Twitter className=\"w-5 h-5\" />\n              <span>Twitter</span>\n            </a>\n          </div>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};","// services/apiProxy.ts\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nclass ApiProxyService {\n  private userAgents = [\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0'\n  ];\n\n  // Method to fetch the GitHub release data.\n  async fetchReleaseData(releaseId: string | number): Promise<any> {\n    const endpoint = `https://api.github.com/repos/Pymmdrza/Rich-Address-Wallet/releases/${releaseId}/assets`;\n    // Use the existing proxyRequest method.  This is MUCH better.\n    try {\n      const response = await this.proxyRequest(endpoint, {\n          headers: {\n              'Accept': 'application/vnd.github.v3+json', // Good practice to specify the API version.\n          },\n      });\n      return response.data;\n    } catch (error) {\n        console.error('Error fetching release data:', error);\n        throw error; // Re-throw the error so the caller can handle it.\n    }\n  }\n\n  // Generic proxy method for any external API\n  async proxyRequest(\n    endpoint: string,\n    options: AxiosRequestConfig = {}\n  ): Promise<AxiosResponse> {\n    try {\n      // Add random user agent to avoid being blocked\n      const headers = {\n        ...options.headers,\n        'User-Agent': this.getRandomUserAgent()\n      };\n\n      // Make the request through our proxy endpoint\n      return await axios({\n        ...options,\n        url: `/api/proxy?endpoint=${encodeURIComponent(endpoint)}`, // Correctly encode the endpoint.\n        headers,\n      });\n    } catch (error) {\n      console.error('Error in proxy request:', error);\n      throw error;\n    }\n  }\n\n  private getRandomUserAgent(): string {\n    return this.userAgents[Math.floor(Math.random() * this.userAgents.length)];\n  }\n}\n\n// Create a singleton instance\nconst apiProxy = new ApiProxyService();\nexport default apiProxy;\n","import React, { useEffect, useState } from 'react';\nimport { Download, FileText, Database, Calendar, AlertCircle } from 'lucide-react';\nimport { formatBytes } from '../utils/format';\nimport apiProxy from '../services/apiProxy'; // Keep apiProxy\n\ninterface GitHubAsset {\n  id: number;\n  name: string;\n  content_type: string;\n  size: number;\n  download_count: number;\n  created_at: string;\n  updated_at: string;\n  browser_download_url: string;\n}\n\nexport const Datasets: React.FC = () => {\n  const [assets, setAssets] = useState<GitHubAsset[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadDatasets = async () => {\n      try {\n        setLoading(true);\n        const releaseData = await apiProxy.fetchReleaseData(201896251);\n\n        const fetchedAssets: GitHubAsset[] = releaseData.map((asset: any) => ({\n          id: asset.id,\n          name: asset.name,\n          content_type: asset.content_type,\n          size: asset.size,\n          download_count: asset.download_count,\n          created_at: asset.created_at,\n          updated_at: asset.updated_at,\n          browser_download_url: asset.browser_download_url,\n        }));\n\n        setAssets(fetchedAssets);\n        setError(null);\n      } catch (err: any) {\n        console.error('Error loading datasets:', err);\n        setError(err.message || 'Failed to load dataset information');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadDatasets();\n  }, []);\n\n\n  // ... (rest of your component: formatDate, getFileType, getFileDescription, JSX) ...\n    const formatDate = (dateString: string) => {\n        try {\n            const date = new Date(dateString);\n            if (isNaN(date.getTime())) {\n                throw new Error('Invalid date');\n            }\n            return date.toLocaleString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n            });\n        } catch {\n            return 'Recently updated';\n        }\n    };\n\n    const getFileType = (fileName: string, contentType: string): string => {\n        if (fileName.endsWith('.gz') || contentType === 'application/gzip') {\n            return 'GZIP';\n        } else if (fileName.endsWith('.tsv.gz')) {\n            return 'TSV (GZIP)';\n        } else if (fileName.endsWith('.txt.gz')) {\n            return 'TXT (GZIP)';\n        } else {\n            return contentType.split('/')[1]?.toUpperCase() || 'BINARY';\n        }\n    };\n\n    const getFileDescription = (fileName: string): string => {\n        if (fileName.includes('P2PKH')) {\n            return 'Collection of Bitcoin P2PKH addresses (starting with \"1\") with their balances and transaction counts';\n        } else if (fileName.includes('P2SH')) {\n            return 'Collection of Bitcoin P2SH addresses (starting with \"3\") with their balances and transaction counts';\n        } else if (fileName.includes('BECH32')) {\n            return 'Collection of Bitcoin BECH32 addresses (starting with \"bc1\") with their balances and transaction counts';\n        } else if (fileName.includes('Address')) {\n            return 'Complete Bitcoin address database with balances, transaction counts, and last activity';\n        } else if (fileName.includes('Addresses.tsv')) {\n            return 'Tab-separated values file containing all Bitcoin addresses with detailed information';\n        } else {\n            return 'Bitcoin blockchain data file containing address information and balances';\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center min-h-[60vh]\">\n                <div className=\"flex items-center gap-3\">\n                    <div className=\"w-5 h-5 border-2 border-orange-500 border-t-transparent rounded-full animate-spin\" />\n                    <span className=\"text-gray-400\">Loading datasets...</span>\n                </div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"flex items-center justify-center min-h-[60vh]\">\n                <div className=\"text-red-500 bg-red-500/10 px-6 py-4 rounded-lg border border-red-500/20 max-w-md text-center\">\n                    <p className=\"mb-4\">{error}</p>\n                    <button\n                        onClick={() => window.location.reload()}\n                        className=\"px-4 py-2 bg-red-500/20 hover:bg-red-500/30 rounded-lg transition-colors\"\n                    >\n                        Try Again\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"max-w-7xl mx-auto space-y-8\">\n            <div className=\"bg-[#0E141B] rounded-lg p-8 border border-gray-800\">\n                <div className=\"flex items-center gap-4 mb-8\">\n                    <Database className=\"w-8 h-8 text-orange-500\" />\n                    <div>\n                        <h1 className=\"text-2xl font-bold mb-2\">Bitcoin Datasets</h1>\n                        <p className=\"text-gray-400\">\n                            Download comprehensive Bitcoin blockchain data for research and analysis\n                        </p>\n                    </div>\n                </div>\n\n                {/* Alert section removed as fallback is removed */}\n\n                <div className=\"grid gap-6 md:grid-cols-2\">\n                    {assets.map((asset) => (\n                        <div\n                            key={asset.id}\n                            className=\"bg-[#0B1017] rounded-lg p-6 border border-gray-800 hover:border-gray-700 transition-colors group\"\n                        >\n                            <div className=\"flex flex-col h-full\">\n                                <div className=\"flex-1\">\n                                    <h3 className=\"text-lg font-semibold mb-2 text-gray-100\">\n                                        {asset.name.replace(/_/g, ' ').replace('.txt.gz', '').replace('.tsv.gz', '')}\n                                    </h3>\n                                    <p className=\"text-gray-400 text-sm mb-4\">\n                                        {getFileDescription(asset.name)}\n                                    </p>\n\n                                    <div className=\"bg-green-900/20 rounded-lg p-3 mb-4 border border-green-800/30\">\n                                        <div className=\"flex items-center gap-2 text-green-400 text-sm\">\n                                            <Calendar className=\"w-4 h-4\" />\n                                            <span>Updated: {formatDate(asset.updated_at)}</span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                                        <div className=\"flex items-center gap-1\">\n                                            <FileText className=\"w-4 h-4\" />\n                                            <span>{getFileType(asset.name, asset.content_type)}</span>\n                                        </div>\n                                        <span>•</span>\n                                        <span>{formatBytes(asset.size)}</span>\n                                    </div>\n                                </div>\n\n                                <div className=\"mt-4 pt-4 border-t border-gray-800\">\n                                    <a\n                                        href={asset.browser_download_url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"flex items-center justify-center gap-2 w-full p-2 rounded-lg bg-gray-800 text-gray-300 hover:text-orange-500 hover:bg-gray-700 transition-colors\"\n                                    >\n                                        <Download className=\"w-5 h-5\" />\n                                        <span>Download</span>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"bg-[#0E141B] rounded-lg p-8 border border-gray-800\">\n                <h2 className=\"text-xl font-bold mb-4\">Usage Guidelines</h2>\n                <div className=\"space-y-4 text-gray-300\">\n                    <p>\n                        These datasets are provided for research and analysis purposes. Please note:\n                    </p>\n                    <ul className=\"list-disc pl-6 space-y-2\">\n                        <li>Files are compressed in GZIP format to reduce download size</li>\n                        <li>Datasets are updated regularly to maintain accuracy</li>\n                        <li>Consider using a download manager for large files</li>\n                        <li>Check file integrity after download using provided checksums</li>\n                        <li>Data is sourced from the Bitcoin blockchain and updated automatically</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Home, Activity, Database, Info, Github, BarChart2, Zap, Clock, LineChart } from 'lucide-react';\n\nexport const MainNav: React.FC = () => {\n  const navItems = [\n    { to: '/', icon: <Home className=\"w-4 h-4\" />, label: 'Home' },\n    { to: '/live', icon: <Activity className=\"w-4 h-4\" />, label: 'Live Transactions' },\n    { to: '/network', icon: <BarChart2 className=\"w-4 h-4\" />, label: 'Network Stats' },\n    { to: '/mempool', icon: <Clock className=\"w-4 h-4\" />, label: 'Mempool' },\n    { to: '/blocks', icon: <Zap className=\"w-4 h-4\" />, label: 'Blocks' },\n    { to: '/charts', icon: <LineChart className=\"w-4 h-4\" />, label: 'Charts' },\n    { to: '/datasets', icon: <Database className=\"w-4 h-4\" />, label: 'Datasets' },\n    { to: '/about', icon: <Info className=\"w-4 h-4\" />, label: 'About' },\n  ];\n\n  return (\n    <div className=\"flex items-center space-x-1 overflow-x-auto pb-1 scrollbar-hide\">\n      {navItems.map((item) => (\n        <NavLink\n          key={item.to}\n          to={item.to}\n          className={({ isActive }) =>\n            `flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n              isActive\n                ? 'bg-orange-500/10 text-orange-500'\n                : 'text-gray-400 hover:text-gray-100 hover:bg-gray-800/50'\n            }`\n          }\n        >\n          <span className=\"flex items-center gap-2\">\n            {item.icon}\n            <span className=\"hidden sm:inline\">{item.label}</span>\n          </span>\n        </NavLink>\n      ))}\n      <a\n        href=\"https://github.com/Pymmdrza/BlockHub\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex items-center px-3 py-2 rounded-lg text-sm font-medium text-gray-400 hover:text-gray-100 hover:bg-gray-800/50 transition-colors\"\n      >\n        <span className=\"flex items-center gap-2\">\n          <Github className=\"w-4 h-4\" />\n          <span className=\"hidden sm:inline\">GitHub</span>\n        </span>\n      </a>\n    </div>\n  );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LineChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { ChartInfo } from '../../types';\nimport { Skeleton } from '../ui/Skeleton';\n\ninterface ChartCardProps {\n  chartInfo: ChartInfo;\n  data?: Array<{ x: number; y: number }>;\n  isLoading?: boolean;\n  showFullChart?: boolean;\n  height?: number;\n  linkTo?: string;\n}\n\nexport const ChartCard: React.FC<ChartCardProps> = ({\n  chartInfo,\n  data = [],\n  isLoading = false,\n  showFullChart = false,\n  height = 200,\n  linkTo\n}) => {\n  const formatTimestamp = (timestamp: number) => {\n    return new Date(timestamp * 1000).toLocaleDateString();\n  };\n\n  const formatValue = (value: number) => {\n    // Format based on the unit\n    if (chartInfo.unit === 'USD') {\n      // For large USD values (billions or trillions)\n      if (value >= 1000000000000) {\n        return `$${(value / 1000000000000).toFixed(2)}T`;\n      }\n      if (value >= 1000000000) {\n        return `$${(value / 1000000000).toFixed(2)}B`;\n      }\n      if (value >= 1000000) {\n        return `$${(value / 1000000).toFixed(2)}M`;\n      }\n      if (value >= 1000) {\n        return `$${(value / 1000).toFixed(2)}K`;\n      }\n      return `$${value.toFixed(2)}`;\n    }\n    \n    // For large counts\n    if (value >= 1000000000) {\n      return `${(value / 1000000000).toFixed(2)}B`;\n    }\n    if (value >= 1000000) {\n      return `${(value / 1000000).toFixed(2)}M`;\n    }\n    if (value >= 1000) {\n      return `${(value / 1000).toFixed(2)}K`;\n    }\n    \n    // Default formatting\n    return value.toFixed(2);\n  };\n\n  const getLatestValue = () => {\n    if (data.length === 0) return 'N/A';\n    const latestValue = data[data.length - 1].y;\n    return formatValue(latestValue);\n  };\n\n  const getValueChange = () => {\n    if (data.length < 2) return { value: 0, isPositive: true };\n    \n    const latestValue = data[data.length - 1].y;\n    const previousValue = data[0].y;\n    const change = ((latestValue - previousValue) / previousValue) * 100;\n    \n    return {\n      value: Math.abs(change),\n      isPositive: change >= 0\n    };\n  };\n\n  const change = getValueChange();\n\n  const renderContent = () => (\n    <>\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-white\">{chartInfo.name}</h3>\n        <p className=\"text-sm text-gray-400 mt-1\">{chartInfo.description}</p>\n      </div>\n      \n      {isLoading ? (\n        <div className=\"h-[200px] flex items-center justify-center\">\n          <Skeleton height={height} width=\"100%\" />\n        </div>\n      ) : (\n        <>\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"text-2xl font-bold\">{getLatestValue()}</div>\n            <div className={`flex items-center text-sm ${change.isPositive ? 'text-green-500' : 'text-red-500'}`}>\n              <span>{change.isPositive ? '↑' : '↓'}</span>\n              <span>{change.value.toFixed(2)}%</span>\n            </div>\n          </div>\n          \n          <div style={{ height: `${height}px` }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={data}>\n                {showFullChart && <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2D3748\" />}\n                {showFullChart && (\n                  <XAxis \n                    dataKey=\"x\" \n                    tickFormatter={formatTimestamp} \n                    stroke=\"#718096\"\n                    tick={{ fontSize: 12 }}\n                  />\n                )}\n                {showFullChart && (\n                  <YAxis \n                    tickFormatter={formatValue} \n                    stroke=\"#718096\"\n                    tick={{ fontSize: 12 }}\n                  />\n                )}\n                {showFullChart && (\n                  <Tooltip \n                    labelFormatter={(label) => new Date(label * 1000).toLocaleString()}\n                    formatter={(value: any) => [formatValue(value), chartInfo.name]}\n                    contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                    itemStyle={{ color: '#F7FAFC' }}\n                    labelStyle={{ color: '#A0AEC0' }}\n                  />\n                )}\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"y\" \n                  stroke={chartInfo.color} \n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={showFullChart ? { r: 6 } : false}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </>\n      )}\n    </>\n  );\n\n  if (linkTo) {\n    return (\n      <Link to={linkTo} className=\"block\">\n        <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800 hover:border-gray-700 transition-colors h-full\">\n          {renderContent()}\n        </div>\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800 h-full\">\n      {renderContent()}\n    </div>\n  );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BarChart2, TrendingUp, Zap, Activity } from 'lucide-react';\nimport { ChartCategory } from '../../types';\n\ninterface ChartCategorySelectorProps {\n  activeCategory?: ChartCategory;\n  className?: string;\n}\n\nexport const ChartCategorySelector: React.FC<ChartCategorySelectorProps> = ({\n  activeCategory,\n  className = ''\n}) => {\n  const categories = [\n    { id: 'market', label: 'Market', icon: <TrendingUp className=\"w-4 h-4\" />, path: '/charts/market' },\n    { id: 'blockchain', label: 'Blockchain', icon: <Activity className=\"w-4 h-4\" />, path: '/charts/blockchain' },\n    { id: 'mining', label: 'Mining', icon: <Zap className=\"w-4 h-4\" />, path: '/charts/mining' },\n    { id: 'network', label: 'Network', icon: <BarChart2 className=\"w-4 h-4\" />, path: '/charts/network' }\n  ];\n\n  return (\n    <div className={`flex items-center space-x-2 ${className}`}>\n      {categories.map((category) => (\n        <Link\n          key={category.id}\n          to={category.path}\n          className={`flex items-center gap-2 px-4 py-2 rounded-lg transition-colors ${\n            activeCategory === category.id\n              ? 'bg-orange-500/10 text-orange-500 border border-orange-500/20'\n              : 'bg-gray-800/50 text-gray-400 hover:bg-gray-800 hover:text-gray-300 border border-transparent'\n          }`}\n        >\n          {category.icon}\n          <span>{category.label}</span>\n        </Link>\n      ))}\n    </div>\n  );\n};","import React from 'react';\nimport { ChartTimeRange } from '../../types';\n\ninterface ChartTimeRangeSelectorProps {\n  selectedRange: ChartTimeRange;\n  onRangeChange: (range: ChartTimeRange) => void;\n  className?: string;\n}\n\nexport const ChartTimeRangeSelector: React.FC<ChartTimeRangeSelectorProps> = ({\n  selectedRange,\n  onRangeChange,\n  className = ''\n}) => {\n  const timeRanges: ChartTimeRange[] = [\n    { label: '1D', days: 1 },\n    { label: '1W', days: 7 },\n    { label: '1M', days: 30 },\n    { label: '3M', days: 90 },\n    { label: '1Y', days: 365 },\n    { label: 'All', days: 0 }\n  ];\n\n  return (\n    <div className={`flex items-center space-x-2 ${className}`}>\n      {timeRanges.map((range) => (\n        <button\n          key={range.label}\n          onClick={() => onRangeChange(range)}\n          className={`px-3 py-1 text-sm rounded-md transition-colors ${\n            selectedRange.label === range.label\n              ? 'bg-orange-500 text-white'\n              : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'\n          }`}\n        >\n          {range.label}\n        </button>\n      ))}\n    </div>\n  );\n};","import axios from 'axios';\nimport { ChartResponse, ChartInfo, ChartCategory, MiningPoolDistribution, MarketDominanceData } from '../types';\n\n// Base URL for blockchain.info charts API\nconst CHARTS_API_URL = '/block_api/charts';\n\n// User agents to rotate for API requests\nconst userAgents = [\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0'\n];\n\n// Get a random user agent to avoid rate limiting\nconst getRandomUserAgent = () => {\n  return userAgents[Math.floor(Math.random() * userAgents.length)];\n};\n\n// Create axios instance for blockchain.info API\nconst chartsApi = axios.create({\n  baseURL: CHARTS_API_URL,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000,\n  validateStatus: (status) => status >= 200 && status < 500\n});\n\n// Add request interceptor to rotate User-Agent\nchartsApi.interceptors.request.use((config) => {\n  config.headers['User-Agent'] = getRandomUserAgent();\n  return config;\n});\n\n/**\n * Fetch chart data from blockchain.info API\n * @param chartName Name of the chart to fetch\n * @param timespan Timespan for the chart data (e.g., '1year', '5years')\n * @param rollingAverage Rolling average period (e.g., '8hours', '1day')\n * @returns Promise with chart data\n */\nexport const fetchChartData = async (\n  chartName: string,\n  timespan: string = '1year',\n  rollingAverage: string = '8hours'\n): Promise<ChartResponse> => {\n  try {\n    const response = await chartsApi.get(`/${chartName}`, {\n      params: {\n        timespan,\n        rollingAverage,\n        format: 'json'\n      },\n      timeout: 5000\n    });\n    \n    if (!response.data || !response.data.values) {\n      console.warn(`Invalid chart data received for ${chartName}, falling back to mock data`);\n      return generateMockChartData(chartName, timespan);\n    }\n    \n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching chart data for ${chartName}:`, error);\n    \n    // Return mock data if API fails\n    return generateMockChartData(chartName, timespan);\n  }\n};\n\n/**\n * Get available charts information\n * @returns Array of chart info objects\n */\nexport const getAvailableCharts = (): ChartInfo[] => {\n  return [\n    // Market charts\n    {\n      id: 'market-price',\n      name: 'Market Price (USD)',\n      description: 'Average USD market price across major bitcoin exchanges.',\n      unit: 'USD',\n      category: 'market',\n      color: '#F59E0B'\n    },\n    {\n      id: 'trade-volume',\n      name: 'Trade Volume (USD)',\n      description: 'The total USD value of trading volume on major bitcoin exchanges.',\n      unit: 'USD',\n      category: 'market',\n      color: '#10B981'\n    },\n    {\n      id: 'market-cap',\n      name: 'Market Capitalization',\n      description: 'The total USD value of bitcoin supply in circulation.',\n      unit: 'USD',\n      category: 'market',\n      color: '#3B82F6'\n    },\n    \n    // Blockchain charts\n    {\n      id: 'n-transactions',\n      name: 'Transactions per Day',\n      description: 'The number of daily confirmed Bitcoin transactions.',\n      unit: 'Transactions',\n      category: 'blockchain',\n      color: '#8B5CF6'\n    },\n    {\n      id: 'n-transactions-per-block',\n      name: 'Transactions per Block',\n      description: 'The average number of transactions per block.',\n      unit: 'Transactions',\n      category: 'blockchain',\n      color: '#EC4899'\n    },\n    {\n      id: 'median-confirmation-time',\n      name: 'Median Confirmation Time',\n      description: 'The median time for a transaction to be accepted into a mined block.',\n      unit: 'Minutes',\n      category: 'blockchain',\n      color: '#EF4444'\n    },\n    {\n      id: 'utxo-count',\n      name: 'Unspent Transaction Outputs',\n      description: 'The total number of unspent Bitcoin transaction outputs.',\n      unit: 'Count',\n      category: 'blockchain',\n      color: '#F97316'\n    },\n    \n    // Mining charts\n    {\n      id: 'hash-rate',\n      name: 'Hash Rate',\n      description: 'The estimated number of terahashes per second the Bitcoin network is performing.',\n      unit: 'TH/s',\n      category: 'mining',\n      color: '#06B6D4'\n    },\n    {\n      id: 'difficulty',\n      name: 'Difficulty',\n      description: 'A relative measure of how difficult it is to mine a new block.',\n      unit: '',\n      category: 'mining',\n      color: '#6366F1'\n    },\n    {\n      id: 'miners-revenue',\n      name: 'Miners Revenue',\n      description: 'Total value of coinbase block rewards and transaction fees paid to miners.',\n      unit: 'USD',\n      category: 'mining',\n      color: '#D97706'\n    },\n    {\n      id: 'transaction-fees',\n      name: 'Transaction Fees',\n      description: 'The total value of all transaction fees paid to miners.',\n      unit: 'BTC',\n      category: 'mining',\n      color: '#DC2626'\n    },\n    {\n      id: 'cost-per-transaction-percent',\n      name: 'Cost % of Transaction Volume',\n      description: 'Miners revenue as percentage of the transaction volume.',\n      unit: '%',\n      category: 'mining',\n      color: '#7C3AED'\n    },\n    \n    // Network charts\n    {\n      id: 'mempool-size',\n      name: 'Mempool Size',\n      description: 'The aggregate size of transactions waiting to be confirmed.',\n      unit: 'Bytes',\n      category: 'network',\n      color: '#2563EB'\n    },\n    {\n      id: 'mempool-count',\n      name: 'Mempool Transaction Count',\n      description: 'The number of unconfirmed transactions in the mempool.',\n      unit: 'Count',\n      category: 'network',\n      color: '#059669'\n    },\n    {\n      id: 'mempool-growth',\n      name: 'Mempool Growth',\n      description: 'The rate at which the mempool is growing per second.',\n      unit: 'Bytes/s',\n      category: 'network',\n      color: '#DB2777'\n    },\n    {\n      id: 'unspent-transactions',\n      name: 'Unspent Transactions',\n      description: 'The number of unspent transactions outputs (UTXO set size).',\n      unit: 'Count',\n      category: 'network',\n      color: '#9333EA'\n    }\n  ];\n};\n\n/**\n * Get charts by category\n * @param category Category to filter by\n * @returns Array of chart info objects for the specified category\n */\nexport const getChartsByCategory = (category: ChartCategory): ChartInfo[] => {\n  return getAvailableCharts().filter(chart => chart.category === category);\n};\n\n/**\n * Get mining pool distribution data\n * @returns Array of mining pool distribution data\n */\nexport const getMiningPoolDistribution = async (): Promise<MiningPoolDistribution[]> => {\n  try {\n    const response = await axios.get('/block_api/pools?timespan=4days', {\n      timeout: 5000\n    });\n    \n    if (!response.data || !Array.isArray(response.data)) {\n      console.warn('Invalid mining pool data received, falling back to mock data');\n      return generateMockMiningPoolDistribution();\n    }\n    \n    // Process and return the mining pool distribution data\n    return response.data.map((pool: any) => ({\n      name: pool.name,\n      share: pool.percentage,\n      color: getRandomColor(pool.name)\n    }));\n  } catch (error) {\n    console.error('Error fetching mining pool distribution:', error);\n    \n    // Return mock data if API fails\n    return generateMockMiningPoolDistribution();\n  }\n};\n\n/**\n * Get market dominance data\n * @returns Array of market dominance data\n */\nexport const getMarketDominance = async (): Promise<MarketDominanceData[]> => {\n  // This is mock data as blockchain.info doesn't provide this directly\n  return [\n    { name: 'Bitcoin', value: 52.3, color: '#F7931A' },\n    { name: 'Ethereum', value: 18.7, color: '#627EEA' },\n    { name: 'BNB', value: 3.2, color: '#F3BA2F' },\n    { name: 'Solana', value: 2.8, color: '#00FFA3' },\n    { name: 'XRP', value: 2.1, color: '#23292F' },\n    { name: 'Others', value: 20.9, color: '#8884D8' }\n  ];\n};\n\n// Helper functions\n\n/**\n * Generate a random color based on a string\n * @param str String to generate color from\n * @returns Hex color code\n */\nconst getRandomColor = (str: string): string => {\n  // Generate a hash from the string\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  \n  // Convert hash to RGB\n  const r = (hash & 0xFF0000) >> 16;\n  const g = (hash & 0x00FF00) >> 8;\n  const b = hash & 0x0000FF;\n  \n  // Ensure colors are vibrant enough\n  const minBrightness = 50; // Minimum brightness value\n  const r2 = Math.max(r, minBrightness);\n  const g2 = Math.max(g, minBrightness);\n  const b2 = Math.max(b, minBrightness);\n  \n  return `#${r2.toString(16).padStart(2, '0')}${g2.toString(16).padStart(2, '0')}${b2.toString(16).padStart(2, '0')}`;\n};\n\n// Mock data generators\n\n/**\n * Generate mock chart data\n * @param chartName Name of the chart\n * @param timespan Timespan for the chart data\n * @returns Mock chart data\n */\nconst generateMockChartData = (chartName: string, timespan: string): ChartResponse => {\n  const now = Date.now();\n  const days = timespan.includes('year') \n    ? timespan.includes('5') ? 1825 : 365 \n    : timespan.includes('month') \n      ? timespan.includes('6') ? 180 : 30 \n      : timespan.includes('week') ? 7 : 1;\n  \n  const interval = (days * 24 * 60 * 60 * 1000) / 100; // 100 data points\n  const startTime = now - (days * 24 * 60 * 60 * 1000);\n  \n  // Generate values based on chart name\n  const values = Array.from({ length: 100 }, (_, i) => {\n    const timestamp = Math.floor((startTime + (i * interval)) / 1000);\n    let value = 0;\n    \n    switch (chartName) {\n      case 'market-price':\n        // Simulate Bitcoin price between $30,000 and $70,000\n        value = 30000 + (Math.sin(i / 10) + 1) * 20000 + Math.random() * 5000;\n        break;\n      case 'hash-rate':\n        // Simulate hash rate between 300 and 400 EH/s\n        value = 300 + (Math.sin(i / 15) + 1) * 50 + Math.random() * 10;\n        break;\n      case 'difficulty':\n        // Simulate difficulty between 70T and 90T\n        value = 70 + (Math.sin(i / 20) + 1) * 10 + Math.random() * 2;\n        break;\n      case 'n-transactions':\n        // Simulate daily transactions between 300,000 and 500,000\n        value = 300000 + (Math.sin(i / 8) + 1) * 100000 + Math.random() * 20000;\n        break;\n      case 'mempool-size':\n        // Simulate mempool size between 100MB and 300MB\n        value = 100 + (Math.sin(i / 5) + 1) * 100 + Math.random() * 30;\n        break;\n      case 'market-cap':\n        // Simulate market cap between $600B and $1.4T\n        value = 600000000000 + (Math.sin(i / 12) + 1) * 400000000000 + Math.random() * 50000000000;\n        break;\n      case 'trade-volume':\n        // Simulate trade volume between $20B and $60B\n        value = 20000000000 + (Math.sin(i / 7) + 1) * 20000000000 + Math.random() * 5000000000;\n        break;\n      default:\n        // Generic random value between 0 and 100\n        value = (Math.sin(i / 10) + 1) * 50 + Math.random() * 10;\n    }\n    \n    return { x: timestamp, y: value };\n  });\n  \n  // Get chart info\n  const chartInfo = getAvailableCharts().find(chart => chart.id === chartName) || {\n    id: chartName,\n    name: chartName,\n    description: 'Chart data',\n    unit: '',\n    category: 'blockchain' as ChartCategory,\n    color: '#3B82F6'\n  };\n  \n  return {\n    status: 'ok',\n    name: chartInfo.name,\n    unit: chartInfo.unit,\n    period: 'day',\n    description: chartInfo.description,\n    values\n  };\n};\n\n/**\n * Generate mock mining pool distribution data\n * @returns Mock mining pool distribution data\n */\nconst generateMockMiningPoolDistribution = (): MiningPoolDistribution[] => {\n  return [\n    { name: 'Foundry USA', share: 32.5, color: '#F97316' },\n    { name: 'AntPool', share: 18.7, color: '#10B981' },\n    { name: 'F2Pool', share: 14.2, color: '#3B82F6' },\n    { name: 'Binance Pool', share: 11.8, color: '#F59E0B' },\n    { name: 'ViaBTC', share: 8.3, color: '#8B5CF6' },\n    { name: 'SlushPool', share: 7.5, color: '#EC4899' },\n    { name: 'Poolin', share: 4.2, color: '#EF4444' },\n    { name: 'Unknown', share: 2.8, color: '#6B7280' }\n  ];\n};\n\nexport default {\n  fetchChartData,\n  getAvailableCharts,\n  getChartsByCategory,\n  getMiningPoolDistribution,\n  getMarketDominance\n};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TrendingUp } from 'lucide-react';\nimport { Container, PageHeader } from '../../components/ui';\nimport { ChartCard } from '../../components/charts/ChartCard';\nimport { ChartCategorySelector } from '../../components/charts/ChartCategorySelector';\nimport { ChartTimeRangeSelector } from '../../components/charts/ChartTimeRangeSelector';\nimport { ChartInfo, ChartResponse, ChartTimeRange } from '../../types';\nimport { getChartsByCategory, fetchChartData } from '../../utils/chartsApi';\n\nexport const MarketCharts: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [charts, setCharts] = useState<ChartInfo[]>([]);\n  const [chartData, setChartData] = useState<Record<string, ChartResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedChart, setSelectedChart] = useState<string | null>(searchParams.get('chart'));\n  const [timeRange, setTimeRange] = useState<ChartTimeRange>({ label: '1Y', days: 365 });\n\n  useEffect(() => {\n    const loadCharts = async () => {\n      setIsLoading(true);\n      \n      // Get all market charts\n      const marketCharts = getChartsByCategory('market');\n      setCharts(marketCharts);\n      \n      // If a chart is selected in the URL, use that, otherwise use the first chart\n      const chartId = selectedChart || marketCharts[0]?.id;\n      if (chartId) {\n        setSelectedChart(chartId);\n        \n        // Convert time range to timespan parameter\n        const timespan = timeRangeToTimespan(timeRange);\n        \n        try {\n          // Fetch data for the selected chart\n          const data = await fetchChartData(chartId, timespan);\n          setChartData({ [chartId]: data });\n        } catch (error) {\n          console.error('Error loading chart data:', error);\n        }\n      }\n      \n      setIsLoading(false);\n    };\n    \n    loadCharts();\n  }, [selectedChart, timeRange]);\n\n  // Convert time range to timespan parameter for the API\n  const timeRangeToTimespan = (range: ChartTimeRange): string => {\n    if (range.days === 0) return 'all';\n    if (range.days >= 365) return `${Math.floor(range.days / 365)}years`;\n    if (range.days >= 30) return `${Math.floor(range.days / 30)}months`;\n    if (range.days >= 7) return `${Math.floor(range.days / 7)}weeks`;\n    return `${range.days}days`;\n  };\n\n  // Handle chart selection\n  const handleChartSelect = (chartId: string) => {\n    setSelectedChart(chartId);\n    setSearchParams({ chart: chartId });\n  };\n\n  // Handle time range change\n  const handleTimeRangeChange = (range: ChartTimeRange) => {\n    setTimeRange(range);\n  };\n\n  // Get the selected chart info\n  const selectedChartInfo = charts.find(chart => chart.id === selectedChart) || charts[0];\n\n  return (\n    <Container>\n      <PageHeader \n        title=\"Market Charts\" \n        description=\"Explore Bitcoin market data and trends\"\n        icon={<TrendingUp className=\"w-8 h-8\" />}\n      />\n      \n      <ChartCategorySelector activeCategory=\"market\" className=\"mb-8\" />\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"lg:col-span-1 space-y-4\">\n          <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n            <h3 className=\"text-lg font-semibold mb-4\">Available Charts</h3>\n            <div className=\"space-y-2\">\n              {charts.map(chart => (\n                <button\n                  key={chart.id}\n                  onClick={() => handleChartSelect(chart.id)}\n                  className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                    selectedChart === chart.id\n                      ? 'bg-orange-500/10 text-orange-500 border border-orange-500/20'\n                      : 'hover:bg-gray-800 text-gray-300'\n                  }`}\n                >\n                  {chart.name}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-[#0E141B] rounded-lg border border-gray-800 p-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-6\">\n              <h2 className=\"text-xl font-bold\">{selectedChartInfo?.name}</h2>\n              <ChartTimeRangeSelector \n                selectedRange={timeRange}\n                onRangeChange={handleTimeRangeChange}\n              />\n            </div>\n            \n            {selectedChartInfo && (\n              <ChartCard \n                chartInfo={selectedChartInfo}\n                data={chartData[selectedChartInfo.id]?.values}\n                isLoading={isLoading}\n                showFullChart\n                height={400}\n              />\n            )}\n            \n            <div className=\"mt-6 text-sm text-gray-400\">\n              <p>{selectedChartInfo?.description}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Activity } from 'lucide-react';\nimport { Container, PageHeader } from '../../components/ui';\nimport { ChartCard } from '../../components/charts/ChartCard';\nimport { ChartCategorySelector } from '../../components/charts/ChartCategorySelector';\nimport { ChartTimeRangeSelector } from '../../components/charts/ChartTimeRangeSelector';\nimport { ChartInfo, ChartResponse, ChartTimeRange } from '../../types';\nimport { getChartsByCategory, fetchChartData } from '../../utils/chartsApi';\n\nexport const BlockchainCharts: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [charts, setCharts] = useState<ChartInfo[]>([]);\n  const [chartData, setChartData] = useState<Record<string, ChartResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedChart, setSelectedChart] = useState<string | null>(searchParams.get('chart'));\n  const [timeRange, setTimeRange] = useState<ChartTimeRange>({ label: '1Y', days: 365 });\n\n  useEffect(() => {\n    const loadCharts = async () => {\n      setIsLoading(true);\n      \n      // Get all blockchain charts\n      const blockchainCharts = getChartsByCategory('blockchain');\n      setCharts(blockchainCharts);\n      \n      // If a chart is selected in the URL, use that, otherwise use the first chart\n      const chartId = selectedChart || blockchainCharts[0]?.id;\n      if (chartId) {\n        setSelectedChart(chartId);\n        \n        // Convert time range to timespan parameter\n        const timespan = timeRangeToTimespan(timeRange);\n        \n        try {\n          // Fetch data for the selected chart\n          const data = await fetchChartData(chartId, timespan);\n          setChartData({ [chartId]: data });\n        } catch (error) {\n          console.error('Error loading chart data:', error);\n        }\n      }\n      \n      setIsLoading(false);\n    };\n    \n    loadCharts();\n  }, [selectedChart, timeRange]);\n\n  // Convert time range to timespan parameter for the API\n  const timeRangeToTimespan = (range: ChartTimeRange): string => {\n    if (range.days === 0) return 'all';\n    if (range.days >= 365) return `${Math.floor(range.days / 365)}years`;\n    if (range.days >= 30) return `${Math.floor(range.days / 30)}months`;\n    if (range.days >= 7) return `${Math.floor(range.days / 7)}weeks`;\n    return `${range.days}days`;\n  };\n\n  // Handle chart selection\n  const handleChartSelect = (chartId: string) => {\n    setSelectedChart(chartId);\n    setSearchParams({ chart: chartId });\n  };\n\n  // Handle time range change\n  const handleTimeRangeChange = (range: ChartTimeRange) => {\n    setTimeRange(range);\n  };\n\n  // Get the selected chart info\n  const selectedChartInfo = charts.find(chart => chart.id === selectedChart) || charts[0];\n\n  return (\n    <Container>\n      <PageHeader \n        title=\"Blockchain Charts\" \n        description=\"Explore Bitcoin blockchain data and trends\"\n        icon={<Activity className=\"w-8 h-8\" />}\n      />\n      \n      <ChartCategorySelector activeCategory=\"blockchain\" className=\"mb-8\" />\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"lg:col-span-1 space-y-4\">\n          <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n            <h3 className=\"text-lg font-semibold mb-4\">Available Charts</h3>\n            <div className=\"space-y-2\">\n              {charts.map(chart => (\n                <button\n                  key={chart.id}\n                  onClick={() => handleChartSelect(chart.id)}\n                  className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                    selectedChart === chart.id\n                      ? 'bg-orange-500/10 text-orange-500 border border-orange-500/20'\n                      : 'hover:bg-gray-800 text-gray-300'\n                  }`}\n                >\n                  {chart.name}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-[#0E141B] rounded-lg border border-gray-800 p-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-6\">\n              <h2 className=\"text-xl font-bold\">{selectedChartInfo?.name}</h2>\n              <ChartTimeRangeSelector \n                selectedRange={timeRange}\n                onRangeChange={handleTimeRangeChange}\n              />\n            </div>\n            \n            {selectedChartInfo && (\n              <ChartCard \n                chartInfo={selectedChartInfo}\n                data={chartData[selectedChartInfo.id]?.values}\n                isLoading={isLoading}\n                showFullChart\n                height={400}\n              />\n            )}\n            \n            <div className=\"mt-6 text-sm text-gray-400\">\n              <p>{selectedChartInfo?.description}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};","import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';\nimport { Skeleton } from '../ui/Skeleton';\n\ninterface PieChartCardProps {\n  title: string;\n  description?: string;\n  data: Array<{\n    name: string;\n    value: number;\n    color: string;\n  }>;\n  isLoading?: boolean;\n  height?: number;\n  valueFormatter?: (value: number) => string;\n}\n\nexport const PieChartCard: React.FC<PieChartCardProps> = ({\n  title,\n  description,\n  data,\n  isLoading = false,\n  height = 300,\n  valueFormatter = (value) => `${value.toFixed(2)}%`\n}) => {\n  return (\n    <div className=\"bg-[#0E141B] rounded-lg p-6 border border-gray-800 h-full\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-white\">{title}</h3>\n        {description && <p className=\"text-sm text-gray-400 mt-1\">{description}</p>}\n      </div>\n      \n      {isLoading ? (\n        <div className=\"h-[300px] flex items-center justify-center\">\n          <Skeleton height={height} width=\"100%\" />\n        </div>\n      ) : (\n        <div style={{ height: `${height}px` }}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={data}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(1)}%`}\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip \n                formatter={(value: any) => [valueFormatter(value), 'Share']}\n                contentStyle={{ backgroundColor: '#1A202C', borderColor: '#2D3748' }}\n                itemStyle={{ color: '#F7FAFC' }}\n                labelStyle={{ color: '#A0AEC0' }}\n              />\n              <Legend \n                layout=\"vertical\" \n                verticalAlign=\"middle\" \n                align=\"right\"\n                formatter={(value, entry, index) => (\n                  <span style={{ color: '#A0AEC0' }}>{value}</span>\n                )}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Zap } from 'lucide-react';\nimport { Container, PageHeader } from '../../components/ui';\nimport { ChartCard } from '../../components/charts/ChartCard';\nimport { ChartCategorySelector } from '../../components/charts/ChartCategorySelector';\nimport { ChartTimeRangeSelector } from '../../components/charts/ChartTimeRangeSelector';\nimport { PieChartCard } from '../../components/charts/PieChartCard';\nimport { ChartInfo, ChartResponse, ChartTimeRange, MiningPoolDistribution } from '../../types';\nimport { getChartsByCategory, fetchChartData, getMiningPoolDistribution } from '../../utils/chartsApi';\n\nexport const MiningCharts: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [charts, setCharts] = useState<ChartInfo[]>([]);\n  const [chartData, setChartData] = useState<Record<string, ChartResponse>>({});\n  const [poolDistribution, setPoolDistribution] = useState<MiningPoolDistribution[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPoolsLoading, setIsPoolsLoading] = useState(true);\n  const [selectedChart, setSelectedChart] = useState<string | null>(searchParams.get('chart'));\n  const [timeRange, setTimeRange] = useState<ChartTimeRange>({ label: '1Y', days: 365 });\n\n  useEffect(() => {\n    const loadCharts = async () => {\n      setIsLoading(true);\n      \n      // Get all mining charts\n      const miningCharts = getChartsByCategory('mining');\n      setCharts(miningCharts);\n      \n      // If a chart is selected in the URL, use that, otherwise use the first chart\n      const chartId = selectedChart || miningCharts[0]?.id;\n      if (chartId) {\n        setSelectedChart(chartId);\n        \n        // Convert time range to timespan parameter\n        const timespan = timeRangeToTimespan(timeRange);\n        \n        try {\n          // Fetch data for the selected chart\n          const data = await fetchChartData(chartId, timespan);\n          setChartData({ [chartId]: data });\n        } catch (error) {\n          console.error('Error loading chart data:', error);\n        }\n      }\n      \n      setIsLoading(false);\n    };\n    \n    const loadPoolDistribution = async () => {\n      setIsPoolsLoading(true);\n      try {\n        const pools = await getMiningPoolDistribution();\n        setPoolDistribution(pools);\n      } catch (error) {\n        console.error('Error loading mining pool distribution:', error);\n      } finally {\n        setIsPoolsLoading(false);\n      }\n    };\n    \n    loadCharts();\n    loadPoolDistribution();\n  }, [selectedChart, timeRange]);\n\n  // Convert time range to timespan parameter for the API\n  const timeRangeToTimespan = (range: ChartTimeRange): string => {\n    if (range.days === 0) return 'all';\n    if (range.days >= 365) return `${Math.floor(range.days / 365)}years`;\n    if (range.days >= 30) return `${Math.floor(range.days / 30)}months`;\n    if (range.days >= 7) return `${Math.floor(range.days / 7)}weeks`;\n    return `${range.days}days`;\n  };\n\n  // Handle chart selection\n  const handleChartSelect = (chartId: string) => {\n    setSelectedChart(chartId);\n    setSearchParams({ chart: chartId });\n  };\n\n  // Handle time range change\n  const handleTimeRangeChange = (range: ChartTimeRange) => {\n    setTimeRange(range);\n  };\n\n  // Get the selected chart info\n  const selectedChartInfo = charts.find(chart => chart.id === selectedChart) || charts[0];\n\n  return (\n    <Container>\n      <PageHeader \n        title=\"Mining Charts\" \n        description=\"Explore Bitcoin mining data and trends\"\n        icon={<Zap className=\"w-8 h-8\" />}\n      />\n      \n      <ChartCategorySelector activeCategory=\"mining\" className=\"mb-8\" />\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"lg:col-span-1 space-y-4\">\n          <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n            <h3 className=\"text-lg font-semibold mb-4\">Available Charts</h3>\n            <div className=\"space-y-2\">\n              {charts.map(chart => (\n                <button\n                  key={chart.id}\n                  onClick={() => handleChartSelect(chart.id)}\n                  className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                    selectedChart === chart.id\n                      ? 'bg-orange-500/10 text-orange-500 border border-orange-500/20'\n                      : 'hover:bg-gray-800 text-gray-300'\n                  }`}\n                >\n                  {chart.name}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          <PieChartCard \n            title=\"Mining Pool Distribution\"\n            description=\"Share of blocks mined by mining pools in the last 4 days\"\n            data={poolDistribution}\n            isLoading={isPoolsLoading}\n            height={300}\n          />\n        </div>\n        \n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-[#0E141B] rounded-lg border border-gray-800 p-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-6\">\n              <h2 className=\"text-xl font-bold\">{selectedChartInfo?.name}</h2>\n              <ChartTimeRangeSelector \n                selectedRange={timeRange}\n                onRangeChange={handleTimeRangeChange}\n              />\n            </div>\n            \n            {selectedChartInfo && (\n              <ChartCard \n                chartInfo={selectedChartInfo}\n                data={chartData[selectedChartInfo.id]?.values}\n                isLoading={isLoading}\n                showFullChart\n                height={400}\n              />\n            )}\n            \n            <div className=\"mt-6 text-sm text-gray-400\">\n              <p>{selectedChartInfo?.description}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BarChart2 } from 'lucide-react';\nimport { Container, PageHeader } from '../../components/ui';\nimport { ChartCard } from '../../components/charts/ChartCard';\nimport { ChartCategorySelector } from '../../components/charts/ChartCategorySelector';\nimport { ChartTimeRangeSelector } from '../../components/charts/ChartTimeRangeSelector';\nimport { ChartInfo, ChartResponse, ChartTimeRange } from '../../types';\nimport { getChartsByCategory, fetchChartData } from '../../utils/chartsApi';\n\nexport const NetworkCharts: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [charts, setCharts] = useState<ChartInfo[]>([]);\n  const [chartData, setChartData] = useState<Record<string, ChartResponse>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedChart, setSelectedChart] = useState<string | null>(searchParams.get('chart'));\n  const [timeRange, setTimeRange] = useState<ChartTimeRange>({ label: '1Y', days: 365 });\n\n  useEffect(() => {\n    const loadCharts = async () => {\n      setIsLoading(true);\n      \n      // Get all network charts\n      const networkCharts = getChartsByCategory('network');\n      setCharts(networkCharts);\n      \n      // If a chart is selected in the URL, use that, otherwise use the first chart\n      const chartId = selectedChart || networkCharts[0]?.id;\n      if (chartId) {\n        setSelectedChart(chartId);\n        \n        // Convert time range to timespan parameter\n        const timespan = timeRangeToTimespan(timeRange);\n        \n        try {\n          // Fetch data for the selected chart\n          const data = await fetchChartData(chartId, timespan);\n          setChartData({ [chartId]: data });\n        } catch (error) {\n          console.error('Error loading chart data:', error);\n        }\n      }\n      \n      setIsLoading(false);\n    };\n    \n    loadCharts();\n  }, [selectedChart, timeRange]);\n\n  // Convert time range to timespan parameter for the API\n  const timeRangeToTimespan = (range: ChartTimeRange): string => {\n    if (range.days === 0) return 'all';\n    if (range.days >= 365) return `${Math.floor(range.days / 365)}years`;\n    if (range.days >= 30) return `${Math.floor(range.days / 30)}months`;\n    if (range.days >= 7) return `${Math.floor(range.days / 7)}weeks`;\n    return `${range.days}days`;\n  };\n\n  // Handle chart selection\n  const handleChartSelect = (chartId: string) => {\n    setSelectedChart(chartId);\n    setSearchParams({ chart: chartId });\n  };\n\n  // Handle time range change\n  const handleTimeRangeChange = (range: ChartTimeRange) => {\n    setTimeRange(range);\n  };\n\n  // Get the selected chart info\n  const selectedChartInfo = charts.find(chart => chart.id === selectedChart) || charts[0];\n\n  return (\n    <Container>\n      <PageHeader \n        title=\"Network Charts\" \n        description=\"Explore Bitcoin network data and trends\"\n        icon={<BarChart2 className=\"w-8 h-8\" />}\n      />\n      \n      <ChartCategorySelector activeCategory=\"network\" className=\"mb-8\" />\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"lg:col-span-1 space-y-4\">\n          <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n            <h3 className=\"text-lg font-semibold mb-4\">Available Charts</h3>\n            <div className=\"space-y-2\">\n              {charts.map(chart => (\n                <button\n                  key={chart.id}\n                  onClick={() => handleChartSelect(chart.id)}\n                  className={`w-full text-left px-4 py-2 rounded-lg transition-colors ${\n                    selectedChart === chart.id\n                      ? 'bg-orange-500/10 text-orange-500 border border-orange-500/20'\n                      : 'hover:bg-gray-800 text-gray-300'\n                  }`}\n                >\n                  {chart.name}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"bg-[#0E141B] rounded-lg p-4 border border-gray-800\">\n            <h3 className=\"text-lg font-semibold mb-4\">Network Health</h3>\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-sm text-gray-400\">Mempool Status</span>\n                  <span className=\"text-sm text-yellow-400\">Moderate</span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                  <div className=\"bg-yellow-500 h-2 rounded-full\" style={{ width: '65%' }}></div>\n                </div>\n              </div>\n              <div>\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-sm text-gray-400\">Fee Pressure</span>\n                  <span className=\"text-sm text-orange-400\">High</span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                  <div className=\"bg-orange-500 h-2 rounded-full\" style={{ width: '78%' }}></div>\n                </div>\n              </div>\n              <div>\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-sm text-gray-400\">Network Security</span>\n                  <span className=\"text-sm text-green-400\">Excellent</span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                  <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-[#0E141B] rounded-lg border border-gray-800 p-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-6\">\n              <h2 className=\"text-xl font-bold\">{selectedChartInfo?.name}</h2>\n              <ChartTimeRangeSelector \n                selectedRange={timeRange}\n                onRangeChange={handleTimeRangeChange}\n              />\n            </div>\n            \n            {selectedChartInfo && (\n              <ChartCard \n                chartInfo={selectedChartInfo}\n                data={chartData[selectedChartInfo.id]?.values}\n                isLoading={isLoading}\n                showFullChart\n                height={400}\n              />\n            )}\n            \n            <div className=\"mt-6 text-sm text-gray-400\">\n              <p>{selectedChartInfo?.description}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LineChart, TrendingUp, BarChart2, Zap, Activity, ArrowRight } from 'lucide-react';\nimport { Container, PageHeader, Spinner } from '../../components/ui';\nimport { ChartCard } from '../../components/charts/ChartCard';\nimport { ChartCategorySelector } from '../../components/charts/ChartCategorySelector';\nimport { ChartInfo, ChartResponse } from '../../types';\nimport { getChartsByCategory, fetchChartData } from '../../utils/chartsApi';\n\nexport const ChartExplorer: React.FC = () => {\n  const [marketCharts, setMarketCharts] = useState<ChartInfo[]>([]);\n  const [blockchainCharts, setBlockchainCharts] = useState<ChartInfo[]>([]);\n  const [miningCharts, setMiningCharts] = useState<ChartInfo[]>([]);\n  const [networkCharts, setNetworkCharts] = useState<ChartInfo[]>([]);\n  \n  const [marketData, setMarketData] = useState<Record<string, ChartResponse>>({});\n  const [blockchainData, setBlockchainData] = useState<Record<string, ChartResponse>>({});\n  const [miningData, setMiningData] = useState<Record<string, ChartResponse>>({});\n  const [networkData, setNetworkData] = useState<Record<string, ChartResponse>>({});\n  \n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadCharts = async () => {\n      setIsLoading(true);\n      \n      // Get charts by category\n      const market = getChartsByCategory('market').slice(0, 2);\n      const blockchain = getChartsByCategory('blockchain').slice(0, 2);\n      const mining = getChartsByCategory('mining').slice(0, 2);\n      const network = getChartsByCategory('network').slice(0, 2);\n      \n      setMarketCharts(market);\n      setBlockchainCharts(blockchain);\n      setMiningCharts(mining);\n      setNetworkCharts(network);\n      \n      // Fetch data for each chart\n      const fetchChartDataWithTimeout = async (chartId: string) => {\n        try {\n          const data = await fetchChartData(chartId, '1month');\n          return { id: chartId, data };\n        } catch (error) {\n          console.error(`Error fetching data for chart ${chartId}:`, error);\n          // Return mock data\n          return { \n            id: chartId, \n            data: {\n              status: 'ok',\n              name: 'Mock Data',\n              unit: '',\n              period: 'day',\n              description: 'Mock data for chart',\n              values: Array(30).fill(0).map((_, i) => ({\n                x: Math.floor(Date.now() / 1000) - (30 - i) * 86400,\n                y: 100 + Math.random() * 50\n              }))\n            } \n          };\n        }\n      };\n      \n      try {\n        // Fetch data for each category in parallel\n        const [marketResults, blockchainResults, miningResults, networkResults] = await Promise.all([\n          Promise.all(market.map(chart => fetchChartDataWithTimeout(chart.id))),\n          Promise.all(blockchain.map(chart => fetchChartDataWithTimeout(chart.id))),\n          Promise.all(mining.map(chart => fetchChartDataWithTimeout(chart.id))),\n          Promise.all(network.map(chart => fetchChartDataWithTimeout(chart.id)))\n        ]);\n        \n        // Convert results to record objects\n        const marketDataRecord: Record<string, ChartResponse> = {};\n        marketResults.forEach(result => {\n          marketDataRecord[result.id] = result.data;\n        });\n        \n        const blockchainDataRecord: Record<string, ChartResponse> = {};\n        blockchainResults.forEach(result => {\n          blockchainDataRecord[result.id] = result.data;\n        });\n        \n        const miningDataRecord: Record<string, ChartResponse> = {};\n        miningResults.forEach(result => {\n          miningDataRecord[result.id] = result.data;\n        });\n        \n        const networkDataRecord: Record<string, ChartResponse> = {};\n        networkResults.forEach(result => {\n          networkDataRecord[result.id] = result.data;\n        });\n        \n        setMarketData(marketDataRecord);\n        setBlockchainData(blockchainDataRecord);\n        setMiningData(miningDataRecord);\n        setNetworkData(networkDataRecord);\n      } catch (error) {\n        console.error('Error loading chart data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    loadCharts();\n  }, []);\n\n  return (\n    <Container>\n      <PageHeader \n        title=\"Bitcoin Charts\" \n        description=\"Explore historical Bitcoin data and trends\"\n        icon={<LineChart className=\"w-8 h-8\" />}\n      />\n      \n      <ChartCategorySelector className=\"mb-8\" />\n      \n      {isLoading ? (\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"flex flex-col items-center gap-4\">\n            <Spinner />\n            <p className=\"text-gray-400\">Loading charts...</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-12\">\n          {/* Market Charts */}\n          <div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <TrendingUp className=\"w-5 h-5 text-orange-500\" />\n                <h2 className=\"text-xl font-bold\">Market</h2>\n              </div>\n              <Link \n                to=\"/charts/market\" \n                className=\"text-orange-500 hover:text-orange-400 flex items-center gap-1\"\n              >\n                View all <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {marketCharts.map(chart => (\n                <ChartCard \n                  key={chart.id}\n                  chartInfo={chart}\n                  data={marketData[chart.id]?.values}\n                  isLoading={false}\n                  linkTo={`/charts/market?chart=${chart.id}`}\n                />\n              ))}\n            </div>\n          </div>\n          \n          {/* Blockchain Charts */}\n          <div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <Activity className=\"w-5 h-5 text-blue-500\" />\n                <h2 className=\"text-xl font-bold\">Blockchain</h2>\n              </div>\n              <Link \n                to=\"/charts/blockchain\" \n                className=\"text-orange-500 hover:text-orange-400 flex items-center gap-1\"\n              >\n                View all <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {blockchainCharts.map(chart => (\n                <ChartCard \n                  key={chart.id}\n                  chartInfo={chart}\n                  data={blockchainData[chart.id]?.values}\n                  isLoading={false}\n                  linkTo={`/charts/blockchain?chart=${chart.id}`}\n                />\n              ))}\n            </div>\n          </div>\n          \n          {/* Mining Charts */}\n          <div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <Zap className=\"w-5 h-5 text-yellow-500\" />\n                <h2 className=\"text-xl font-bold\">Mining</h2>\n              </div>\n              <Link \n                to=\"/charts/mining\" \n                className=\"text-orange-500 hover:text-orange-400 flex items-center gap-1\"\n              >\n                View all <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {miningCharts.map(chart => (\n                <ChartCard \n                  key={chart.id}\n                  chartInfo={chart}\n                  data={miningData[chart.id]?.values}\n                  isLoading={false}\n                  linkTo={`/charts/mining?chart=${chart.id}`}\n                />\n              ))}\n            </div>\n          </div>\n          \n          {/* Network Charts */}\n          <div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <BarChart2 className=\"w-5 h-5 text-green-500\" />\n                <h2 className=\"text-xl font-bold\">Network</h2>\n              </div>\n              <Link \n                to=\"/charts/network\" \n                className=\"text-orange-500 hover:text-orange-400 flex items-center gap-1\"\n              >\n                View all <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {networkCharts.map(chart => (\n                <ChartCard \n                  key={chart.id}\n                  chartInfo={chart}\n                  data={networkData[chart.id]?.values}\n                  isLoading={false}\n                  linkTo={`/charts/network?chart=${chart.id}`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n};","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { Address } from './pages/Address';\nimport { Transaction } from './pages/Transaction';\nimport { LiveTransactions } from './pages/LiveTransactions';\nimport { NetworkStats } from './pages/NetworkStats';\nimport { MempoolExplorer } from './pages/MempoolExplorer';\nimport { BlockExplorer } from './pages/BlockExplorer';\nimport { BlockDetails } from './pages/BlockDetails';\nimport { About } from './pages/About';\nimport { Datasets } from './pages/Datasets';\nimport { MainNav } from './components/MainNav';\nimport { Shield } from 'lucide-react';\nimport { isBitcoinAddress, isTransactionId, isBlockHash, isBlockHeight } from './utils/validation';\nimport { MarketCharts } from './pages/charts/MarketCharts';\nimport { BlockchainCharts } from './pages/charts/BlockchainCharts';\nimport { MiningCharts } from './pages/charts/MiningCharts';\nimport { NetworkCharts } from './pages/charts/NetworkCharts';\nimport { ChartExplorer } from './pages/charts/ChartExplorer';\n\nfunction HeaderSearch() {\n  const navigate = useNavigate();\n  const [query, setQuery] = useState('');\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    const trimmedQuery = query.trim();\n    if (!trimmedQuery) return;\n\n    // Check if it's a block height (numeric)\n    if (/^\\d+$/.test(trimmedQuery) && isBlockHeight(parseInt(trimmedQuery, 10))) {\n      navigate(`/block/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n\n    // Check if it's a block hash\n    if (isBlockHash(trimmedQuery)) {\n      navigate(`/block/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n\n    // Check if it's a Bitcoin address\n    if (isBitcoinAddress(trimmedQuery)) {\n      navigate(`/address/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n\n    // Check if it's a transaction ID\n    if (isTransactionId(trimmedQuery)) {\n      navigate(`/tx/${trimmedQuery}`);\n      setQuery('');\n      return;\n    }\n    \n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSearch} className=\"flex-1 max-w-xl\">\n      <div className=\"relative\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Search address, transaction, block hash or height...\"\n          className=\"w-full px-4 py-2 bg-[#0B1017] border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 text-sm text-gray-200 placeholder-gray-500\"\n        />\n      </div>\n    </form>\n  );\n}\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"min-h-screen bg-[#0B1017] text-gray-100 flex flex-col\">\n        <nav className=\"sticky top-0 z-50 bg-[#0E141B] shadow-md border-b border-gray-800\">\n          <div className=\"max-w-7xl mx-auto px-4\">\n            <div className=\"flex flex-col gap-2 py-3\">\n              <div className=\"flex items-center justify-between gap-4\">\n                <Link to=\"/\" className=\"flex items-center space-x-2 flex-shrink-0\">\n                  <Shield className=\"w-6 h-6 text-orange-500\" />\n                  <span className=\"text-xl font-bold\">BlockHub</span>\n                </Link>\n                \n                <HeaderSearch />\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <MainNav />\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        <main className=\"flex-grow\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/address/:address\" element={<Address />} />\n            <Route path=\"/tx/:txid\" element={<Transaction />} />\n            <Route path=\"/live\" element={<LiveTransactions />} />\n            <Route path=\"/network\" element={<NetworkStats />} />\n            <Route path=\"/mempool\" element={<MempoolExplorer />} />\n            <Route path=\"/blocks\" element={<BlockExplorer />} />\n            <Route path=\"/block/:hashOrHeight\" element={<BlockDetails />} />\n            <Route path=\"/datasets\" element={<Datasets />} />\n            <Route path=\"/about\" element={<About />} />\n            \n            {/* Charts routes */}\n            <Route path=\"/charts\" element={<ChartExplorer />} />\n            <Route path=\"/charts/market\" element={<MarketCharts />} />\n            <Route path=\"/charts/blockchain\" element={<BlockchainCharts />} />\n            <Route path=\"/charts/mining\" element={<MiningCharts />} />\n            <Route path=\"/charts/network\" element={<NetworkCharts />} />\n          </Routes>\n        </main>\n\n        <footer className=\"bg-[#0E141B] border-t border-gray-800 py-4\">\n          <div className=\"container mx-auto px-4 text-center\">\n            <p className=\"text-xs text-gray-500\">\n              Developed by{' '}\n              <a \n                href=\"https://github.com/Pymmdrza\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                className=\"text-gray-400 hover:text-orange-500 transition-colors\"\n              >\n                Pymmdrza\n              </a>\n            </p>\n          </div>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","createRoot","hydrateRoot","isBitcoinAddress","address","test","isTransactionId","txid","substring","isBlockHash","hash","isBlockHeight","height","Notification","message","isVisible","onClose","useEffect","timer","setTimeout","clearTimeout","className","children","jsxRuntimeExports","AlertCircle","CheckCircle","SearchBar","query","setQuery","useState","error","setError","showNotification","setShowNotification","navigate","useNavigate","Fragment","onSubmit","preventDefault","trimmedQuery","trim","validationError","input","trimmedInput","parseInt","length","validateInput","value","onChange","target","placeholder","Search","bind","fn","thisArg","apply","arguments","toString","getPrototypeOf","kindOf","thing","str","cache","slice","toLowerCase","create","kindOfTest","typeOfTest","isArray","Array","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","map","forEach","obj","allOwnKeys","i","keys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","Math","random","callbacks","addEventListener","source","data","shift","cb","push","asap","queueMicrotask","process","nextTick","utils$1","isBuffer","constructor","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","extend","replace","stripBOM","content","charCodeAt","inherits","superConstructor","defineProperty","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","lastIndex","indexOf","toArray","arr","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","isThenable","then","catch","AxiosError","code","config","request","response","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","from","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","join","predicates","toFormData","formData","options","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","buildURL","url","_encode","serialize","serializeFn","serializedParams","hashmarkIndex","encoder","InterceptorManager","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","transitionalDefaults","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","platform$1","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","platform","formDataToJSON","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Accept","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","parseHeaders","get","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","mapped","headerValue","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","speedometer","lastArgs","timestamp","threshold","invoke","args","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isURLSameOrigin","isMSIE","URL","protocol","host","port","userAgent","cookies","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","resolveConfig","newConfig","auth","btoa","username","password","unescape","Boolean","xsrfValue","xhrAdapter","XMLHttpRequest","Promise","_config","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","err","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","readStream","async","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","knownAdapters","http","xhr","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","flush","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","version","opt","opts","desc","formatMessage","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","userAgents","getRandomUserAgent","blockchainApi","blockchainapi","cachedBlockHeight","getLatestBlockHeight","_a","blockApi","stats","latestBlock","difficulty","hashRate","parseFloat","unconfirmedTxs","n_btc","blockHeight","_b","latestBlockHash","_c","nextRetargetBlock","ceil","_d","mempoolSize","mempool_size","totalTransactions","n_tx","avgBlockTime","minutes_between_blocks","avgTransactionFee","total_fees_btc","marketCap","market_price_usd","totalbc","txCount24h","n_tx_24h","btcSent24h","total_btc_sent","primaryError","altResponse","bitcoinApi","retryRequest","retries","ms","extractMinerFromCoinbase","miner","miners","fetchLatestBlocks","limit","blocks","block","time","txCount","generateMockBlocks","calculateBlockReward","halvings","pow","fetchNetworkStats","formatBitcoinValue","numValue","isNaN","btcValue","toFixed","Card","hover","onClick","CardHeader","CardTitle","CardContent","Skeleton","width","borderRadius","animate","style","SkeletonText","lines","StatCard","title","icon","trend","isLoading","chartData","chartColor","isPositive","abs","ResponsiveContainer","LineChart","Line","dataKey","stroke","strokeWidth","dot","isAnimationActive","Spinner","sm","md","lg","Container","PageHeader","backLink","actions","Link","to","ArrowLeft","formatNumber","num","notation","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatCurrency","currency","Intl","NumberFormat","formatBytes","sizes","log","Home","price","setPrice","latestBlocks","setLatestBlocks","networkStats","setNetworkStats","setIsLoading","isPriceLoading","setIsPriceLoading","isNetworkStatsLoading","setIsNetworkStatsLoading","isBlocksLoading","setIsBlocksLoading","hashRateHistory","setHashRateHistory","priceHistory","setPriceHistory","mempoolHistory","setMempoolHistory","blockHeightHistory","setBlockHeightHistory","loadData","priceData","ids","vs_currencies","include_24hr_change","bitcoin","USD","last","usd","symbol","change_24h","usd_24h_change","fetchBitcoinPrice","priceHistoryData","fluctuation","loadPrice","statsData","hashRateData","mempoolData","blockHeightData","blocksBack","loadNetworkStats","blocksData","loadBlocks","interval","setInterval","clearInterval","formatTimeAgo","seconds","Bitcoin","BarChart2","Clock","Database","Activity","DollarSign","TrendingUp","Zap","blocksRemaining","minutesRemaining","daysRemaining","hoursRemaining","getBlocksUntilRetarget","ArrowRight","Address","useParams","setData","loading","setLoading","processedTransactions","transactions","tx","blockTime","sort","balance","totalReceived","totalSent","unconfirmedBalance","txs","txids","values","errorMessage","fetchAddressInfo","Loader2","Wallet","wordBreak","overflowWrap","copyToClipboard","text","clipboard","writeText","Copy","ArrowUpRight","ArrowDownRight","History","Calendar","Transaction","confirmations","fees","vin","addresses","vout","output","fetchTransactionInfo","confirmationStatus","CheckCircle2","hasValidInputs","hasValidOutputs","Hash","Scale","Layers","HardDrive","addr","LiveTransactions","setTransactions","isConnected","setIsConnected","filterValue","setFilterValue","timeoutRef","useRef","fetchTransactions","newTxs","inputs","prev_out","outputs","out","inputs_value","fetchLiveTransactions","prev","combined","Map","formatTime","minutes","formatValue","getTotalValue","reduce","sum","filteredTransactions","Filter","totalValue","websocketService","urlOrUrls","socket","reconnectAttempts","maxReconnectAttempts","reconnectTimeout","subscriptions","messageCallbacks","errorCallback","pingInterval","useMockData","currentEndpointIndex","endpoints","connect","connectToEndpoint","endpoint","WebSocket","connectionTimeout","OPEN","onopen","resubscribe","startPingInterval","onmessage","handleMessage","onclose","stopPingInterval","attemptReconnect","op","sanitizedData","sanitizeData","item","sanitized","includes","ping","handleConnectionFailure","subscription","sub","onMessage","onError","disconnect","isUsingMockData","subscribeToNewBlocks","unsubscribeFromNewBlocks","subscribeToNewTransactions","unsubscribeFromNewTransactions","subscribeToAddress","unsubscribeFromAddress","startsWith","getWebSocketUrl","NetworkStats","setStats","difficultyHistory","setDifficultyHistory","feeHistory","setFeeHistory","txCountHistory","setTxCountHistory","btcSentHistory","setBtcSentHistory","newBlockCount","setNewBlockCount","newTxCount","setNewTxCount","intervalRef","UPDATE_INTERVAL","DATA_POINTS","hourlyInterval","initialHashRate","baseValue","hourOfDay","getHours","timeOfDayFactor","shouldShowAdjustment","adjustmentHour","initialDifficulty","initialMempool","timeFactor","initialFee","initialTxCount","dayOfWeek","getDay","weekendFactor","hourFactor","initialBtcSent","whaleFactor","x","lastTimestamp","lastValue","newValue","latestHashRate","latestDifficulty","latestMempoolSize","latestFee","formatTimestamp","toLocaleTimeString","hour","minute","formatDateTimestamp","month","day","Server","AreaChart","CartesianGrid","strokeDasharray","XAxis","tickFormatter","tick","fontSize","scale","YAxis","Tooltip","labelFormatter","formatter","contentStyle","backgroundColor","borderColor","itemStyle","color","labelStyle","Area","fill","fillOpacity","activeDot","r","Legend","MempoolExplorer","feeRanges","setFeeRanges","label","max","count","totalSize","selectedFeeRange","setSelectedFeeRange","totalMempoolSize","setTotalMempoolSize","feeRate","txWithFee","range","generateMockData","mockTransactions","mockFeeRanges","mockTotalSize","ver","vin_sz","vout_sz","lock_time","relayed_by","tx_index","script","spent","sequence","formatFeeRate","find","percentage","feeRangeColor","idx","BlockExplorer","setBlocks","newBlock","nTx","getMinerFromCoinbase","BlockDetails","hashOrHeight","setBlock","currentPage","setCurrentPage","transactionsPerPage","blockData","processedData","prevBlockHash","prev_block","nextBlockHash","next_block","merkleRoot","mrkl_root","bits","nonce","weight","fee","reward","_f","_e","fetchBlockDetails","indexOfLastTx","indexOfFirstTx","currentTransactions","totalPages","paginate","pageNumber","isCoinbase","disabled","pageNum","About","Shield","rel","Github","Twitter","apiProxy","fetchReleaseData","releaseId","proxyRequest","Datasets","assets","setAssets","fetchedAssets","asset","content_type","download_count","created_at","updated_at","browser_download_url","formatDate","dateString","date","getTime","year","getFileType","reload","FileText","Download","MainNav","navItems","Info","NavLink","isActive","ChartCard","chartInfo","showFullChart","linkTo","toLocaleDateString","unit","getLatestValue","latestValue","y","change","previousValue","getValueChange","renderContent","ChartCategorySelector","activeCategory","categories","category","ChartTimeRangeSelector","selectedRange","onRangeChange","days","chartsApi","fetchChartData","chartName","timespan","rollingAverage","generateMockChartData","getChartsByCategory","chart","getRandomColor","r2","g2","b2","padStart","startTime","sin","period","generateMockMiningPoolDistribution","share","MarketCharts","searchParams","setSearchParams","useSearchParams","charts","setCharts","setChartData","selectedChart","setSelectedChart","timeRange","setTimeRange","marketCharts","chartId","timeRangeToTimespan","selectedChartInfo","handleChartSelect","BlockchainCharts","blockchainCharts","PieChartCard","valueFormatter","PieChart","Pie","cx","cy","labelLine","outerRadius","percent","entry","Cell","layout","verticalAlign","align","MiningCharts","poolDistribution","setPoolDistribution","isPoolsLoading","setIsPoolsLoading","miningCharts","pools","pool","getMiningPoolDistribution","NetworkCharts","networkCharts","ChartExplorer","setMarketCharts","setBlockchainCharts","setMiningCharts","setNetworkCharts","marketData","setMarketData","blockchainData","setBlockchainData","miningData","setMiningData","networkData","setNetworkData","market","blockchain","mining","network","fetchChartDataWithTimeout","marketResults","blockchainResults","miningResults","networkResults","marketDataRecord","blockchainDataRecord","miningDataRecord","networkDataRecord","HeaderSearch","App","Router","basename","Routes","Route","element","getElementById","render","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}