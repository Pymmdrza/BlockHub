# Nginx configuration for BlockHub

upstream btc_api {
    server bitcoin.atomicwallet.io:443;
    keepalive 32;
    keepalive_timeout 65;
    keepalive_requests 100;
}

upstream block_api {
    server blockchain.info:443;
    keepalive 32;
    keepalive_timeout 65;
    keepalive_requests 100;
}

map $http_origin $cors_origin {
    default "*";
    "~^https?://localhost(:[0-9]+)?$" "$http_origin";
    "~^https?://${DOMAIN}$" "$http_origin";
}

server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN};

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
    gzip_disable "MSIE [1-6]\.";

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; connect-src 'self' https://bitcoin.atomicwallet.io https://blockchain.info https://api.coingecko.com;" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Handle CORS preflight requests
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    location /api/v2/ {
        proxy_pass https://btc_api/api/v2/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host bitcoin.atomicwallet.io;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Accept 'application/json';
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_redirect off;

        # Set User-Agent and Referer headers
        proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36";
        proxy_set_header Referer "https://atomicwallet.io/";

        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @error_handler;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    location /block_api/ {
        proxy_pass https://block_api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host blockchain.info;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Accept 'application/json';
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_redirect off;

        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @error_handler;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # Error handler location
    location @error_handler {
        default_type application/json;
        return 502 '{"error": "Bad Gateway", "message": "The server encountered a temporary error and could not complete your request"}';
    }

    # Cache static assets
    location /assets/ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'OK';
    }
}